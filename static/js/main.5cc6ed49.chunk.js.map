{"version":3,"sources":["models/math.ts","models/accountFunctions.ts","models/account.ts","features/accounts/accountsSlice.ts","constants.js","features/navigation/TopAppBar.tsx","features/navigation/SideDrawer.js","components/AddEditDialog.tsx","features/journals/AddEditTransactionDialog.tsx","features/accounts/AddEditJournalDialog.tsx","features/accounts/AddEditJournalColumnDialog.tsx","features/accounts/EditJournalColumnOrderDialog.tsx","features/journals/JournalSheet.tsx","features/journals/AddJournalTab.tsx","features/journals/Journals.tsx","features/capital-changes/CapitalChanges.js","features/asset-statements/AssetStatements.js","features/accounts/AddEditAssetDialog.tsx","components/SettingsSection.tsx","components/IconButtonHeading.tsx","features/accounts/AccountMainSettings.tsx","components/DeleteButton.tsx","features/accounts/AccountAssetsSettings.tsx","features/accounts/AccountJournalsSettings.tsx","features/accounts/AccountSettings.tsx","App.js","features/navigation/navigationSlice.ts","app/store.ts","reportWebVitals.js","index.js"],"names":["roundDown","value","decimals","undefined","isFinite","BigNumber","decimalPlaces","ROUND_DOWN","dateToString","date","time","dateString","String","getFullYear","padStart","getMonth","getDate","getHours","getMinutes","getSeconds","journalColumnRoleDisplay","role","toFixed","getJournalColumn","journal","columns","extra","getDecimalColumnPrecision","column","baseTicker","quoteTicker","assets","base","find","a","ticker","quote","description","precision","NaN","pricePrecision","console","warn","formatTransactionDecimalColumn","isNaN","transactionDataDisplay","transaction","data","dateLocale","quoteAmount","div","baseAmount","abs","toNumber","name","isDecimalColumn","isDateColumn","showTime","Date","toLocaleString","toLocaleDateString","isBooleanColumn","type","isAssetColumn","isTextColumn","isDecimalColumnDescription","obj","indexOf","isBaseAmountColumn","isQuoteAmountColumn","isExtraColumn","isIntegerColumn","defaultColumnOrder","defaultAccountSettings","accountingCurrency","isCurrency","symbol","defaultAssets","defaultJournals","createTradingJournal","feeBase","feeQuote","notes","createExpenseJournal","createTradingColumns","hide","price","createIncomeColumns","createExpenseColumns","createDefaultJournal","columnOrder","transactions","createIncomeJournal","accountsSlice","createSlice","initialState","accounts","activeAccount","reducers","switchAccount","state","action","accountIndex","payload","Math","floor","max","addAccount","push","addDefaultAccount","settings","journals","createDefaultAccount","addTransaction","account","journalIndex","i","length","splice","JSON","stringify","editTransaction","log","changeAccountingCurrency","currency","addAsset","asset","editAsset","index","deleteAsset","addJournal","addDefaultJournal","editJournalSettings","deleteJournal","addJournalColumn","extraColumnsLength","editJournalColumn","isPriceColumn","deleteJournalColumn","columnIndex","deletedColIndex","colIndex","editJournalColumnOrder","actions","selectAccounts","selectActiveAccountIndex","selectActiveAccount","selectActiveAccountName","selectActiveAccountAccountingCurrency","selectActiveAccountAssets","selectActiveAccountAssetsAll","selectActiveAccountJournals","drawerWidth","useStyles","makeStyles","theme","root","menuButton","marginRight","spacing","display","props","drawerOpen","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarDrawerOpen","marginLeft","width","enteringScreen","TopAppBar","classes","useState","menuAnchor","setMenuAnchor","dispatch","useDispatch","useSelector","activeAccountIndex","activeAccountName","Fragment","AppBar","position","className","clsx","Toolbar","IconButton","onClick","onMenuClick","color","aria-label","Typography","variant","e","currentTarget","aria-haspopup","Menu","anchorEl","open","Boolean","onClose","map","MenuItem","handleSwitchAccount","selected","toolbar","alignItems","justifyContent","padding","mixins","whiteSpace","drawerClose","overflowX","breakpoints","up","SideDrawer","path","useLocation","pathname","Drawer","anchor","paper","Divider","List","component","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","ListSubheader","inset","disableSticky","content","maxWidth","contentMaxWidth","AddEditDialog","objectName","Dialog","onEnter","DialogTitle","edit","DialogContent","dividers","children","DialogActions","Button","onReset","onSubmit","initialFormFields","fee","feeCurrency","AddEditTransactionDialog","transactionIndex","onDialogClose","fields","setFields","basePrecision","quotePrecision","handleFieldChange","target","s","newFields","times","resetForm","defaultType","negated","Grid","container","item","xs","TextField","size","label","fullWidth","required","inputProps","step","onChange","InputLabelProps","shrink","helperText","min","pow","select","multiline","AddEditJournalDialog","handleReset","Box","mt","removeButton","palette","error","main","DecimalColumnSettings","disableDescription","onDescriptionChange","onPrecisionChange","newPrecisionFields","onNewPrecisionFieldsChange","onNewPrecisionFieldsReset","disabled","Object","entries","t","p","parseInt","newPrecision","handleDeletePrecision","ticker2","decimalColumnDescription","AddEditJournalColumnDialog","setNewPrecisionFields","allAssets","handleResetNewPrecisionFields","addOrEditJournalColumn","newColumn","newType","partialColumn","FormControlLabel","control","Checkbox","checked","labelPlacement","newDescription","listItem","paddingRight","editHide","EditJournalColumnOrderDialog","displayRoleDefault","dialogColumnOrder","setDialogColumnOrder","hiddenColumns","setHiddenColumns","displayRole","setDisplayRole","newHiddenColumns","forEach","handleReorderColumn","newIndex","newColumnOrder","oldColumn","newHide","Switch","dense","disableGutters","divider","secondaryAction","Tooltip","title","disableRipple","ListItemSecondaryAction","hiddenIndex","handleToggleHide","edge","useJournalHeadersStyles","borderBottom","borderRight","JournalHeaders","onEditColumnSettings","onEditJournalSettings","onEditColumnLayout","TableRow","TableCell","flexGrow","fontSize","style","align","useJournalRowStyles","JournalRow","onEdit","onDelete","hover","table","borderRadius","boxShadow","fab","bottom","right","JournalSheet","transactionDialogOpen","setTransactionDialogOpen","selectedTransaction","setSelectedTransaction","journalSettingsDialogOpen","setJournalSettingsDialogOpen","journalColumnOrderDialogOpen","setJournalColumnOrderDialogOpen","journalColumnDialogOpen","setJournalColumnDialogOpen","selectedJournalColumn","setSelectedJournalColumn","TableContainer","Paper","Table","stickyHeader","TableHead","TableBody","_","j","tx","Fab","AddJournalTab","Journals","activeTab","setActiveTab","Tabs","v","Tab","icon","CapitalChanges","AssetStatements","AddEditAssetDialog","paddingTop","paddingBottom","paddingLeft","SettingsSection","elevation","marginBottom","IconButtonHeading","gutterBottom","buttonColor","AccountMainSettings","accountingCurrencyDialogOpen","setAccountingCurrencyDialogOpen","DeleteButton","buttonSize","iconSize","tableRow","cursor","AccountAssetsSettings","addEditAssetDialogOpen","setAddEditAssetDialogOpen","selectedAsset","setSelectedAsset","stopPropagation","handleDeleteAsset","useJournalColumnRowStyles","JournalColumnRow","journalColumn","keys","mainRow","collapsibleCell","columnOrderChip","onAddColumn","onEditColumn","onEditColumnOrder","setOpen","colSpan","Collapse","in","timeout","unmountOnExit","margin","flexWrap","c","Chip","AccountJournalsSettings","addEditJournalDialogOpen","setAddEditJournalDialogOpen","addEditJournalColumnDialogOpen","setAddEditJournalColumnDialogOpen","editJournalColumnOrderDialogOpen","setEditJournalColumnOrderDialogOpen","selectedJournal","setSelectedJournal","openEditColumnDialog","AccountSettings","Container","my","App","openDrawer","bind","closeDrawer","this","setState","React","Component","connect","navigationSlice","user","changeUser","store","configureStore","reducer","navigation","navigationReducer","accountsReducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.5cc6ed49.chunk.js","sourcesContent":["import BigNumber from \"bignumber.js\";\r\n\r\n/**\r\n * Rounds down a number to the given decimal places. Returns the original number if decimals is not given or not finite.\r\n * @param value The number to round down.\r\n * @param decimals The number of decimal places to round down to.\r\n */\r\nexport function roundDown(value: BigNumber.Value, decimals?: number): BigNumber {\r\n  if (decimals === undefined || !isFinite(decimals) || decimals < 0) {\r\n    return new BigNumber(value);\r\n  }\r\n  return new BigNumber(value).decimalPlaces(decimals, BigNumber.ROUND_DOWN);\r\n}","import BigNumber from \"bignumber.js\";\r\nimport {\r\n  Asset,\r\n  Transaction,\r\n  Journal,\r\n  DateColumn,\r\n  AssetColumn,\r\n  DecimalColumn,\r\n  BaseAmountColumn,\r\n  QuoteAmountColumn,\r\n  PriceColumn,\r\n  TextColumn,\r\n  ExtraColumn,\r\n  JournalColumn,\r\n  JournalColumnRole,\r\n  JournalColumnType,\r\n  isDecimalColumn,\r\n  isBooleanColumn,\r\n  isDateColumn,\r\n} from \"./account\";\r\nimport { roundDown } from \"./math\";\r\n\r\n/**\r\n * Convert a date to \"yyyy-mm-ddThh:mm:ss\" or \"yyyy-mm-dd\". Compatible with DateColumn.\r\n */\r\nexport function dateToString(date: Date, time: boolean = true) {\r\n  let dateString = `${String(date.getFullYear()).padStart(4, '0')}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;\r\n  if (!time) {\r\n    return dateString;\r\n  }\r\n  return `${dateString}T${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}:${String(date.getSeconds()).padStart(2, '0')}`;\r\n}\r\n\r\nexport function journalColumnRoleDisplay(role: JournalColumnRole | undefined | null) {\r\n  switch (role) {\r\n    case undefined:\r\n    case null:\r\n      return null;\r\n    case 'date':\r\n      return 'Date';\r\n    case 'base':\r\n      return 'Base';\r\n    case 'baseAmount':\r\n      return 'Base amount';\r\n    case 'quote':\r\n      return 'Quote';\r\n    case 'quoteAmount':\r\n      return 'Quote amount';\r\n    case 'price':\r\n      return 'Price';\r\n    case 'feeBase':\r\n      return 'Base fee';\r\n    case 'feeQuote':\r\n      return 'Quote fee';\r\n    case 'notes':\r\n      return 'Notes';\r\n    default:    // Implicit typeof role = number\r\n      return `Extra (${(role + 1).toFixed()})`;\r\n  }\r\n}\r\n\r\n// This code is too janky, use overloads instead, see below\r\n// export function getJournalColumn<T extends JournalColumnRole>(journal: Journal, role: T): T extends number ? ExtraColumn : JournalColumn {\r\n//   if (typeof role === 'number') {\r\n//     return journal.columns.extra[role as number] as T extends number ? ExtraColumn : JournalColumn;\r\n//   } else {\r\n//     return journal.columns[role as JournalCoreColumnRole] as T extends number ? ExtraColumn : JournalColumn;\r\n//   }\r\n// }\r\n\r\n// TODO add tests\r\n// TODO note that this can sometimes return undefined (index out of range)\r\nexport function getJournalColumn(journal: Journal, role: number): ExtraColumn;\r\nexport function getJournalColumn(journal: Journal, role: 'date'): DateColumn;\r\nexport function getJournalColumn(journal: Journal, role: 'base' | 'quote'): AssetColumn;\r\nexport function getJournalColumn(journal: Journal, role: 'baseAmount' | 'feeBase'): BaseAmountColumn;\r\nexport function getJournalColumn(journal: Journal, role: 'quoteAmount' | 'feeQuote'): QuoteAmountColumn;\r\nexport function getJournalColumn(journal: Journal, role: 'price'): PriceColumn;\r\nexport function getJournalColumn(journal: Journal, role: 'baseAmount' | 'feeBase' | 'quoteAmount' | 'feeQuote' | 'price'): DecimalColumn;\r\nexport function getJournalColumn(journal: Journal, role: 'notes'): TextColumn;\r\nexport function getJournalColumn(journal: Journal, role: Exclude<JournalColumnRole, number>): JournalColumn;\r\nexport function getJournalColumn(journal: Journal, role: JournalColumnRole): JournalColumn;\r\nexport function getJournalColumn(journal: Journal, role: JournalColumnRole) {\r\n  if (typeof role === 'number') {\r\n    return journal.columns.extra[role];\r\n  } else {\r\n    return journal.columns[role];\r\n  }\r\n}\r\n\r\nexport function isRightAlignJournalColumnType(type: JournalColumnType): boolean {\r\n  return ['date', 'integer', 'decimal'].indexOf(type) !== -1;\r\n}\r\n\r\n/**\r\n * Gets a Decimal Journal Columns's precision from the column settings or default precision.\r\n * @param column The Decimal Column settings.\r\n * @param baseTicker The ticker of the base asset/currency. Empty strings are invalid.\r\n * @param quoteTicker The ticker of the quote asset/currency. Empty strings are invalid.\r\n * @param assets The assets to get the precision from. The baseTicker and quoteTicker will attempt to get the precision here.\r\n * @returns The precision (number of decimal places) of this column, or NaN if unable get a precision.\r\n */\r\nexport function getDecimalColumnPrecision(column: DecimalColumn, baseTicker: string, quoteTicker: string, assets: Asset[] = []): number {\r\n  const base = baseTicker ? assets.find(a => a.ticker === baseTicker) : undefined;\r\n  const quote = quoteTicker ? assets.find(a => a.ticker === quoteTicker) : undefined;\r\n  switch (column.description) {\r\n    case 'base':\r\n      return baseTicker ? (column.precision[baseTicker] ?? base?.precision ?? NaN) : NaN;\r\n    case 'quote':\r\n      return quoteTicker ? (column.precision[quoteTicker] ?? quote?.precision ?? NaN) : NaN;\r\n    case 'price':\r\n      return (baseTicker && quoteTicker) ? (column.precision[`${baseTicker}/${quoteTicker}`] ?? base?.pricePrecision ?? NaN) : NaN;\r\n    default:\r\n      console.warn(`getDecimalColumnPrecision: Uncatched deciaml column description: ${column.description}.`);\r\n      return NaN;\r\n  }\r\n}\r\n\r\n/**\r\n * Formats a transaction's value to the correct decimal places depending on the column and asset settings.\r\n * @param value The value to format. String values are attempted to be coerced into numbers.\r\n * @param column The column settings.\r\n * @param baseTicker The ticker of the base asset/currency.\r\n * @param quoteTicker The ticker of the quote asset/currency.\r\n * @param assets The assets to get the settings of. The baseTicker and quoteTicker will attempt to get the settings here.\r\n * @returns A formatted string with the correct decimal places, or the original value of could not get the precision settings.\r\n */\r\nfunction formatTransactionDecimalColumn(value: number | string, column: DecimalColumn, baseTicker: string, quoteTicker: string, assets: Asset[] = []): string {\r\n  if (new BigNumber(value).isFinite()) {\r\n    const precision = getDecimalColumnPrecision(column, baseTicker, quoteTicker, assets);\r\n    return isNaN(precision) ? new BigNumber(value).toFixed() : roundDown(value, precision).toFixed(precision);\r\n  } else if (typeof value === 'number' && !isFinite(value)) {\r\n    return '';\r\n  }\r\n  return String(value);\r\n}\r\n// TODO find way to convert number <-> string <-> boolean\r\n/**\r\n * Format a transaction value to display in a table to the user.\r\n * @param transaction The transaction to format.\r\n * @param role The column of the transaction to display.\r\n * @param journal The journal to get the column settings from.\r\n * @param assets A list of assets to get the precision settings from (for decimal columns).\r\n * @returns A formatted string representing the transaction's value to be displayed to the user.\r\n */\r\nexport function transactionDataDisplay(transaction: Transaction, role: JournalColumnRole, journal: Journal, assets: Asset[] = [], dateLocale?: string): string {\r\n  const column = getJournalColumn(journal, role);\r\n  // Could be undefined due to extra column does not exist\r\n  let data: number | string | boolean | undefined;\r\n  if (role === 'price') {\r\n    data = new BigNumber(transaction.quoteAmount).div(new BigNumber(transaction.baseAmount)).abs().toNumber();\r\n  } else if (typeof role === 'number') {\r\n    data = transaction.extra[column.name];\r\n  } else {\r\n    data = transaction[role];\r\n  }\r\n\r\n  if (isDecimalColumn(column) && (typeof data === 'number' || typeof data === 'string')) {\r\n    return formatTransactionDecimalColumn(data, column, transaction.base, transaction.quote, assets);\r\n  } else if (isDateColumn(column) && typeof data === 'string') {\r\n    return column.showTime ? new Date(data).toLocaleString(dateLocale) : new Date(data).toLocaleDateString(dateLocale);\r\n  } else if (isBooleanColumn(column)) {\r\n    return data ? 'Yes' : 'No';\r\n  } else if (data === undefined || (typeof data === 'number' && !isFinite(data))) {\r\n    return '';\r\n  }\r\n  return String(data);\r\n}","export * from './accountFunctions';\r\n\r\n/**\r\n * A trading account.\r\n * @param name Name of the account.\r\n * @param settings The account settings.\r\n * @param assets Managed assets of the account.\r\n * @param journals List of journals to manage transactions.\r\n */\r\nexport interface Account {\r\n  name: string;\r\n  settings: AccountSettings;\r\n  assets: Asset[];\r\n  journals: Journal[];\r\n}\r\n/**\r\n * Account settings.\r\n * @param accountingCurrency The accounting currency of the account.\r\n */\r\nexport interface AccountSettings {\r\n  accountingCurrency: Asset;\r\n}\r\n\r\n/**\r\n * Asset settings.\r\n * @param ticker Ticker of the asset, e.g. BTC. This is the unique identifier of an asset.\r\n * @param name Name of the asset, e.g. Bitcoin.\r\n * @param precision The precision used to record amounts.\r\n * @param pricePrecision The default precision used to show prices.\r\n * @param isCurrency true if the asset is a currency.\r\n * @param symbol Optional. Symbol of the asset, e.g. '₿'.\r\n */\r\nexport interface Asset {\r\n  // TODO: Ticker only letters, numbers and period (.)\r\n  ticker: string;\r\n  name: string;\r\n  precision: number;\r\n  pricePrecision: number;\r\n  isCurrency: boolean;\r\n  symbol?: string;\r\n}\r\n\r\nexport type JournalType = 'trading' | 'income' | 'expense';\r\nexport function isJournalType(obj: any): obj is JournalType {\r\n  return typeof obj === 'string' && ['trading', 'income', 'expense'].indexOf(obj) !== -1;\r\n}\r\n/**\r\n * A journal for an account.\r\n * @param name Name of the journal.\r\n * @param type Type of the journal, one of: 'trading', 'income', 'expense'.\r\n * @param columns Mapping of columns and their settings.\r\n * @param columnOrder The order of the columns show in the journal.\r\n * @param transactions List of transactions.\r\n * @returns An object with the given members.\r\n */\r\nexport interface Journal {\r\n  name: string;\r\n  type: JournalType;\r\n  columns: JournalColumnSet;\r\n  columnOrder: JournalColumnRole[];\r\n  transactions: Transaction[];\r\n}\r\n/**\r\n * A set of journal columns.\r\n * @param date Date journal column.\r\n * @param base Base journal column.\r\n * @param baseAmount Base amount journal column.\r\n * @param quote Quote journal column.\r\n * @param quoteAmount Quote amount journal column.\r\n * @param price Price journal column.\r\n * @param feeBase Fee in base curreny journal column.\r\n * @param feeQuote Fee in quote curreny journal column.\r\n * @param notes Notes journal column.\r\n * @param extra Extra journal columns.\r\n */\r\nexport interface JournalColumnSet {\r\n  date: DateColumn;\r\n  base: AssetColumn;\r\n  baseAmount: BaseAmountColumn;\r\n  quote: AssetColumn;\r\n  quoteAmount: QuoteAmountColumn;\r\n  price: PriceColumn;\r\n  feeBase: BaseAmountColumn;\r\n  feeQuote: QuoteAmountColumn;\r\n  notes: TextColumn;\r\n  extra: ExtraColumn[];\r\n}\r\n/**\r\n * Used to select Columns from JournalColumnSet. A string value is for the key of a core column,\r\n * a number value is the index of an extra column.\r\n */\r\nexport type JournalColumnRole = Exclude<keyof JournalColumnSet, 'extra'> | number;\r\nexport function isJournalColumnRole(obj: any): obj is JournalColumnRole {\r\n  const type = typeof obj;\r\n  return type === 'number' || (type === 'string' &&\r\n    ['date', 'base', 'baseAmount', 'quote', 'quoteAmount', 'price', 'feeBase', 'feeQuote', 'notes'].indexOf(obj) !== -1);\r\n}\r\n/** Base Journal Column interface to extend from. */\r\ninterface BaseJournalColumn {\r\n  name: string;\r\n  hide: boolean;\r\n}\r\nexport interface DateColumn extends BaseJournalColumn {\r\n  type: 'date';\r\n  showTime: boolean;\r\n}\r\nexport function isDateColumn(column: JournalColumn | BaseJournalColumn): column is DateColumn {\r\n  return 'type' in column && column.type === 'date' && 'showTime' in column;\r\n}\r\nexport interface AssetColumn extends BaseJournalColumn {\r\n  type: 'asset';\r\n}\r\nexport function isAssetColumn(column: JournalColumn | BaseJournalColumn): column is AssetColumn {\r\n  return 'type' in column && column.type === 'asset';\r\n}\r\nexport interface TextColumn extends BaseJournalColumn {\r\n  type: 'text';\r\n}\r\nexport function isTextColumn(column: JournalColumn | BaseJournalColumn): column is TextColumn {\r\n  return 'type' in column && column.type === 'text';\r\n}\r\nexport interface IntegerColumn extends BaseJournalColumn {\r\n  type: 'integer';\r\n}\r\nexport function isIntegerColumn(column: JournalColumn | BaseJournalColumn): column is IntegerColumn {\r\n  return 'type' in column && column.type === 'integer';\r\n}\r\nexport type DecimalColumnDescription = 'base' | 'quote' | 'price';\r\nexport function isDecimalColumnDescription(obj: any): obj is DecimalColumnDescription {\r\n  return typeof obj === 'string' && ['base', 'quote', 'price'].indexOf(obj) !== -1;\r\n}\r\n/**\r\n * @param precision The precision shown of the column. Shows the default asset precision if not set.\r\n * @param description Used to set the default precision depending on if its an asset amount or price. No\r\n * default precision used if not set.\r\n */\r\nexport interface DecimalColumn extends BaseJournalColumn {\r\n  type: 'decimal';\r\n  /** Key can be an asset ticker, e.g. USD, or an asset pair, e.g. BTC/USD. */\r\n  precision: Record<string, number>;\r\n  description: DecimalColumnDescription;\r\n}\r\nexport function isDecimalColumn(column: JournalColumn | BaseJournalColumn): column is DecimalColumn {\r\n  return 'type' in column && column.type === 'decimal' && 'precision' in column && 'description' in column;\r\n}\r\nexport interface BaseAmountColumn extends DecimalColumn {\r\n  description: 'base';\r\n}\r\nexport function isBaseAmountColumn(column: JournalColumn | BaseJournalColumn): column is BaseAmountColumn {\r\n  return isDecimalColumn(column) && column.description === 'base';\r\n}\r\nexport interface QuoteAmountColumn extends DecimalColumn {\r\n  description: 'quote';\r\n}\r\nexport function isQuoteAmountColumn(column: JournalColumn | BaseJournalColumn): column is QuoteAmountColumn {\r\n  return isDecimalColumn(column) && column.description === 'quote';\r\n}\r\nexport interface PriceColumn extends DecimalColumn {\r\n  description: 'price';\r\n}\r\nexport function isPriceColumn(column: JournalColumn | BaseJournalColumn): column is PriceColumn {\r\n  return isDecimalColumn(column) && column.description === 'price';\r\n}\r\nexport interface BooleanColumn extends BaseJournalColumn {\r\n  type: 'boolean';\r\n}\r\nexport function isBooleanColumn(column: JournalColumn | BaseJournalColumn): column is BooleanColumn {\r\n  return 'type' in column && column.type === 'boolean';\r\n}\r\n/** Journal Columns that the user can create. */\r\nexport type ExtraColumn = TextColumn | IntegerColumn | DecimalColumn | BooleanColumn;\r\nexport function isExtraColumn(column: JournalColumn | BaseJournalColumn): column is ExtraColumn {\r\n  return isTextColumn(column) || isIntegerColumn(column) || isDecimalColumn(column) || isBooleanColumn(column);\r\n}\r\nexport type ExtraColumnType = ExtraColumn['type'];\r\nexport function isExtraColumnType(obj: any): obj is ExtraColumnType {\r\n  return typeof obj === 'string' && ['text', 'integer', 'decimal', 'boolean'].indexOf(obj) !== -1;\r\n}\r\n/** All Journal Column types */\r\nexport type JournalColumn = ExtraColumn | DateColumn | AssetColumn;\r\nexport type JournalColumnType = JournalColumn['type'];\r\nexport function isJournalColumnType(obj: any): obj is JournalColumnType {\r\n  return typeof obj === 'string' && ['date', 'asset', 'text', 'integer', 'decimal', 'boolean'].indexOf(obj) !== -1;\r\n}\r\n/**\r\n * A transaction (trade, income or expense).\\\r\n * An income transaction has positive base and quote amounts.\\\r\n * An expense transaction has negative base and no quote amount.\\\r\n * A trade has opposite base and quote amount signs.\r\n * @param date Date of the transaction.\r\n * @param base Ticker of the base currency/asset.\r\n * @param baseAmount Amount of base changed, i.e. amount.\r\n * @param quote Ticker of the quote currency/asset.\r\n * @param quoteAmount Amount of quote changed, i.e. total.\r\n * @param feeBase Fee in base currency.\r\n * @param feeQuote Fee in quote currency.\r\n * @param notes User written notes.\r\n * @param extra Extra properties, e.g. `{exchange: 'NYSE'}`.\r\n */\r\n export interface Transaction {\r\n  date: string;\r\n  base: string;\r\n  baseAmount: number;\r\n  quote: string;\r\n  quoteAmount: number;\r\n  feeBase: number;\r\n  feeQuote: number;\r\n  notes: string;\r\n  extra: {[key: string]: (string | number | boolean)};\r\n}\r\n\r\nconst defaultColumnOrder: JournalColumnRole[] = ['date', 'base', 'baseAmount', 'quote', 'quoteAmount', 'price', 'feeBase', 'feeQuote', 'notes'];\r\nconst defaultAccountSettings: AccountSettings = {\r\n  accountingCurrency: {\r\n    ticker: 'USD',\r\n    name: 'United States Dollar',\r\n    precision: 2,\r\n    pricePrecision: 4,\r\n    isCurrency: true,\r\n    symbol: '$',\r\n  },\r\n};\r\nconst defaultAssets: Asset[] = [\r\n  {ticker: 'BTC', name: 'Bitcoin', precision: 8, pricePrecision: 2, isCurrency: true, symbol: '₿'},\r\n];\r\nconst defaultJournals: Journal[] = [\r\n  createTradingJournal('Trading', undefined, [\r\n    {\r\n      date: '2021-01-01T00:00:00',\r\n      base: 'BTC',\r\n      baseAmount: 1,\r\n      quote: 'USD',\r\n      quoteAmount: 50000,\r\n      feeBase: 0,\r\n      feeQuote: 20,\r\n      notes: 'First transaction',\r\n      extra: {}\r\n    },\r\n    {\r\n      date: '2021-01-02T00:00:00',\r\n      base: 'BTC',\r\n      baseAmount: 0.5,\r\n      quote: 'USD',\r\n      quoteAmount: 20000,\r\n      feeBase: 0,\r\n      feeQuote: 8,\r\n      notes: 'Second transaction',\r\n      extra: {}\r\n    },\r\n  ]),\r\n  createExpenseJournal('Misc fees'),\r\n];\r\n\r\nexport function createTradingColumns(showTime: boolean = false): JournalColumnSet {\r\n  return {\r\n    date: {name: 'Date', showTime: showTime, type: 'date', hide: false},\r\n    base: {name: 'Asset', type: 'asset', hide: false},\r\n    baseAmount: {name: 'Amount', type: 'decimal', description: 'base', precision: {}, hide: false},\r\n    quote: {name: 'Quote', type: 'asset', hide: true},\r\n    quoteAmount: {name: 'Total', type: 'decimal', description: 'quote', precision: {}, hide: false},\r\n    price: {name: 'Price', type: 'decimal', description: 'price', precision: {}, hide: false},\r\n    feeBase: {name: 'Fee (Base)', type: 'decimal', description: 'base', precision: {}, hide: true},\r\n    feeQuote: {name: 'Fee', type: 'decimal', description: 'quote', precision: {}, hide: false},\r\n    notes: {name: 'Notes', type: 'text', hide: false},\r\n    extra: [],\r\n  };\r\n}\r\n\r\nexport function createIncomeColumns(showTime: boolean = false): JournalColumnSet {\r\n  return {\r\n    date: {name: 'Date', showTime: showTime, type: 'date', hide: false},\r\n    base: {name: 'Asset', type: 'asset', hide: false},\r\n    baseAmount: {name: 'Amount', type: 'decimal', description: 'base', precision: {}, hide: false},\r\n    quote: {name: 'Quote', type: 'asset', hide: true},\r\n    quoteAmount: {name: 'Total', type: 'decimal', description: 'quote', precision: {}, hide: false},\r\n    price: {name: 'Price', type: 'decimal', description: 'price', precision: {}, hide: false},\r\n    feeBase: {name: 'Fee (Base)', type: 'decimal', description: 'base', precision: {}, hide: true},\r\n    feeQuote: {name: 'Fee', type: 'decimal', description: 'quote', precision: {}, hide: true},\r\n    notes: {name: 'Notes', type: 'text', hide: false},\r\n    extra: [],\r\n  };\r\n}\r\n\r\nexport function createExpenseColumns(showTime: boolean = false): JournalColumnSet {\r\n  return {\r\n    date: {name: 'Date', showTime: showTime, type: 'date', hide: false},\r\n    base: {name: 'Asset', type: 'asset', hide: false},\r\n    baseAmount: {name: 'Amount', type: 'decimal', description: 'base', precision: {}, hide: false},\r\n    quote: {name: 'Quote', type: 'asset', hide: true},\r\n    quoteAmount: {name: 'Total', type: 'decimal', description: 'quote', precision: {}, hide: false},\r\n    price: {name: 'Price', type: 'decimal', description: 'price', precision: {}, hide: false},\r\n    feeBase: {name: 'Fee (Base)', type: 'decimal', description: 'base', precision: {}, hide: true},\r\n    feeQuote: {name: 'Fee', type: 'decimal', description: 'quote', precision: {}, hide: true},\r\n    notes: {name: 'Notes', type: 'text', hide: false},\r\n    extra: [],\r\n  };\r\n}\r\n\r\nexport function createDefaultJournal(name: string, type: JournalType): Journal {\r\n  switch (type) {\r\n    case 'trading':\r\n      return createTradingJournal(name);\r\n    case 'income':\r\n      return createIncomeJournal(name);\r\n    case 'expense':\r\n      return createExpenseJournal(name);\r\n  }\r\n}\r\n\r\nexport function createTradingJournal(name: string, columnOrder: JournalColumnRole[] = defaultColumnOrder, transactions: Transaction[] = []): Journal {\r\n  return {\r\n    name: name,\r\n    type: 'trading',\r\n    columns: createTradingColumns(),\r\n    columnOrder: columnOrder,\r\n    transactions: transactions,\r\n  };\r\n}\r\n\r\nexport function createIncomeJournal(name: string, columnOrder: JournalColumnRole[] = defaultColumnOrder, transactions: Transaction[] = []): Journal {\r\n  return {\r\n    name: name,\r\n    type: 'income',\r\n    columns: createIncomeColumns(),\r\n    columnOrder: columnOrder,\r\n    transactions: transactions,\r\n  };\r\n}\r\n\r\nexport function createExpenseJournal(name: string, columnOrder: JournalColumnRole[] = defaultColumnOrder, transactions: Transaction[] = []): Journal {\r\n  return {\r\n    name: name,\r\n    type: 'expense',\r\n    columns: createExpenseColumns(),\r\n    columnOrder: columnOrder,\r\n    transactions: transactions,\r\n  };\r\n}\r\n\r\nexport function createDefaultAccount(name: string, settings = defaultAccountSettings, assets = defaultAssets, journals = defaultJournals): Account {\r\n  return {\r\n    name,\r\n    settings,\r\n    assets,\r\n    journals,\r\n  };\r\n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport type { RootState } from '../../app/store';\r\nimport {\r\n  Account,\r\n  Asset,\r\n  Transaction,\r\n  Journal,\r\n  JournalType,\r\n  JournalColumnRole,\r\n  JournalColumn,\r\n  ExtraColumn,\r\n  createDefaultAccount,\r\n  createDefaultJournal,\r\n  isDateColumn,\r\n  isAssetColumn,\r\n  isBaseAmountColumn,\r\n  isQuoteAmountColumn,\r\n  isPriceColumn,\r\n  isTextColumn,\r\n  isExtraColumn,\r\n} from '../../models/account';\r\n\r\ninterface State {\r\n  readonly accounts: Account[],\r\n  readonly activeAccount: number,\r\n}\r\n\r\nconst initialState: State = {\r\n  accounts: [],\r\n  activeAccount: 0,\r\n};\r\n\r\nexport const accountsSlice = createSlice({\r\n  name: 'transactions',\r\n  initialState: initialState,\r\n  reducers: {\r\n    /** Change the active account (-1 for all accounts). Negative numbers are evaluated as -1 (all accounts). */\r\n    switchAccount: (state, action: PayloadAction<number>) => {\r\n      const accountIndex = action.payload;\r\n      state.activeAccount = Math.floor(Math.max(accountIndex, -1));\r\n    },\r\n    addAccount: (state, action: PayloadAction<Account>) => {\r\n      state.accounts.push(action.payload);\r\n    },\r\n    addDefaultAccount: (state, action: PayloadAction<string>) => {\r\n      const name = action.payload || 'New Account';\r\n      state.accounts.push(createDefaultAccount(name));\r\n    },\r\n    addTransaction: (state, action: PayloadAction<{account?: number, journal: number, transaction: Transaction}>) => {\r\n      const { account: accountIndex, journal: journalIndex, transaction } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      const journal = account?.journals[journalIndex];\r\n      if (journal !== undefined) {\r\n        // Insert transaction in the correct order\r\n        for (let i = journal.transactions.length; i >= 0; i--) {\r\n          if (i === 0 || new Date(transaction.date) >= new Date(journal.transactions[i-1]!.date)) {\r\n            journal.transactions.splice(i, 0, transaction);\r\n            break;\r\n          }\r\n        }\r\n      } else {\r\n        console.warn(`addTransaction: Journal index ${journalIndex} is out of range for account: ${JSON.stringify(account)}.`);\r\n      }\r\n    },\r\n    editTransaction: (state, action: PayloadAction<{account?: number, journal: number, index: number, transaction: Transaction}>) => {\r\n      // TODO\r\n      console.log('TODO');\r\n    },\r\n    changeAccountingCurrency: (state, action: PayloadAction<{account?: number, currency: Asset}>) => {\r\n      const { account: accountIndex, currency } = action.payload;\r\n      // Updates the active account if no account provided\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      if (account !== undefined) {\r\n        account.settings.accountingCurrency = currency;\r\n      }\r\n    },\r\n    addAsset: (state, action: PayloadAction<{account?: number, asset: Asset}>) => {\r\n      const { account: accountIndex, asset } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      if (account !== undefined) {\r\n        account.assets.push(asset);\r\n      }\r\n    },\r\n    editAsset: (state, action: PayloadAction<{account?: number, index: number, asset: Asset}>) => {\r\n      const { account: accountIndex, index, asset } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      // Only edit if the index is valid\r\n      if (account?.assets[index] !== undefined) {\r\n        account.assets[index] = asset;\r\n      }\r\n    },\r\n    deleteAsset: (state, action: PayloadAction<{account?: number, index: number}>) => {\r\n      const { account: accountIndex, index } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      if (account !== undefined && index >= 0) {\r\n        account.assets.splice(index, 1);\r\n      }\r\n    },\r\n    addJournal: (state, action: PayloadAction<{account?: number, journal: Journal}>) => {\r\n      const { account: accountIndex, journal } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      if (account !== undefined) {\r\n        account.journals.push(journal);\r\n      }\r\n    },\r\n    addDefaultJournal: (state, action: PayloadAction<{account?: number, name: string, type: JournalType}>) => {\r\n      const { account: accountIndex, name, type } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      if (account !== undefined) {\r\n        account.journals.push(createDefaultJournal(name, type));\r\n      }\r\n    },\r\n    editJournalSettings: (state, action: PayloadAction<{account?: number, index: number, name: string, type: JournalType}>) => {\r\n      const { account: accountIndex, index, name, type } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      const journal = account?.journals[index];\r\n      if (journal !== undefined) {\r\n        account!.journals[index] = {...journal, name: name, type: type};\r\n      } else {\r\n        console.warn(`editJournalSettings: Journal index ${index} is out of range for account: ${JSON.stringify(account)}.`);\r\n      }\r\n    },\r\n    deleteJournal: (state, action: PayloadAction<{account?: number, index: number}>) => {\r\n      const { account: accountIndex, index } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      if (account !== undefined) {\r\n        account.journals.splice(index, 1);\r\n      }\r\n    },\r\n    addJournalColumn: (state, action: PayloadAction<{account?: number, index: number, column: ExtraColumn}>) => {\r\n      const { account: accountIndex, index, column } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      const journal = account?.journals[index];\r\n      if (journal !== undefined) {\r\n        journal.columns.extra.push(column);\r\n        // Add column to the end of column order\r\n        const extraColumnsLength = journal.columns.extra.length;\r\n        journal.columnOrder.push(extraColumnsLength - 1);\r\n      }\r\n    },\r\n    editJournalColumn: (state, action: PayloadAction<{account?: number, index: number, role: JournalColumnRole, column: JournalColumn}>) => {\r\n      const { account: accountIndex, index, role, column } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      const journal = account?.journals[index];\r\n      if (journal !== undefined) {\r\n        if (typeof role === 'string') {\r\n          // Core column\r\n          if (role === 'date' && isDateColumn(column)) {\r\n            journal.columns[role] = column;\r\n          } else if (role === 'base' && isAssetColumn(column)) {\r\n            journal.columns[role] = column;\r\n          } else if (role === 'baseAmount' && isBaseAmountColumn(column)) {\r\n            journal.columns[role] = column;\r\n          } else if (role === 'quote' && isAssetColumn(column)) {\r\n            journal.columns[role] = column;\r\n          } else if (role === 'quoteAmount' && isQuoteAmountColumn(column)) {\r\n            journal.columns[role] = column;\r\n          } else if (role === 'price' && isPriceColumn(column)) {\r\n            journal.columns[role] = column;\r\n          } else if (role === 'feeBase' && isBaseAmountColumn(column)) {\r\n            journal.columns[role] = column;\r\n          } else if (role === 'feeQuote' && isQuoteAmountColumn(column)) {\r\n            journal.columns[role] = column;\r\n          } else if (role === 'notes' && isTextColumn(column)) {\r\n            journal.columns[role] = column;\r\n          } else {\r\n            console.warn(`editJournalColumn: Column does not match core column role: ${role}.`);\r\n          }\r\n        } else {    // Implicit typeof column === 'number'\r\n          if (isExtraColumn(column)) {\r\n            journal.columns.extra[role] = column;\r\n          } else {\r\n            console.warn(`editJournalColumn: Column is not an ExtraColumn for role: ${role}.`);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    deleteJournalColumn: (state, action: PayloadAction<{account?: number, journalIndex: number, columnIndex: number}>) => {\r\n      const { account: accountIndex, journalIndex, columnIndex } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      const journal = account?.journals[journalIndex];\r\n      if (journal !== undefined) {\r\n        if (journal.columns.extra[columnIndex] !== undefined) {\r\n          journal.columns.extra.splice(columnIndex, 1);\r\n          // Delete column from column order. The numeric JournalColumnRoles cascade down to preserve the column order after deletion.\r\n          const extraColumnsLength = journal.columns.extra.length;\r\n          const deletedColIndex = journal.columnOrder.indexOf(columnIndex);\r\n          if (deletedColIndex !== -1) {\r\n            journal.columnOrder.splice(deletedColIndex, 1);\r\n          }\r\n          for (let i = columnIndex + 1; i <= extraColumnsLength; i++) {\r\n            const colIndex = journal.columnOrder.indexOf(i);\r\n            if (colIndex !== -1) {\r\n              journal.columnOrder[colIndex] = i - 1;\r\n            }\r\n          }\r\n        } else {\r\n          console.warn(`deleteJournalColumn: Invalid column selectors journalIndex: ${journalIndex} and columnIndex: ${columnIndex}.`);\r\n        }\r\n      }\r\n    },\r\n    editJournalColumnOrder: (state, action: PayloadAction<{account?: number, index: number, columnOrder: JournalColumnRole[]}>) => {\r\n      const { account: accountIndex, index, columnOrder } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      const journal = account?.journals[index];\r\n      if (journal !== undefined) {\r\n        journal.columnOrder = columnOrder;\r\n      } else {\r\n        console.warn(`editJournalColumnOrder: Journal index ${index} is out of range for account: ${JSON.stringify(account)}.`);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\n// Actions\r\nexport const {\r\n  switchAccount,\r\n  addAccount,\r\n  addDefaultAccount,\r\n  addTransaction,\r\n  changeAccountingCurrency,\r\n  addAsset,\r\n  editAsset,\r\n  deleteAsset,\r\n  addJournal,\r\n  addDefaultJournal,\r\n  editJournalSettings,\r\n  deleteJournal,\r\n  addJournalColumn,\r\n  editJournalColumn,\r\n  deleteJournalColumn,\r\n  editJournalColumnOrder,\r\n} = accountsSlice.actions;\r\n\r\n// Selectors\r\n// TODO consider selector errors\r\nexport const selectAccounts = (state: RootState) => state.accounts.accounts;\r\nexport const selectActiveAccountIndex = (state: RootState) => state.accounts.activeAccount;\r\nexport const selectActiveAccount = (state: RootState) => {\r\n  const accounts = selectAccounts(state);\r\n  const activeAccount = selectActiveAccountIndex(state);\r\n  return activeAccount < accounts.length ? accounts[activeAccount] : null;\r\n}\r\nexport const selectActiveAccountName = (state: RootState) => {\r\n  const activeAccount = selectActiveAccount(state);\r\n  return activeAccount ? activeAccount.name : 'No account selected';\r\n}\r\nexport const selectActiveAccountAccountingCurrency = (state: RootState) => {\r\n  const activeAccount = selectActiveAccount(state);\r\n  return activeAccount ? activeAccount.settings.accountingCurrency : null;\r\n}\r\n/**\r\n * Get the assets (excluding base currency) of the active account.\r\n */\r\nexport const selectActiveAccountAssets = (state: RootState) => {\r\n  const activeAccount = selectActiveAccount(state);\r\n  return activeAccount ? activeAccount.assets : [];\r\n}\r\n/**\r\n * Get the accounting currency and assets of the active account.\r\n */\r\nexport const selectActiveAccountAssetsAll = (state: RootState) => {\r\n  const activeAccount = selectActiveAccount(state);\r\n  return activeAccount ? [activeAccount.settings.accountingCurrency, ...activeAccount.assets] : [];\r\n}\r\nexport const selectActiveAccountJournals = (state: RootState) => {\r\n  const activeAccount = selectActiveAccount(state);\r\n  return activeAccount ? activeAccount.journals : [];\r\n}\r\n\r\nexport default accountsSlice.reducer;","export const drawerWidth = '15rem';","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport clsx from 'clsx'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ArrowDropDownCircleIcon from '@material-ui/icons/ArrowDropDownCircle';\r\nimport { selectAccounts, selectActiveAccountIndex, selectActiveAccountName, switchAccount } from '../accounts/accountsSlice';\r\nimport { drawerWidth } from '../../constants';\r\n\r\ninterface Props {\r\n  readonly drawerOpen: boolean;\r\n  readonly onMenuClick?: React.MouseEventHandler<HTMLButtonElement>;\r\n}\r\n\r\nconst useStyles = makeStyles<Theme, Props>(theme => ({\r\n  root: {\r\n\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    display: props => props.drawerOpen ? 'none' : 'initial'\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarDrawerOpen: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth})`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  }\r\n}));\r\n\r\nfunction TopAppBar(props: Props) {\r\n  const classes = useStyles(props);\r\n  // Controls the showing of the \"change account\" menu\r\n  const [menuAnchor, setMenuAnchor] = useState<Element | null>(null);\r\n  const dispatch = useDispatch();\r\n  const accounts = useSelector(selectAccounts);\r\n  const activeAccountIndex = useSelector(selectActiveAccountIndex);\r\n  const activeAccountName = useSelector(selectActiveAccountName);\r\n\r\n  const handleSwitchAccount = (index: number) => {\r\n    dispatch(switchAccount(index));\r\n    setMenuAnchor(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarDrawerOpen!]: props.drawerOpen\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            onClick={props.onMenuClick}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">{ activeAccountName }</Typography>\r\n          <IconButton\r\n            onClick={(e) => setMenuAnchor(e.currentTarget)}\r\n            color=\"inherit\"\r\n            aria-label=\"Change account\"\r\n            aria-haspopup=\"true\"\r\n          >\r\n            <ArrowDropDownCircleIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Menu\r\n        anchorEl={menuAnchor}\r\n        open={Boolean(menuAnchor)}\r\n        onClose={() => setMenuAnchor(null)}\r\n      >\r\n        {accounts.map((a, index) => (\r\n          <MenuItem onClick={() => handleSwitchAccount(index)} selected={activeAccountIndex === index} key={index}>\r\n            { a.name }\r\n          </MenuItem>\r\n        ))}\r\n        <MenuItem>All Accounts</MenuItem>\r\n        <MenuItem>Create New Account</MenuItem>\r\n      </Menu>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TopAppBar;","import { Link, useLocation } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport BookIcon from '@material-ui/icons/Book';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport { drawerWidth } from '../../constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    \r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // Have the same height as the top app bar\r\n    ...theme.mixins.toolbar\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    whiteSpace: 'nowrap',   // Prevent text wrapping when closing the drawer\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerClose: {\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7),\r\n    // Have extra space for the scrollbar if needed\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  }\r\n}));\r\n\r\n/**\r\n * See\r\n * - https://material-ui.com/components/drawers/#mini-variant-drawer\r\n * - https://material-ui.com/api/drawer/\r\n * - https://github.com/mui-org/material-ui/blob/master/docs/src/pages/getting-started/templates/dashboard/Dashboard.js\r\n * - https://material-ui.com/getting-started/templates/dashboard/\r\n */\r\nfunction SideDrawer(props) {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const path = location.pathname;\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      anchor=\"left\"\r\n      classes={{\r\n        paper: clsx({\r\n          [classes.drawerOpen]: props.open,\r\n          [classes.drawerClose]: !props.open\r\n        })\r\n      }}\r\n      className={clsx(classes.drawer, {\r\n        [classes.drawerOpen]: props.open,\r\n        [classes.drawerClose]: !props.open\r\n      })}\r\n    >\r\n      <div className={classes.toolbar}>\r\n        <IconButton onClick={props.onClose}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List component=\"nav\" aria-label=\"Journals\">\r\n        <ListItem\r\n          button\r\n          component={Link}\r\n          to={'/journals'}\r\n          selected={path === '/journals' || path === '/'}\r\n        >\r\n          <ListItemIcon>\r\n            <CreateIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Journals\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          component={Link}\r\n          to={'/capital-changes'}\r\n          selected={path === '/capital-changes'}\r\n        >\r\n          <ListItemIcon>\r\n            <CreateIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Capital changes\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          component={Link}\r\n          to={'/asset-statements'}\r\n          selected={path === '/asset-statements'}\r\n        >\r\n          <ListItemIcon>\r\n            <BookIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Asset Statements\" />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List component=\"nav\" aria-label=\"Financials\">\r\n        <ListSubheader inset disableSticky={true}>Financials</ListSubheader>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <AssignmentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Monthly\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <AssignmentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Quarterly\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <AssignmentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Biyearly\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <AssignmentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Yearly\" />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List component=\"nav\" aria-label=\"Account settings\">\r\n        <ListItem\r\n          button\r\n          component={Link}\r\n          to={'/account-settings'}\r\n          selected={path === '/account-settings'}\r\n        >\r\n          <ListItemIcon>\r\n            <SettingsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Account settings\" />\r\n        </ListItem>\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default SideDrawer;","import { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\ninterface Props {\r\n  objectName?: string;\r\n  edit?: boolean;\r\n  open: boolean;\r\n  onClose?: React.MouseEventHandler<HTMLButtonElement>;\r\n  onReset?: React.MouseEventHandler<HTMLButtonElement>;\r\n  onSubmit?: React.MouseEventHandler<HTMLButtonElement>;\r\n  onEnter?: (node: HTMLElement, isAppearing: boolean) => void;\r\n  dividers?: boolean;\r\n  children?: React.ReactNode;\r\n  contentMaxWidth?: string;\r\n}\r\n\r\nconst useStyles = makeStyles<Theme, Props>(theme => ({\r\n  content: props => ({\r\n    maxWidth: props.contentMaxWidth,\r\n  }),\r\n}));\r\n\r\n/**\r\n * A dialog to add or edit an object.\r\n * \r\n * Props:\r\n * - objectName: Name of the object to add or edit. Appears in the title.\r\n * - edit: true for edit mode, false for add mode (affects text).\r\n * - open: Dialog shows if true.\r\n * - onClose - Function called when the dialog requests to be closed (cancel button or click away).\r\n * - onEnter - Function called before the dialog is opened.\r\n * - onReset - Function called when the \"reset\" button is clicked.\r\n * - onSubmit - Function called when the \"Add/Edit\" button is clicked.\r\n * - dividers - Display the DialogContent dividers if true.\r\n * - contentMaxWidth - The maximum width of the dialog content.\r\n */\r\nfunction AddEditDialog({objectName = 'Item', ...props}: Props) {\r\n  const classes = useStyles(props);\r\n  return (\r\n    <Dialog open={props.open} onClose={props.onClose} onEnter={props.onEnter}>\r\n      <DialogTitle>{ `${props.edit ? 'Edit' : 'Add'} ${objectName}` }</DialogTitle>\r\n      <DialogContent dividers={props.dividers} className={classes.content}>\r\n        { props.children }\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.onClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={props.onReset} color=\"primary\">\r\n          Reset\r\n        </Button>\r\n        <Button onClick={props.onSubmit} color=\"primary\">\r\n          { props.edit ? 'Edit' : 'Add' }\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default AddEditDialog;","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport BigNumber from 'bignumber.js';\r\nimport AddEditDialog from '../../components/AddEditDialog';\r\nimport { addTransaction, selectActiveAccount, selectActiveAccountAssetsAll, selectActiveAccountJournals } from '../accounts/accountsSlice';\r\nimport { dateToString, getDecimalColumnPrecision } from '../../models/account';\r\nimport { roundDown } from '../../models/math';\r\n\r\nfunction getTransactionType(baseAmount: number, quoteAmount: number, defaultType: TransactionType) {\r\n  if (baseAmount > 0 && quoteAmount < 0) {\r\n    return 'buy';\r\n  } else if (baseAmount < 0 && quoteAmount > 0) {\r\n    return 'sell';\r\n  } else if (baseAmount > 0 && quoteAmount >= 0) {\r\n    return 'income';\r\n  } else if (baseAmount < 0 && quoteAmount <= 0) {\r\n    return 'expense';\r\n  }\r\n  return defaultType;\r\n}\r\n\r\ntype TransactionType = 'buy' | 'sell' | 'income' | 'expense';\r\nexport interface FormFields {\r\n  date: Date;\r\n  base: string;\r\n  quote: string;\r\n  baseAmount: BigNumber,\r\n  quoteAmount: BigNumber,\r\n  price: BigNumber,\r\n  type: TransactionType;\r\n  fee: BigNumber,\r\n  feeCurrency: 'base' | 'quote',\r\n  notes: string,\r\n}\r\n\r\nconst initialFormFields: FormFields = {\r\n  date: new Date(),\r\n  base: '',\r\n  quote: '',\r\n  baseAmount: new BigNumber(NaN),\r\n  quoteAmount: new BigNumber(NaN),\r\n  price: new BigNumber(NaN),\r\n  type: 'buy',\r\n  fee: new BigNumber(NaN),\r\n  feeCurrency: 'quote',\r\n  notes: '',\r\n};\r\n\r\ninterface Props {\r\n  journal: number;\r\n  transaction: number;\r\n  open: boolean;\r\n  onDialogClose?: () => void;\r\n}\r\n\r\nfunction AddEditTransactionDialog(props: Props) {\r\n  const { journal: journalIndex, transaction: transactionIndex, open, onDialogClose } = props;\r\n  const [fields, setFields] = useState<FormFields>(initialFormFields);\r\n  const dispatch = useDispatch();\r\n  const account = useSelector(selectActiveAccount);\r\n  const journal = useSelector(selectActiveAccountJournals)[journalIndex];\r\n  const transaction = journal?.transactions[transactionIndex];\r\n  const assets = useSelector(selectActiveAccountAssetsAll);\r\n  \r\n  const basePrecision = journal ? getDecimalColumnPrecision(journal.columns['baseAmount'], fields.base, fields.quote, assets) : NaN;\r\n  const quotePrecision = journal ? getDecimalColumnPrecision(journal.columns['quoteAmount'], fields.base, fields.quote, assets) : NaN;\r\n\r\n  const handleFieldChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.name === 'baseAmount') {\r\n      setFields(s => {\r\n        const newFields = {...s, baseAmount: roundDown(BigNumber.max(e.target.value, 0), basePrecision)};\r\n        if (s.price.toNumber()) {\r\n          newFields.quoteAmount = roundDown(newFields.baseAmount.times(s.price), quotePrecision);\r\n        }\r\n        return newFields;\r\n      });\r\n    } else if (e.target.name === 'quoteAmount') {\r\n      setFields(s => {\r\n        const newFields = {...s, quoteAmount: roundDown(BigNumber.max(e.target.value, 0), quotePrecision)};\r\n        if (s.baseAmount.toNumber()) {\r\n          newFields.price = newFields.quoteAmount.div(s.baseAmount);\r\n        }\r\n        return newFields;\r\n      });\r\n    } else if (e.target.name === 'price') {\r\n      setFields(s => {\r\n        const newFields = {...s, price: BigNumber.max(e.target.value, 0)};\r\n        if (s.baseAmount.toNumber()) {\r\n          newFields.quoteAmount = roundDown(newFields.price.times(s.baseAmount), quotePrecision)\r\n        }\r\n        return newFields;\r\n      });\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    if (transaction === null || transaction === undefined) {\r\n      // Add\r\n      setFields({\r\n        ...initialFormFields,\r\n        date: new Date(),\r\n        base: account?.assets[0]?.ticker ?? account?.settings.accountingCurrency.ticker ?? '',\r\n        quote: account?.settings.accountingCurrency.ticker ?? '',\r\n      });\r\n    } else {\r\n      // Edit\r\n      setFields({\r\n        date: new Date(transaction.date),\r\n        base: transaction.base,\r\n        baseAmount: new BigNumber(transaction.baseAmount).abs(),\r\n        quote: transaction.quote,\r\n        quoteAmount: new BigNumber(transaction.quoteAmount).abs(),\r\n        price: new BigNumber(transaction.quoteAmount).div(new BigNumber(transaction.baseAmount)),\r\n        type: getTransactionType(transaction.baseAmount, transaction.quoteAmount, 'buy'),\r\n        fee: transaction.feeBase !== 0 ? new BigNumber(transaction.feeBase) : new BigNumber(transaction.feeQuote),\r\n        feeCurrency: transaction.feeBase !== 0 ? 'base' : 'quote',\r\n        notes: transaction.notes,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // TODO input validation\r\n    if (transaction === null || transaction === undefined) {\r\n      // Add\r\n      dispatch(addTransaction({\r\n        journal: journalIndex,\r\n        transaction: {\r\n          date: dateToString(fields.date),\r\n          base: fields.base,\r\n          baseAmount: (fields.type === 'buy' || fields.type === 'income' ? fields.baseAmount : fields.baseAmount.negated()).toNumber(),\r\n          quote: fields.quote,\r\n          quoteAmount: (fields.type === 'sell' || fields.type === 'income' ? fields.quoteAmount : fields.quoteAmount.negated()).toNumber(),\r\n          feeBase: fields.feeCurrency === 'base' ? fields.fee.toNumber() : 0,\r\n          feeQuote: fields.feeCurrency === 'quote' ? fields.fee.toNumber() : 0,\r\n          notes: fields.notes,\r\n          extra: {},\r\n        },\r\n      }));\r\n    } else {\r\n      // Edit\r\n      // TODO\r\n    }\r\n    onDialogClose?.();\r\n  };\r\n\r\n  return (\r\n    <AddEditDialog\r\n      objectName=\"Transaction\"\r\n      edit={Boolean(transaction)}\r\n      open={open}\r\n      onClose={onDialogClose}\r\n      onEnter={resetForm}\r\n      onReset={resetForm}\r\n      onSubmit={handleSubmit}\r\n      contentMaxWidth=\"30rem\"\r\n    >\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            type={journal?.columns.date.showTime ? \"datetime-local\" : \"date\"}\r\n            size=\"small\"\r\n            label=\"Date\"\r\n            fullWidth\r\n            required\r\n            inputProps={{step: 1}}\r\n            value={dateToString(fields.date, journal?.columns.date.showTime)}\r\n            onChange={(e) => setFields(s => ({...s, date: new Date(e.target.value)}))}\r\n            InputLabelProps={{shrink: true}}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <TextField\r\n            type=\"number\"\r\n            name=\"baseAmount\"\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Amount\"\r\n            required\r\n            helperText={fields.base && `${basePrecision} max decimal places`}\r\n            value={fields.baseAmount.isFinite() ? fields.baseAmount.toFixed() : ''}\r\n            inputProps={{min: 0, step: fields.base ? 1/Math.pow(10, basePrecision) : 1}}\r\n            onChange={handleFieldChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            select\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Asset\"\r\n            required\r\n            value={fields.base}\r\n            onChange={(e) => setFields(s => ({...s, base: e.target.value}))}\r\n          >\r\n            {assets.map((a) => (\r\n              <MenuItem value={a.ticker} key={a.ticker}>{ a.ticker }</MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <TextField\r\n            type=\"number\"\r\n            name=\"quoteAmount\"\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Total\"\r\n            required\r\n            helperText={fields.quote && `${quotePrecision} max decimal places`}\r\n            value={fields.quoteAmount.isFinite() ? fields.quoteAmount.toFixed() : ''}\r\n            inputProps={{min: 0, step: fields.quote ? 1/Math.pow(10, quotePrecision) : 1}}\r\n            onChange={handleFieldChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            select\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Quote Currency\"\r\n            required\r\n            value={fields.quote}\r\n            onChange={(e) => setFields(s => ({...s, quote: e.target.value}))}\r\n          >\r\n            {assets.map((a) => (\r\n              <MenuItem value={a.ticker} key={a.ticker}>{ a.ticker }</MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <TextField\r\n            type=\"number\"\r\n            name=\"price\"\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Price\"\r\n            required\r\n            value={fields.price.isFinite() ? fields.price.toFixed() : ''}\r\n            onChange={handleFieldChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            select\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Type\"\r\n            value={fields.type}\r\n            onChange={(e) => setFields(s => ({...s, type: e.target.value as TransactionType}))}\r\n          >\r\n            <MenuItem value={'buy'}>Buy</MenuItem>\r\n            <MenuItem value={'sell'}>Sell</MenuItem>\r\n            <MenuItem value={'income'}>Income</MenuItem>\r\n            <MenuItem value={'expense'}>Expense</MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <TextField\r\n            type=\"number\"\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Fee\"\r\n            value={fields.fee.isFinite() ? fields.fee.toFixed() : ''}\r\n            inputProps={{min: 0, step: fields.feeCurrency === 'base' ?\r\n              (fields.base ? 1/Math.pow(10, basePrecision) : 1) :\r\n              (fields.quote ? 1/Math.pow(10, quotePrecision) : 1)\r\n            }}\r\n            helperText={\r\n              fields.feeCurrency === 'base' ?\r\n              (fields.base && `${basePrecision} max decimal places`) :\r\n              (fields.quote && `${quotePrecision} max decimal places`)\r\n            }\r\n            onChange={(e) => setFields(s => ({\r\n              ...s,\r\n              fee: roundDown(BigNumber.max(e.target.value, 0), fields.feeCurrency === 'base' ? basePrecision : quotePrecision),\r\n            }))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            select\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Fee Currency\"\r\n            value={fields.feeCurrency}\r\n            onChange={(e) => setFields(s => ({...s, feeCurrency: e.target.value as 'base' | 'quote'}))}\r\n          >\r\n            <MenuItem value={'base'}>{ `Base (${fields.base})` }</MenuItem>\r\n            <MenuItem value={'quote'}>{ `Quote (${fields.quote})` }</MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            multiline\r\n            fullWidth\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            label=\"Notes\"\r\n            value={fields.notes}\r\n            onChange={(e) => setFields(s => ({...s, notes: e.target.value}))}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </AddEditDialog>\r\n  );\r\n}\r\n\r\nexport default AddEditTransactionDialog;","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Box from '@material-ui/core/Box';\r\nimport AddEditDialog from '../../components/AddEditDialog';\r\nimport { addDefaultJournal, editJournalSettings, selectActiveAccountJournals } from './accountsSlice';\r\nimport { JournalType } from '../../models/account';\r\n\r\ninterface FormFields {\r\n  name: string,\r\n  type: JournalType,\r\n}\r\n\r\nconst initialFormFields: FormFields = {\r\n  name: '',\r\n  type: 'trading',\r\n};\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  onDialogClose?: () => void;\r\n  journal: number;\r\n}\r\n\r\n/**\r\n * React component. Add or change journal column dialog.\r\n * \r\n * Props:\r\n * - open: Dialog shows if true.\r\n * - onDialogClose: Function called when the dialog requests to be closed.\r\n * - journal: The index of the journal selected to edit. Set to index out of range (use a negative number) to add new journal.\r\n */\r\nfunction AddEditJournalDialog(props: Readonly<Props>) {\r\n  const { open, onDialogClose, journal: index } = props;\r\n  const [fields, setFields] = useState<FormFields>(initialFormFields);\r\n  const dispatch = useDispatch();\r\n  const journals = useSelector(selectActiveAccountJournals);\r\n  // journalIndex is set to -1 initially\r\n  const journal = journals[index];\r\n\r\n  const handleReset = () => {\r\n    if (journal !== undefined) {\r\n      setFields({\r\n        name: journal.name,\r\n        type: journal.type,\r\n      });\r\n    } else {\r\n      setFields(initialFormFields);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (journal !== undefined) {\r\n      dispatch(editJournalSettings({index: index, name: fields.name, type: fields.type}));\r\n    } else {\r\n      dispatch(addDefaultJournal({name: fields.name, type: fields.type}));\r\n    }\r\n    onDialogClose?.();\r\n  };\r\n\r\n  return (\r\n    <AddEditDialog\r\n      objectName={'Journal'}\r\n      edit={journal !== undefined}\r\n      open={open}\r\n      onClose={onDialogClose}\r\n      onEnter={handleReset}\r\n      onReset={handleReset}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <Box>\r\n        <TextField\r\n          type=\"text\"\r\n          label=\"Journal Name\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          required\r\n          value={fields.name}\r\n          onChange={(e) => setFields(s => ({...s, name: e.target.value}))}\r\n        />\r\n      </Box>\r\n      <Box mt={2}>\r\n        <TextField\r\n          select\r\n          label=\"Type\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          required\r\n          value={fields.type}\r\n          onChange={(e) => setFields(s => ({...s, type: e.target.value as JournalType}))}\r\n        >\r\n          <MenuItem value=\"trading\">Trading</MenuItem>\r\n          <MenuItem value=\"income\">Income</MenuItem>\r\n          <MenuItem value=\"expense\">Expense</MenuItem>\r\n        </TextField>\r\n      </Box>\r\n    </AddEditDialog>\r\n  );\r\n}\r\n\r\nexport default AddEditJournalDialog;","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AddEditDialog from '../../components/AddEditDialog';\r\nimport { addJournalColumn, editJournalColumn, selectActiveAccountAssetsAll, selectActiveAccountJournals } from './accountsSlice';\r\nimport {\r\n  JournalColumn,\r\n  JournalColumnRole,\r\n  JournalColumnType,\r\n  isDecimalColumn,\r\n  isExtraColumn,\r\n  isDecimalColumnDescription,\r\n  isJournalColumnType,\r\n  getJournalColumn,\r\n  journalColumnRoleDisplay,\r\n  Asset,\r\n} from '../../models/account';\r\nimport { Divider, Typography } from '@material-ui/core';\r\n\r\ninterface DecimalColumnSettingsProps {\r\n  price?: boolean;\r\n  disableDescription?: boolean;\r\n  description: string;\r\n  onDescriptionChange?: (newValue: string) => void;\r\n  precision: Record<string, number>;\r\n  onPrecisionChange?: (newValue: Record<string, number>) => void;\r\n  // ticker2 is the second ticker in the ticker pair (ticker/ticker2) for price columns\r\n  newPrecisionFields: {ticker: string, ticker2?: string, precision: number};\r\n  onNewPrecisionFieldsChange?: (newValue: {ticker: string, ticker2?: string, precision: number}) => void;\r\n  onNewPrecisionFieldsReset?: () => void;\r\n  assets?: Asset[];\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  removeButton: {\r\n    color: theme.palette.error.main,\r\n  },\r\n}));\r\n\r\nfunction DecimalColumnSettings(props: DecimalColumnSettingsProps) {\r\n  const classes = useStyles();\r\n  const {\r\n    price,\r\n    disableDescription,\r\n    description,\r\n    onDescriptionChange,\r\n    precision,\r\n    onPrecisionChange,\r\n    newPrecisionFields,\r\n    onNewPrecisionFieldsChange,\r\n    onNewPrecisionFieldsReset,\r\n    assets,\r\n  } = props;\r\n\r\n  const handleAddPrecision = () => {\r\n    if (price) {\r\n      if (newPrecisionFields.ticker && newPrecisionFields.ticker2 && isFinite(newPrecisionFields.precision)) {\r\n        onPrecisionChange?.({...precision, [`${newPrecisionFields.ticker}/${newPrecisionFields.ticker2}`]: newPrecisionFields.precision});\r\n        onNewPrecisionFieldsReset?.();\r\n      }\r\n    } else {\r\n      if (newPrecisionFields.ticker && isFinite(newPrecisionFields.precision)) {\r\n        onPrecisionChange?.({...precision, [newPrecisionFields.ticker]: newPrecisionFields.precision});\r\n        onNewPrecisionFieldsReset?.();\r\n      }\r\n    }\r\n    \r\n  };\r\n\r\n  const handleDeletePrecision = (ticker: string) => {\r\n    const { [ticker]: _, ...newPrecision } = precision;\r\n    onPrecisionChange?.(newPrecision);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"Description\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          required\r\n          disabled={disableDescription}\r\n          value={description}\r\n          onChange={(e) => onDescriptionChange?.(e.target.value)}\r\n        >\r\n          <MenuItem value=\"base\">Base</MenuItem>\r\n          <MenuItem value=\"quote\">Quote</MenuItem>\r\n          <MenuItem value=\"price\">Price</MenuItem>\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"subtitle1\">Precision</Typography>\r\n        <Divider />\r\n      </Grid>\r\n      {Object.entries(precision).map(([t, p]) => [\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            type=\"text\"\r\n            label={price ? 'Asset Pair' : 'Asset'}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            disabled\r\n            value={t}\r\n          />\r\n        </Grid>,\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            type=\"number\"\r\n            label=\"Precision\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={isFinite(p) ? p : ''}\r\n            onChange={(e) => onPrecisionChange?.({...precision, [t]: Math.max(parseInt(e.target.value), 0)})}\r\n          />\r\n        </Grid>,\r\n        <Grid item xs={2}>\r\n          <IconButton onClick={() => handleDeletePrecision(t)} className={classes.removeButton}>\r\n            <RemoveIcon />\r\n          </IconButton>\r\n        </Grid>,\r\n      ])}\r\n      <Grid item xs={price ? 3 : 6}>\r\n        <TextField\r\n          select\r\n          label={price ? 'Base' : 'Asset'}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          required\r\n          value={newPrecisionFields.ticker}\r\n          onChange={(e) => onNewPrecisionFieldsChange?.({...newPrecisionFields, ticker: e.target.value})}\r\n        >\r\n          {assets?.map((a) => (\r\n            <MenuItem value={a.ticker} key={a.ticker}>{ a.ticker }</MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      {price && (\r\n        <Grid item xs={3}>\r\n          <TextField\r\n            select\r\n            label=\"Quote\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={newPrecisionFields.ticker2 ?? ''}\r\n            onChange={(e) => onNewPrecisionFieldsChange?.({...newPrecisionFields, ticker2: e.target.value})}\r\n          >\r\n            {assets?.map((a) => (\r\n              <MenuItem value={a.ticker} key={a.ticker}>{ a.ticker }</MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n      )}\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          type=\"number\"\r\n          label=\"Precision\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          required\r\n          value={isFinite(newPrecisionFields.precision) ? newPrecisionFields.precision : ''}\r\n          onChange={(e) => onNewPrecisionFieldsChange?.({...newPrecisionFields, precision: Math.max(parseInt(e.target.value), 0)})}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <IconButton color=\"secondary\" onClick={handleAddPrecision}>\r\n          <AddIcon />\r\n        </IconButton>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\ninterface FormFields {\r\n  name: string;\r\n  type: string;\r\n  hide: boolean;\r\n  precision: Record<string, number>;\r\n  decimalColumnDescription: string;\r\n  showTime: boolean,\r\n}\r\n\r\nconst initialFormFields: Readonly<FormFields> = {\r\n  name: '',\r\n  type: 'text',\r\n  hide: false,\r\n  precision: {},\r\n  decimalColumnDescription: 'base',\r\n  showTime: false,\r\n};\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  onDialogClose?: () => void;\r\n  journal: number;\r\n  role?: JournalColumnRole | null;\r\n}\r\n\r\n/**\r\n * React component. Add or change journal column dialog.\r\n * \r\n * Props:\r\n * - open: Dialog shows if true.\r\n * - onDialogClose: Function called when the dialog requests to be closed.\r\n * - index: The index of the journal selected.\r\n * - role: The column role of the selected journal to edit. Set to nullish value to add a new column.\r\n */\r\nfunction AddEditJournalColumnDialog(props: Readonly<Props>) {\r\n  const { open, onDialogClose, journal: index, role } = props;\r\n  const [fields, setFields] = useState<FormFields>(initialFormFields);\r\n  const [newPrecisionFields, setNewPrecisionFields] = useState<{ticker: string, precision: number}>({ticker: '', precision: 2});\r\n  const dispatch = useDispatch();\r\n  const journals = useSelector(selectActiveAccountJournals);\r\n  const allAssets = useSelector(selectActiveAccountAssetsAll);\r\n  // journalIndex is set to -1 initially\r\n  const journal = journals[index];\r\n  // column is the selected column if the props index and role are valid, else undefined\r\n  const column = (journal !== undefined && role !== null && role !== undefined) ? getJournalColumn(journal, role) : undefined;\r\n\r\n  const handleReset = () => { \r\n    if (column) {\r\n      setFields({\r\n        name: column.name,\r\n        type: column.type,\r\n        hide: column.hide,\r\n        precision: column.type === 'decimal' ? column.precision : initialFormFields.precision,\r\n        decimalColumnDescription: column.type === 'decimal' ? column.description : initialFormFields.decimalColumnDescription,\r\n        showTime: column.type === 'date' ? column.showTime : initialFormFields.showTime,\r\n      });\r\n    } else {\r\n      setFields(initialFormFields);\r\n    }\r\n    handleResetNewPrecisionFields();\r\n  };\r\n  \r\n  const handleResetNewPrecisionFields = () => {\r\n    setNewPrecisionFields({ticker: '', precision: NaN});\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // Core columns cannot change type\r\n    // Use default column type 'text' if type field is invalid\r\n    const newType: JournalColumnType = (column && typeof role === 'string')\r\n      ? column.type :\r\n      (isJournalColumnType(fields.type) ? fields.type : 'text');\r\n    // Construct the new column piece by piece\r\n    const partialColumn = {name: fields.name, hide: fields.hide};\r\n    switch (newType) {\r\n      case 'text':\r\n      case 'integer':\r\n      case 'boolean':\r\n      case 'asset':\r\n        addOrEditJournalColumn({...partialColumn, type: newType});\r\n        break;\r\n      case 'date':\r\n        addOrEditJournalColumn({\r\n          ...partialColumn,\r\n          type: newType,\r\n          showTime: fields.showTime,\r\n        });\r\n        break;\r\n      case 'decimal':\r\n        // Default description is 'base' if the date format field is invalid\r\n        addOrEditJournalColumn({\r\n          ...partialColumn,\r\n          type: newType,\r\n          precision: fields.precision,\r\n          // Description cannot change if it is a core column\r\n          description: (column !== undefined && isDecimalColumn(column)) ?\r\n            column.description :\r\n            (isDecimalColumnDescription(fields.decimalColumnDescription) ? fields.decimalColumnDescription : 'base'),\r\n        });\r\n        break;\r\n      default:\r\n        console.warn(`handleSubmit: Unreachable code: newType (${newType}) should be exhausted.`);\r\n    }\r\n    onDialogClose?.();\r\n  };\r\n\r\n  const addOrEditJournalColumn = (newColumn: JournalColumn) => {\r\n    if (column && role !== null && role !== undefined) {\r\n      dispatch(editJournalColumn({index: index, role: role, column: newColumn}));\r\n    } else {\r\n      if (isExtraColumn(newColumn)) {\r\n        dispatch(addJournalColumn({index: index, column: newColumn}));\r\n      } else {\r\n        console.warn(`addOrEditJournalColumn: Tried to add a new column that is not an ExtraColumn:\\n${JSON.stringify(newColumn, undefined, 2)}.`);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AddEditDialog\r\n      objectName={'Journal Column'}\r\n      edit={Boolean(column)}\r\n      open={open}\r\n      onClose={onDialogClose}\r\n      onEnter={handleReset}\r\n      onReset={handleReset}\r\n      onSubmit={handleSubmit}\r\n      contentMaxWidth=\"32rem\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            type=\"text\"\r\n            label=\"Role\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={journalColumnRoleDisplay(role ?? journal?.columns.extra.length ?? 0)}\r\n            disabled\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            type=\"text\"\r\n            label=\"Column Name\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={fields.name}\r\n            onChange={(e) => setFields(s => ({...s, name: e.target.value}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <TextField\r\n            select\r\n            label=\"Type\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            disabled={typeof role === 'string'}\r\n            value={fields.type}\r\n            onChange={(e) => setFields(s => ({...s, type: e.target.value}))}\r\n          >\r\n            <MenuItem value=\"text\">Text</MenuItem>\r\n            <MenuItem value=\"decimal\">Decimal</MenuItem>\r\n            <MenuItem value=\"integer\">Integer</MenuItem>\r\n            <MenuItem value=\"boolean\">Boolean</MenuItem>\r\n            {typeof role === 'string' && [\r\n              <MenuItem value=\"date\" key=\"date\">Date</MenuItem>,\r\n              <MenuItem value=\"asset\" key=\"asset\">Asset</MenuItem>,\r\n            ]}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <FormControlLabel\r\n            control={<Checkbox />}\r\n            checked={fields.hide}\r\n            onChange={(e, checked) => setFields(s => ({...s, hide: checked}))}\r\n            label=\"Hide\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        {fields.type === 'date' && (\r\n          <Grid item xs={12}>\r\n            <Box marginLeft=\"auto\" marginRight=\"auto\" width=\"fit-content\">\r\n              <FormControlLabel\r\n                control={<Checkbox />}\r\n                checked={fields.showTime}\r\n                onChange={(e, checked) => setFields(s => ({...s, showTime: checked}))}\r\n                label=\"Show Time\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Box>\r\n          </Grid>\r\n        )}\r\n        {fields.type === 'decimal' && (\r\n          <DecimalColumnSettings\r\n            price={fields.decimalColumnDescription === 'price'}\r\n            disableDescription={typeof role === 'string'}\r\n            description={fields.decimalColumnDescription}\r\n            onDescriptionChange={newDescription => setFields(s => ({...s, decimalColumnDescription: newDescription}))}\r\n            precision={fields.precision}\r\n            onPrecisionChange={newPrecision => setFields(s => ({...s, precision: newPrecision}))}\r\n            newPrecisionFields={newPrecisionFields}\r\n            onNewPrecisionFieldsChange={newFields => setNewPrecisionFields(newFields)}\r\n            onNewPrecisionFieldsReset={handleResetNewPrecisionFields}\r\n            assets={allAssets}\r\n          />\r\n        )}\r\n      </Grid>\r\n    </AddEditDialog>\r\n  );\r\n}\r\n\r\nexport default AddEditJournalColumnDialog;","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'; \r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport AddEditDialog from '../../components/AddEditDialog';\r\nimport { editJournalColumn, editJournalColumnOrder, selectActiveAccountJournals } from './accountsSlice';\r\nimport { getJournalColumn, JournalColumnRole, journalColumnRoleDisplay } from '../../models/account';\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  onDialogClose?: () => void;\r\n  journal: number;\r\n  displayRoleDefault?: boolean;\r\n  editHide?: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles<Theme, Props>((theme) => ({\r\n  listItem: {\r\n    paddingRight: props => props.editHide ? 100 : 50,\r\n  },\r\n}));\r\n\r\n/**\r\n * Edit journal column order dialog React function component.\r\n * \r\n * Props:\r\n * - open: Dialog shows if true.\r\n * - onDialogClose: Function called when the dialog requests to be closed.\r\n * - journal: The index of the journal of the column order to edit.\r\n * - displayRoleDefault: Use the column role as the identifier instead of the column name as the default. Default false.\r\n */\r\nfunction EditJournalColumnOrderDialog(props: Readonly<Props>) {\r\n  const classes = useStyles(props);\r\n  const { journal: journalIndex, onDialogClose, open, displayRoleDefault, editHide } = props;\r\n  const dispatch = useDispatch();\r\n  const journal = useSelector(selectActiveAccountJournals)[journalIndex];\r\n  // The actual column order in the global state\r\n  const columnOrder = journal?.columnOrder ?? [];\r\n  // The edit column order in the dialog. Confirmed when the \"edit\" button is clicked.\r\n  const [dialogColumnOrder, setDialogColumnOrder] = useState<JournalColumnRole[]>(columnOrder);\r\n  const [hiddenColumns, setHiddenColumns] = useState<JournalColumnRole[]>([]);\r\n  const [displayRole, setDisplayRole] = useState(displayRoleDefault ?? false);\r\n\r\n  const handleReset = () => {\r\n    setDialogColumnOrder(columnOrder);\r\n    if (journal !== undefined) {\r\n      const newHiddenColumns: JournalColumnRole[] = [];\r\n      columnOrder.forEach((role) => {\r\n        if (getJournalColumn(journal, role).hide) {\r\n          newHiddenColumns.push(role);\r\n        }\r\n      });\r\n      setHiddenColumns(newHiddenColumns);\r\n    } else {\r\n      setHiddenColumns([]);\r\n    }\r\n  };\r\n\r\n  const handleReorderColumn = (index: number, newIndex: number) => {\r\n    if (dialogColumnOrder[index] !== undefined) {\r\n      const newColumnOrder = [...dialogColumnOrder];\r\n      newColumnOrder.splice(newIndex, 0, newColumnOrder.splice(index, 1)[0]!);\r\n      setDialogColumnOrder(newColumnOrder);\r\n    }\r\n  };\r\n\r\n  const handleToggleHide = (role: JournalColumnRole) => {\r\n    const newHiddenColumns = [...hiddenColumns];\r\n    const hiddenIndex = hiddenColumns.indexOf(role);\r\n    if (hiddenIndex === -1) {\r\n      newHiddenColumns.push(role);\r\n    } else {\r\n      newHiddenColumns.splice(hiddenIndex, 1);\r\n    }\r\n    setHiddenColumns(newHiddenColumns);\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    if (journal !== undefined) {\r\n      dispatch(editJournalColumnOrder({index: journalIndex, columnOrder: dialogColumnOrder}));\r\n      if (editHide) {\r\n        dialogColumnOrder.forEach(role => {\r\n          const oldColumn = getJournalColumn(journal, role);\r\n          const newHide = hiddenColumns.indexOf(role) !== -1;\r\n          dispatch(editJournalColumn({index: journalIndex, role: role, column: {...oldColumn, hide: newHide}}));\r\n        });\r\n      }\r\n    }\r\n    onDialogClose?.();\r\n  };\r\n\r\n  return (\r\n    <AddEditDialog\r\n      objectName={'Columns Layout'}\r\n      edit\r\n      open={open}\r\n      onClose={onDialogClose}\r\n      onEnter={handleReset}\r\n      onReset={handleReset}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <FormControlLabel\r\n        control={<Switch />}\r\n        checked={displayRole}\r\n        onChange={(e, checked) => setDisplayRole(checked)}\r\n        label={displayRole ? 'Role' : 'Name'}\r\n        labelPlacement=\"end\"\r\n      />\r\n      <List>\r\n        {dialogColumnOrder.map((role, i) =>\r\n          <ListItem dense disableGutters divider classes={{secondaryAction: classes.listItem}} key={role}>\r\n            <ListItemIcon>\r\n              <Tooltip title=\"Reorder column up\">\r\n                <IconButton\r\n                  disableRipple\r\n                  disabled={i === 0}\r\n                  onClick={() => handleReorderColumn(i, i - 1)}\r\n                  aria-label=\"Reorder column up\"\r\n                >\r\n                  <ArrowUpwardIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </ListItemIcon>\r\n            <ListItemText primary={displayRole ? journalColumnRoleDisplay(role) : getJournalColumn(journal!, role).name} />\r\n            <ListItemSecondaryAction>\r\n              {editHide && <Tooltip title=\"Show column\">\r\n                <Checkbox\r\n                  checked={hiddenColumns.indexOf(role) === -1}\r\n                  onChange={() => handleToggleHide(role)}\r\n                />\r\n              </Tooltip>}\r\n              <Tooltip title=\"Reorder column down\">\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  disableRipple\r\n                  disabled={i === dialogColumnOrder.length - 1}\r\n                  onClick={() => handleReorderColumn(i, i + 1)}\r\n                  aria-label=\"Reorder column down\"\r\n                >\r\n                  <ArrowDownwardIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        )}\r\n      </List>\r\n    </AddEditDialog>\r\n  );\r\n}\r\n\r\nexport default EditJournalColumnOrderDialog;","\r\nimport React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Box from '@material-ui/core/Box';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport AddEditTransactionDialog from './AddEditTransactionDialog';\r\nimport AddEditJournalDialog from '../accounts/AddEditJournalDialog';\r\nimport AddEditJournalColumnDialog from '../accounts/AddEditJournalColumnDialog';\r\nimport EditJournalColumnOrderDialog from '../accounts/EditJournalColumnOrderDialog';\r\nimport { selectActiveAccountAssetsAll, selectActiveAccountJournals } from '../accounts/accountsSlice';\r\nimport {\r\n  getJournalColumn,\r\n  isRightAlignJournalColumnType,\r\n  transactionDataDisplay,\r\n  Journal,\r\n  JournalColumnRole,\r\n  Asset,\r\n} from '../../models/account';\r\n\r\ninterface JournalHeadersProps {\r\n  journal: Journal;\r\n  onEditColumnSettings?: (role: JournalColumnRole) => void;\r\n  onEditJournalSettings?: () => void;\r\n  onEditColumnLayout?: () => void;\r\n}\r\n\r\nconst useJournalHeadersStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: '1px solid rgba(224, 224, 224, 1)',\r\n      borderRight: '1px solid rgba(224, 224, 224, 1)',\r\n      padding: theme.spacing(0.75, 1),\r\n      '&:last-child': {\r\n        borderRight: 'none',\r\n        paddingRight: theme.spacing(1),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nfunction JournalHeaders(props: Readonly<JournalHeadersProps>) {\r\n  const { journal, onEditColumnSettings, onEditJournalSettings, onEditColumnLayout } = props;\r\n  const classes = useJournalHeadersStyles();\r\n  const [menuAnchor, setMenuAnchor] = useState<Element | null>(null);\r\n\r\n  const handleEditJournalSettings = () => {\r\n    onEditJournalSettings?.();\r\n    setMenuAnchor(null);\r\n  };\r\n\r\n  const handleEditColumnLayout = () => {\r\n    onEditColumnLayout?.();\r\n    setMenuAnchor(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow className={classes.root}>\r\n        {journal.columnOrder.map((role) => {\r\n          const column = getJournalColumn(journal, role);\r\n          return !column.hide && <TableCell key={role}>\r\n            <Box display=\"flex\">\r\n              <Box component=\"span\" flexGrow={1}>\r\n                { column.name }\r\n              </Box>\r\n              <IconButton\r\n                size=\"small\"\r\n                edge=\"end\"\r\n                onClick={() => onEditColumnSettings?.(role)}\r\n              >\r\n                <SettingsIcon fontSize=\"small\" style={{fontSize:'1rem'}} />\r\n              </IconButton>\r\n            </Box>\r\n          </TableCell>;\r\n        })}\r\n        <TableCell align=\"center\">\r\n          <IconButton color=\"secondary\" onClick={(e) => setMenuAnchor(e.currentTarget)} size=\"small\">\r\n            <MoreVertIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n      <Menu\r\n        anchorEl={menuAnchor}\r\n        open={menuAnchor !== null}\r\n        onClose={() => setMenuAnchor(null)}\r\n      >\r\n        <MenuItem onClick={handleEditJournalSettings}>Settings</MenuItem>\r\n        <MenuItem onClick={handleEditColumnLayout}>Columns</MenuItem>\r\n      </Menu>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\ninterface JournalRowProps {\r\n  journal: number;\r\n  transaction: number;\r\n  assets?: Asset[];\r\n  onEdit?: (journal: number, transaction: number) => void;\r\n  onDelete?: (journal: number, transaction: number) => void;\r\n}\r\n\r\nconst useJournalRowStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: '1px solid rgba(224, 224, 224, 1)',\r\n      borderRight: '1px solid rgba(224, 224, 224, 1)',\r\n      padding: theme.spacing(0.25, 1),\r\n      '&:last-child': {\r\n        borderRight: 'none',\r\n        paddingRight: theme.spacing(1),\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nfunction JournalRow(props: Readonly<JournalRowProps>) {\r\n  const { journal: journalIndex, transaction: transactionIndex, assets, onEdit, onDelete } = props;\r\n  const classes = useJournalRowStyles();\r\n  const [menuAnchor, setMenuAnchor] = useState<Element | null>(null);\r\n  const journal = useSelector(selectActiveAccountJournals)[journalIndex];\r\n  const transaction = journal?.transactions[transactionIndex];\r\n\r\n  const handleEditTransaction = () => {\r\n    onEdit?.(journalIndex, transactionIndex);\r\n    setMenuAnchor(null);\r\n  };\r\n\r\n  const handleDeleteTransaction = () => {\r\n    onDelete?.(journalIndex, transactionIndex);\r\n    setMenuAnchor(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow\r\n        hover\r\n        className={classes.root}\r\n      >\r\n        {journal?.columnOrder.map((role) => {\r\n          const column = getJournalColumn(journal, role);\r\n          return !column.hide && <TableCell\r\n            align={isRightAlignJournalColumnType(column.type) ? 'right' : undefined}\r\n            key={role}\r\n          >\r\n            { transaction && transactionDataDisplay(transaction, role, journal, assets) }\r\n          </TableCell>;\r\n        })}\r\n        <TableCell align=\"center\">\r\n          <IconButton size=\"small\" onClick={(e) => setMenuAnchor(e.currentTarget)}>\r\n            <MoreVertIcon fontSize=\"small\" />\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n      <Menu\r\n        anchorEl={menuAnchor}\r\n        open={menuAnchor !== null}\r\n        onClose={() => setMenuAnchor(null)}\r\n      >\r\n        <MenuItem onClick={handleEditTransaction}>\r\n          <ListItemIcon><EditIcon /></ListItemIcon>\r\n          Edit\r\n        </MenuItem>\r\n        <MenuItem onClick={handleDeleteTransaction}>\r\n          <ListItemIcon><DeleteIcon /></ListItemIcon>\r\n          Delete\r\n        </MenuItem>\r\n      </Menu>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\ninterface JournalSheetProps {\r\n  journal: number,\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  table: {\r\n    borderRadius: 0,\r\n    boxShadow: 'none',\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction JournalSheet(props: Readonly<JournalSheetProps>) {\r\n  const classes = useStyles();\r\n  const [transactionDialogOpen, setTransactionDialogOpen] = useState(false);\r\n  const [selectedTransaction, setSelectedTransaction] = useState<number>(-1);\r\n  const [journalSettingsDialogOpen, setJournalSettingsDialogOpen] = useState(false);\r\n  const [journalColumnOrderDialogOpen, setJournalColumnOrderDialogOpen] = useState(false);\r\n  const [journalColumnDialogOpen, setJournalColumnDialogOpen] = useState(false);\r\n  const [selectedJournalColumn, setSelectedJournalColumn] = useState<JournalColumnRole | null>(null);\r\n  const assets = useSelector(selectActiveAccountAssetsAll);\r\n  const journal = useSelector(selectActiveAccountJournals)[props.journal];\r\n\r\n  const openAddDialog = () => {\r\n    setSelectedTransaction(-1);\r\n    setTransactionDialogOpen(true);\r\n  };\r\n\r\n  const openEditDialog = (transaction: number) => {\r\n    setSelectedTransaction(transaction);\r\n    setTransactionDialogOpen(true);\r\n  };\r\n\r\n  const openJournalColumnDialog = (role: JournalColumnRole) => {\r\n    setSelectedJournalColumn(role);\r\n    setJournalColumnDialogOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Box role=\"tabpanel\">\r\n      <TableContainer component={Paper} className={classes.table}>\r\n        <Table\r\n          size=\"small\"\r\n          stickyHeader\r\n        >\r\n          <TableHead>\r\n            {journal && (\r\n              <JournalHeaders\r\n                journal={journal}\r\n                onEditColumnSettings={openJournalColumnDialog}\r\n                onEditJournalSettings={() => setJournalSettingsDialogOpen(true)}\r\n                onEditColumnLayout={() => setJournalColumnOrderDialogOpen(true)}\r\n              />\r\n            )}\r\n          </TableHead>\r\n          <TableBody>\r\n            {journal?.transactions.map((_, index) => (\r\n              <JournalRow\r\n                journal={props.journal}\r\n                transaction={index}\r\n                assets={assets}\r\n                onEdit={(j, tx) => openEditDialog(tx)}\r\n                key={index}\r\n              />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Fab color=\"secondary\" className={classes.fab} onClick={openAddDialog}>\r\n        <AddIcon />\r\n      </Fab>\r\n      <AddEditTransactionDialog\r\n        journal={props.journal}\r\n        transaction={selectedTransaction}\r\n        open={transactionDialogOpen}\r\n        onDialogClose={() => setTransactionDialogOpen(false)}\r\n      />\r\n      <AddEditJournalDialog\r\n        journal={props.journal}\r\n        open={journalSettingsDialogOpen}\r\n        onDialogClose={() => setJournalSettingsDialogOpen(false)}\r\n      />\r\n      <AddEditJournalColumnDialog\r\n        journal={props.journal}\r\n        role={selectedJournalColumn}\r\n        open={journalColumnDialogOpen}\r\n        onDialogClose={() => setJournalColumnDialogOpen(false)}\r\n      />\r\n      <EditJournalColumnOrderDialog\r\n        journal={props.journal}\r\n        open={journalColumnOrderDialogOpen}\r\n        onDialogClose={() => setJournalColumnOrderDialogOpen(false)}\r\n        editHide\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n  \r\nexport default JournalSheet;","import Typography from '@material-ui/core/Typography';\r\n\r\nfunction AddJournalTab() {\r\n  return (\r\n    <div role=\"tabpanel\">\r\n      <Typography variant=\"h3\">Add Journal</Typography>\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default AddJournalTab;","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport JournalSheet from './JournalSheet';\r\nimport AddJournalTab from './AddJournalTab';\r\nimport { selectActiveAccountJournals } from '../accounts/accountsSlice';\r\n\r\nfunction Journals() {\r\n  const [activeTab, setActiveTab] = useState<number>(0);\r\n  const journals = useSelector(selectActiveAccountJournals);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={activeTab} onChange={(e, v) => setActiveTab(v)} aria-label=\"Journals tab\">\r\n          {journals.map((journal, index) =>\r\n            <Tab label={journal.name} key={index} aria-label={`${journal.name} tab`} />\r\n          )}\r\n          <Tab icon={<AddIcon />} />\r\n        </Tabs>\r\n      </AppBar>\r\n      {journals.map((journal, index) =>\r\n        (activeTab === index) && <JournalSheet journal={index} key={index} />\r\n      )}\r\n      { activeTab === journals.length && <AddJournalTab /> }\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Journals;","\r\n\r\nfunction CapitalChanges(props) {\r\n  return (\r\n    <p>Capital Changes</p>\r\n  );\r\n}\r\n  \r\nexport default CapitalChanges;","\r\n\r\nfunction AssetStatements(props) {\r\n    return (\r\n      <p>Asset Statements</p>\r\n    );\r\n  }\r\n    \r\n  export default AssetStatements;","import { useState } from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport AddEditDialog from '../../components/AddEditDialog';\r\nimport { Asset } from \"../../models/account\";\r\n\r\nexport interface FormFields {\r\n  name: string,\r\n  ticker: string,\r\n  precision: number,\r\n  pricePrecision: number,\r\n  isCurrency: boolean;\r\n  symbol: string;\r\n}\r\n\r\nconst initialFormFields: FormFields = {\r\n  name: '',\r\n  ticker: '',\r\n  precision: 2,\r\n  pricePrecision: 2,\r\n  isCurrency: false,\r\n  symbol: '',\r\n};\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  onDialogClose?: () => void;\r\n  asset?: Asset | null;\r\n  onSubmit?: (fields: FormFields) => void;\r\n}\r\n\r\n/**\r\n * Add or change asset dialog React function component.\r\n * \r\n * Props:\r\n * - open: Dialog shows if true.\r\n * - onDialogClose: Function called when the dialog requests to be closed.\r\n * - asset: Asset object to edit, null if add new asset.\r\n * - onSubmit: Function called when the add/edit button is pressed.\r\n */\r\nfunction AddEditAssetDialog(props: Readonly<Props>) {\r\n  const { open, asset, onDialogClose, onSubmit } = props;\r\n  const [fields, setFields] = useState(initialFormFields);\r\n\r\n  const handleReset = () => {\r\n    if (asset) {\r\n      setFields({\r\n        name: asset.name,\r\n        ticker: asset.ticker,\r\n        precision: asset.precision,\r\n        pricePrecision: asset.pricePrecision,\r\n        isCurrency: asset.isCurrency,\r\n        symbol: asset.symbol ?? '',\r\n      });\r\n    } else {\r\n      setFields(initialFormFields);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AddEditDialog\r\n      objectName={'Asset'}\r\n      edit={Boolean(asset)}\r\n      open={open}\r\n      onClose={onDialogClose}\r\n      onEnter={handleReset}\r\n      onReset={handleReset}\r\n      onSubmit={() => onSubmit?.(fields)}\r\n      contentMaxWidth=\"30rem\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            type=\"text\"\r\n            label=\"Asset Name\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={fields.name}\r\n            onChange={(e) => setFields(s => ({...s, name: e.target.value}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <TextField\r\n            type=\"text\"\r\n            label=\"Ticker\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={fields.ticker}\r\n            onChange={(e) => setFields(s => ({...s, ticker: e.target.value}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <TextField\r\n            type=\"text\"\r\n            label=\"Symbol\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            value={fields.symbol}\r\n            onChange={(e) => setFields(s => ({...s, symbol: e.target.value}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <FormControlLabel\r\n            control={<Checkbox />}\r\n            checked={fields.isCurrency}\r\n            onChange={(e, checked) => setFields(s => ({...s, isCurrency: checked}))}\r\n            label=\"Currency\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            type=\"number\"\r\n            label=\"Precision\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={fields.precision}\r\n            onChange={(e) => setFields(s => ({...s, precision: parseInt(e.target.value)}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            type=\"number\"\r\n            label=\"Price Precision\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={fields.pricePrecision}\r\n            onChange={(e) => setFields(s => ({...s, pricePrecision: parseInt(e.target.value)}))}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </AddEditDialog>\r\n  );\r\n}\r\n\r\nexport default AddEditAssetDialog;","import clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\ninterface Props {\r\n  className?: string;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n    paddingLeft: theme.spacing(4),\r\n    paddingRight: theme.spacing(4),\r\n  },\r\n}));\r\n\r\n/**\r\n * React component. A visual wrapper for a settings section, put contents as children.\r\n */\r\nfunction SettingsSection(props: Props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper component=\"section\" elevation={0} variant=\"outlined\" className={clsx(classes.root, props.className)}>\r\n      { props.children }\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default SettingsSection;","import { PropTypes } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Variant } from '@material-ui/core/styles/createTypography';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\ninterface Props {\r\n  title: string;\r\n  icon: JSX.Element;\r\n  variant?: Variant;\r\n  gutterBottom?: boolean;\r\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\r\n  buttonColor?: PropTypes.Color;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    marginLeft: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(0.5),\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n/**\r\n * A React component. A heading with an icon button on the right.\r\n * \r\n * Props:\r\n * - title: The title.\r\n * - variant: The variant for the Typography component. Default \"h6\".\r\n * - gutterBottom: Add margin to the Typography component.\r\n * - icon: The icon component.\r\n * - buttonColor: The color of the IconButton component.\r\n * - onClick: Callback when the icon button is clicked.\r\n */\r\nfunction IconButtonHeading({variant = 'h6', ...props}: Props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Typography variant={variant} gutterBottom={props.gutterBottom}>\r\n      { props.title }\r\n      <IconButton size=\"small\" onClick={props.onClick} color={props.buttonColor} className={classes.button}>\r\n        { props.icon }\r\n      </IconButton>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default IconButtonHeading;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddEditAssetDialog, { FormFields } from './AddEditAssetDialog';\r\nimport SettingsSection from '../../components/SettingsSection';\r\nimport IconButtonHeading from '../../components/IconButtonHeading';\r\nimport { changeAccountingCurrency, selectActiveAccountAccountingCurrency } from './accountsSlice';\r\n\r\nfunction AccountMainSettings() {\r\n  const [accountingCurrencyDialogOpen, setAccountingCurrencyDialogOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const accountingCurrency = useSelector(selectActiveAccountAccountingCurrency);\r\n\r\n  const handleChangeAccountingCurrency = (fields: FormFields) => {\r\n    dispatch(changeAccountingCurrency({currency: fields}));\r\n    setAccountingCurrencyDialogOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SettingsSection>\r\n        <IconButtonHeading\r\n          variant=\"h6\"\r\n          gutterBottom\r\n          title={'Accounting Currency'}\r\n          icon={<EditIcon fontSize=\"small\" />}\r\n          onClick={() => setAccountingCurrencyDialogOpen(true)}\r\n        />\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell align=\"center\">Ticker</TableCell>\r\n                <TableCell align=\"center\">Precision</TableCell>\r\n                <TableCell align=\"center\">Price Precision</TableCell>\r\n                <TableCell align=\"center\">Currency</TableCell>\r\n                <TableCell align=\"center\">Symbol</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell>{ accountingCurrency?.name }</TableCell>\r\n                <TableCell align=\"center\">{ accountingCurrency?.ticker }</TableCell>\r\n                <TableCell align=\"center\">{ accountingCurrency?.precision }</TableCell>\r\n                <TableCell align=\"center\">{ accountingCurrency?.pricePrecision }</TableCell>\r\n                <TableCell align=\"center\">{ accountingCurrency?.isCurrency ? 'Yes' : 'No' }</TableCell>\r\n                <TableCell align=\"center\">{ accountingCurrency?.symbol }</TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </SettingsSection>\r\n      <AddEditAssetDialog\r\n        open={accountingCurrencyDialogOpen}\r\n        onDialogClose={() => setAccountingCurrencyDialogOpen(false)}\r\n        asset={accountingCurrency}\r\n        onSubmit={handleChangeAccountingCurrency}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AccountMainSettings;","import { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\ninterface Props {\r\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\r\n  disabled?: boolean;\r\n  buttonSize?: 'small' | 'medium';\r\n  iconSize?: 'small' | 'inherit' | 'default' | 'large';\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    color: theme.palette.error.main,\r\n  },\r\n}));\r\n\r\nfunction DeleteButton(props: Props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <IconButton\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n      size={props.buttonSize}\r\n      className={classes.root}\r\n      aria-label=\"Delete\"\r\n    >\r\n      <DeleteIcon fontSize={props.iconSize} />\r\n    </IconButton>\r\n  );\r\n}\r\n\r\nexport default DeleteButton;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SettingsSection from '../../components/SettingsSection';\r\nimport IconButtonHeading from '../../components/IconButtonHeading';\r\nimport DeleteButton from '../../components/DeleteButton';\r\nimport AddEditAssetDialog, { FormFields } from './AddEditAssetDialog';\r\nimport { addAsset, editAsset, deleteAsset, selectActiveAccountAssets } from './accountsSlice';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tableRow: {\r\n    cursor: 'pointer',\r\n  },\r\n}));\r\n\r\nfunction AccountAssetsSettings() {\r\n  const classes = useStyles();\r\n  const [addEditAssetDialogOpen, setAddEditAssetDialogOpen] = useState(false);\r\n  // Index of the Asset to edit when the edit asset button is clicked, set to -1 to add new asset\r\n  const [selectedAsset, setSelectedAsset] = useState(-1);\r\n  const dispatch = useDispatch();\r\n  const assets = useSelector(selectActiveAccountAssets);\r\n\r\n  const openAddAssetDialog = () => {\r\n    setSelectedAsset(-1);\r\n    setAddEditAssetDialogOpen(true);\r\n  };\r\n\r\n  const openEditAssetDialog = (index: number) => {\r\n    setSelectedAsset(index);\r\n    setAddEditAssetDialogOpen(true);\r\n  }\r\n\r\n  const handleAddEditAsset = (fields: FormFields) => {\r\n    if (selectedAsset < 0) {\r\n      dispatch(addAsset({asset: fields}));\r\n    } else {\r\n      dispatch(editAsset({index: selectedAsset, asset: fields}));\r\n    }\r\n    setAddEditAssetDialogOpen(false);\r\n  };\r\n\r\n  const handleDeleteAsset = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, index: number) => {\r\n    dispatch(deleteAsset({index: index}));\r\n    e.stopPropagation();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SettingsSection>\r\n        <IconButtonHeading\r\n          variant=\"h6\"\r\n          gutterBottom\r\n          title={'Assets'}\r\n          icon={<AddIcon fontSize=\"small\" />}\r\n          onClick={openAddAssetDialog}\r\n        />\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell align=\"center\">Ticker</TableCell>\r\n                <TableCell align=\"center\">Precision</TableCell>\r\n                <TableCell align=\"center\">Price Precision</TableCell>\r\n                <TableCell align=\"center\">Currency</TableCell>\r\n                <TableCell align=\"center\">Symbol</TableCell>\r\n                <TableCell align=\"center\"></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {assets.map((a, i) =>\r\n                <TableRow hover className={classes.tableRow} onClick={() => openEditAssetDialog(i)} key={i}>\r\n                  <TableCell>{ a.name }</TableCell>\r\n                  <TableCell align=\"center\">{ a.ticker }</TableCell>\r\n                  <TableCell align=\"center\">{ a.precision }</TableCell>\r\n                  <TableCell align=\"center\">{ a.pricePrecision }</TableCell>\r\n                  <TableCell align=\"center\">{ a.isCurrency ? 'Yes' : 'No' }</TableCell>\r\n                  <TableCell align=\"center\">{ a.symbol }</TableCell>\r\n                  <TableCell align=\"center\" size=\"small\">\r\n                    <DeleteButton onClick={e => handleDeleteAsset(e, i)} />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </SettingsSection>\r\n      <AddEditAssetDialog\r\n        open={addEditAssetDialogOpen}\r\n        onDialogClose={() => setAddEditAssetDialogOpen(false)}\r\n        asset={assets[selectedAsset]}\r\n        onSubmit={handleAddEditAsset}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AccountAssetsSettings;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Box from '@material-ui/core/Box';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport AddEditJournalDialog from './AddEditJournalDialog';\r\nimport AddEditJournalColumnDialog from './AddEditJournalColumnDialog';\r\nimport EditJournalColumnOrderDialog from './EditJournalColumnOrderDialog';\r\nimport SettingsSection from '../../components/SettingsSection';\r\nimport IconButtonHeading from '../../components/IconButtonHeading';\r\nimport DeleteButton from '../../components/DeleteButton';\r\nimport { deleteJournal, deleteJournalColumn, selectActiveAccountJournals } from './accountsSlice';\r\nimport { Journal, JournalColumn, JournalColumnRole, journalColumnRoleDisplay } from '../../models/account';\r\n\r\ninterface JournalColumnRowProps {\r\n  role: JournalColumnRole;\r\n  journalIndex: number;\r\n  journalColumn: JournalColumn;\r\n  onClick?: React.MouseEventHandler<HTMLTableRowElement>;\r\n}\r\n\r\nconst useJournalColumnRowStyles = makeStyles<Theme, JournalColumnRowProps>(theme => ({\r\n  root: {\r\n    cursor: props => props.onClick ? 'pointer' : undefined,\r\n  },\r\n}));\r\n\r\nfunction JournalColumnRow(props: JournalColumnRowProps) {\r\n  const classes = useJournalColumnRowStyles(props);\r\n  const { role, journalIndex, journalColumn, onClick } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDeleteColumn = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    if (typeof role === 'number') {\r\n      dispatch(deleteJournalColumn({journalIndex: journalIndex, columnIndex: role}));\r\n    }\r\n    e.stopPropagation();\r\n  };\r\n\r\n  return (\r\n    <TableRow hover onClick={onClick} className={classes.root}>\r\n      <TableCell>{ journalColumnRoleDisplay(role) }</TableCell>\r\n      <TableCell>{ journalColumn.name }</TableCell>\r\n      <TableCell>{ journalColumn.type }</TableCell>\r\n      <TableCell align=\"center\">\r\n        {journalColumn.type === 'decimal' && (\r\n          Object.keys(journalColumn.precision).length === 0 ?\r\n            'Default' :\r\n            `${Object.keys(journalColumn.precision).length} mapping(s)`\r\n        )}\r\n      </TableCell>\r\n      <TableCell align=\"center\">{ journalColumn.type === 'date' && (journalColumn.showTime ? 'Yes' : 'No') }</TableCell>\r\n      <TableCell align=\"center\">{ journalColumn.hide ? 'Yes' : 'No' }</TableCell>\r\n      <TableCell align=\"center\">\r\n        <DeleteButton\r\n          buttonSize=\"small\"\r\n          iconSize=\"small\"\r\n          disabled={typeof role !== 'number'}\r\n          onClick={handleDeleteColumn}\r\n        />\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n\r\ninterface JournalRowProps {\r\n  index: number;\r\n  journal: Journal;\r\n  onClick?: React.MouseEventHandler<HTMLTableRowElement>;\r\n  onAddColumn?: React.MouseEventHandler<HTMLButtonElement>;\r\n  onEditColumn?: (role: JournalColumnRole) => void;\r\n  onEditColumnOrder?: React.MouseEventHandler<HTMLButtonElement>;\r\n}\r\n\r\nconst useJournalRowStyles = makeStyles<Theme, JournalRowProps>(theme => ({\r\n  mainRow: {\r\n    cursor: props => props.onClick ? 'pointer' : undefined,\r\n    '& > *': {                // select all children\r\n      borderBottom: 'none',   // remove the bottom border of the TableCell children\r\n    },\r\n  },\r\n  collapsibleCell: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n  columnOrderChip: {\r\n    marginRight: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\n/**\r\n * React component.\r\n * \r\n * Props:\r\n * - journal: The journal object of the row.\r\n * - index: The index of the journal in the account.\r\n * - onAddColumn: Callback when requested to add a new column.\r\n * - onEditColumn: Callback when requested to edit a column. Signature is (role).\r\n * - onEditColumnOrder: Callback when requested to edit the column order.\r\n * - onClick: Callback when the row is clicked.\r\n */\r\nfunction JournalRow(props: JournalRowProps) {\r\n  const classes = useJournalRowStyles(props);\r\n  const { journal, index, onAddColumn, onEditColumn, onEditColumnOrder, onClick } = props;\r\n  const [open, setOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const expandRow = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    setOpen(s => !s);\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const handleDeleteJournal = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    dispatch(deleteJournal({index: index}));\r\n    e.stopPropagation();\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow hover onClick={onClick} className={classes.mainRow}>\r\n        <TableCell>{journal.name}</TableCell>\r\n        <TableCell align=\"center\">{journal.type}</TableCell>\r\n        <TableCell align=\"center\" size=\"small\">\r\n          <IconButton aria-label=\"Expand row\" onClick={expandRow}>\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell align=\"center\" size=\"small\">\r\n          <DeleteButton onClick={handleDeleteJournal} />\r\n        </TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell colSpan={4} className={classes.collapsibleCell}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <IconButtonHeading\r\n                variant=\"h6\"\r\n                title={'Columns'}\r\n                icon={<AddIcon fontSize=\"small\" />}\r\n                onClick={onAddColumn}\r\n              />\r\n              <Table size=\"small\" aria-label=\"Journal columns\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Role</TableCell>\r\n                    <TableCell>Name</TableCell>\r\n                    <TableCell>Type</TableCell>\r\n                    <TableCell align=\"center\">Precision</TableCell>\r\n                    <TableCell align=\"center\">Show Time</TableCell>\r\n                    <TableCell align=\"center\">Hide</TableCell>\r\n                    <TableCell align=\"center\"></TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {Object.entries(journal.columns).map(([role, column]: [string, JournalColumn]) =>\r\n                    role !== 'extra' && <JournalColumnRow\r\n                      role={role as JournalColumnRole}\r\n                      journalIndex={index}\r\n                      journalColumn={column}\r\n                      onClick={() => onEditColumn?.(role as JournalColumnRole)}\r\n                      key={role}\r\n                    />\r\n                  )}\r\n                  {journal.columns.extra.map((column, colIndex: number) =>\r\n                    <JournalColumnRow\r\n                      role={colIndex}\r\n                      journalIndex={index}\r\n                      journalColumn={column}\r\n                      onClick={() => onEditColumn?.(colIndex)}\r\n                      key={colIndex}\r\n                    />\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n              <Box mt={1}>\r\n                <IconButtonHeading\r\n                  variant=\"h6\"\r\n                  title={'Column Order'}\r\n                  icon={<EditIcon fontSize=\"small\" />}\r\n                  onClick={onEditColumnOrder}\r\n                />\r\n                <Box display=\"flex\" flexWrap=\"wrap\">\r\n                  {journal.columnOrder.map(c =>\r\n                    <Chip label={journalColumnRoleDisplay(c)} className={classes.columnOrderChip} key={c} />\r\n                  )}\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n/**\r\n * See https://material-ui.com/components/tables/#collapsible-table.\r\n */\r\nfunction AccountJournalsSettings() {\r\n  const [addEditJournalDialogOpen, setAddEditJournalDialogOpen] = useState(false);\r\n  const [addEditJournalColumnDialogOpen, setAddEditJournalColumnDialogOpen] = useState(false);\r\n  const [editJournalColumnOrderDialogOpen, setEditJournalColumnOrderDialogOpen] = useState(false);\r\n  // Index of the Journal to edit when editing a journal setting. Set to -1 to add new journal.\r\n  const [selectedJournal, setSelectedJournal] = useState(-1);\r\n  // The \"role\" of the Journal Column to edit. Set to null to add new journal column.\r\n  const [selectedJournalColumn, setSelectedJournalColumn] = useState<JournalColumnRole | null>(null);\r\n  const journals = useSelector(selectActiveAccountJournals);\r\n\r\n  const openAddJournalDialog = () => {\r\n    setSelectedJournal(-1);\r\n    setAddEditJournalDialogOpen(true);\r\n  };\r\n\r\n  const openEditJournalDialog = (index: number) => {\r\n    setSelectedJournal(index);\r\n    setAddEditJournalDialogOpen(true);\r\n  };\r\n\r\n  const openAddColumnDialog = (index: number) => {\r\n    setSelectedJournal(index);\r\n    setSelectedJournalColumn(null);\r\n    setAddEditJournalColumnDialogOpen(true);\r\n  };\r\n\r\n  const openEditColumnDialog = (index: number, role: JournalColumnRole) => {\r\n    setSelectedJournal(index);\r\n    setSelectedJournalColumn(role);\r\n    setAddEditJournalColumnDialogOpen(true);\r\n  };\r\n\r\n  const openEditColumnOrderDialog = (index: number) => {\r\n    setSelectedJournal(index);\r\n    setEditJournalColumnOrderDialogOpen(true);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SettingsSection>\r\n        <IconButtonHeading\r\n          variant=\"h6\"\r\n          title={'Journals'}\r\n          icon={<AddIcon fontSize=\"small\" />}\r\n          onClick={openAddJournalDialog}\r\n        />\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell align=\"center\">Type</TableCell>\r\n                <TableCell align=\"center\">Columns</TableCell>\r\n                <TableCell align=\"center\"></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {journals.map((j, i) =>\r\n                <JournalRow\r\n                  journal={j}\r\n                  index={i}\r\n                  onClick={() => openEditJournalDialog(i)}\r\n                  onAddColumn={() => openAddColumnDialog(i)}\r\n                  onEditColumn={role => openEditColumnDialog(i, role)}\r\n                  onEditColumnOrder={() => openEditColumnOrderDialog(i)}\r\n                  key={i}\r\n                />\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </SettingsSection>\r\n      <AddEditJournalDialog\r\n        open={addEditJournalDialogOpen}\r\n        onDialogClose={() => setAddEditJournalDialogOpen(false)}\r\n        journal={selectedJournal}\r\n      />\r\n      <AddEditJournalColumnDialog\r\n        open={addEditJournalColumnDialogOpen}\r\n        onDialogClose={() => setAddEditJournalColumnDialogOpen(false)}\r\n        journal={selectedJournal}\r\n        role={selectedJournalColumn}\r\n      />\r\n      <EditJournalColumnOrderDialog\r\n        open={editJournalColumnOrderDialogOpen}\r\n        onDialogClose={() => setEditJournalColumnOrderDialogOpen(false)}\r\n        journal={selectedJournal}\r\n        displayRoleDefault\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AccountJournalsSettings;","import Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AccountMainSettings from './AccountMainSettings';\r\nimport AccountAssetsSettings from './AccountAssetsSettings';\r\nimport AccountJournalsSettings from './AccountJournalsSettings';\r\n\r\nfunction AccountSettings() {\r\n  return (\r\n    <Container>\r\n      <Box my={2}>\r\n        <Typography variant=\"h4\">Account Settings</Typography>\r\n      </Box>\r\n      <Box my={2}>\r\n        <AccountMainSettings />\r\n      </Box>\r\n      <Box my={2}>\r\n        <AccountAssetsSettings />\r\n      </Box>\r\n      <Box my={2}>\r\n        <AccountJournalsSettings />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AccountSettings;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TopAppBar from './features/navigation/TopAppBar';\r\nimport SideDrawer from './features/navigation/SideDrawer';\r\nimport Journals from './features/journals/Journals';\r\nimport { addDefaultAccount } from './features/accounts/accountsSlice';\r\nimport CapitalChanges from './features/capital-changes/CapitalChanges';\r\nimport AssetStatements from './features/asset-statements/AssetStatements';\r\nimport AccountSettings from './features/accounts/AccountSettings';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      drawerOpen: false,\r\n    };\r\n\r\n    this.openDrawer = this.openDrawer.bind(this);\r\n    this.closeDrawer = this.closeDrawer.bind(this);\r\n  }\r\n\r\n  openDrawer() {\r\n    this.setState({drawerOpen: true});\r\n  }\r\n\r\n  closeDrawer() {\r\n    this.setState({drawerOpen: false});\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Init with test data\r\n    this.props.dispatch(addDefaultAccount('Coinbase'));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Box display=\"flex\">\r\n        <TopAppBar\r\n          onMenuClick={this.openDrawer}\r\n          drawerOpen={this.state.drawerOpen}\r\n        />\r\n        <aside>\r\n          <SideDrawer open={this.state.drawerOpen} onClose={this.closeDrawer} />\r\n        </aside>\r\n        <Box component=\"main\" flexGrow={1}>\r\n          {/* Spacing with (height = top app bar height) so content is not clipped by the fixed app bar */}\r\n          <Toolbar />\r\n          <Switch>\r\n            <Route path=\"/journals\">\r\n              <Journals />\r\n            </Route>\r\n            <Route path=\"/capital-changes\">\r\n              <CapitalChanges />\r\n            </Route>\r\n            <Route path=\"/asset-statements\">\r\n              <AssetStatements />\r\n            </Route>\r\n            <Route path=\"/account-settings\">\r\n              <AccountSettings />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Journals />\r\n            </Route>\r\n          </Switch>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(App);","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport type { RootState } from '../../app/store';\r\n\r\ninterface State {\r\n  user: string;\r\n}\r\n\r\nconst initialState: State = {\r\n  user: 'New User',\r\n}\r\n\r\nexport const navigationSlice = createSlice({\r\n  name: 'navigation',\r\n  initialState: initialState,\r\n  reducers: {\r\n    changeUser: (state, action: PayloadAction<string>) => {\r\n      state.user = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// Actions\r\nexport const { changeUser } = navigationSlice.actions;\r\n\r\n// Selectors\r\nexport const selectUser = (state: RootState) => state.navigation.user;\r\n\r\nexport default navigationSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport navigationReducer from '../features/navigation/navigationSlice';\r\nimport accountsReducer from '../features/accounts/accountsSlice';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    navigation: navigationReducer,\r\n    accounts: accountsReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n// TODO: change to Browser router, deploy on another site.\r\n// import { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CssBaseline />\r\n    <Provider store={store}>\r\n      {/* Use HashRouter only for GitHub Pages */}\r\n      {/* <Router basename={process.env.PUBLIC_URL}> */}\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}