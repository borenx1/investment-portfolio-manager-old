{"version":3,"sources":["models/Account.js","features/accounts/accountsSlice.js","constants.js","features/navigation/TopAppBar.js","features/navigation/navigationSlice.js","features/navigation/SideDrawer.js","features/transactions/AddEditTransactionDialog.js","features/transactions/TransactionSheet.js","features/transactions/AddTransactionTypeForm.js","features/transactions/Transactions.js","features/capital-changes/CapitalChanges.js","features/journals/Journals.js","AppContent.js","App.js","app/store.js","reportWebVitals.js","index.js"],"names":["defaultAccountSettings","baseCurrency","asset","accountSettings","defaultAssets","defaultJournals","journal","transaction","dateTimeFormat","journalColumnSet","journalColumn","undefined","tradingColumns","expenseColumns","name","ticker","symbol","precision","pricePrecision","date","base","baseAmount","quote","quoteAmount","feeBase","feeQuote","notes","misc","price","extra","type","hide","transactions","columns","columnOrder","accountsSlice","createSlice","initialState","accounts","activeAccount","reducers","changeAccount","state","action","accountIndex","parseInt","payload","Math","max","addAccount","push","console","warn","addDefaultAccount","String","settings","assets","journals","account","addTransaction","actions","selectAccounts","selectActiveAccountIndex","selectActiveAccount","length","selectActiveAccountName","drawerWidth","useStyles","makeStyles","theme","root","menuButton","marginRight","spacing","display","props","drawerOpen","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarDrawerOpen","marginLeft","width","enteringScreen","TopAppBar","classes","useState","menuAnchor","setMenuAnchor","dispatch","useDispatch","useSelector","activeAccountIndex","activeAccountName","handleChangeAccount","index","e","Fragment","AppBar","position","className","clsx","Toolbar","IconButton","onClick","onMenuClick","color","aria-label","Typography","variant","currentTarget","aria-haspopup","Menu","anchorEl","open","Boolean","onClose","map","a","MenuItem","selected","navigationSlice","user","page","changePage","selectPage","navigation","toolbar","alignItems","justifyContent","padding","mixins","whiteSpace","drawerClose","overflowX","breakpoints","up","SideDrawer","activePage","Drawer","anchor","paper","Divider","List","component","ListItem","button","ListItemIcon","ListItemText","primary","ListSubheader","inset","disableSticky","AddEditTransactionDialog","setDate","setBase","setQuote","trade","setTrade","setBaseAmount","setQuoteAmount","setPrice","fee","setFee","feeCurrency","setFeeCurrency","setNotes","handleSubmit","preventDefault","onDialogClose","resetForm","currentDateTime","Date","getTimezoneOffset","toISOString","slice","getCurrentLocalDateTime","Dialog","onEnter","log","edit","DialogTitle","DialogContent","onSubmit","Grid","container","item","xs","TextField","fullWidth","size","label","required","value","onChange","target","InputLabelProps","shrink","select","multiline","DialogActions","Button","fab","bottom","right","TransactionSheet","dialogOpen","setDialogOpen","dialogEdit","setDialogEdit","active","role","TableContainer","Paper","Table","table","TableHead","TableRow","TableCell","TableBody","tx","align","Fab","AddTransactionTypeForm","Transactions","React","activeTab","setActiveTab","Tabs","v","Tab","icon","CapitalChanges","Journals","AppContent","App","openDrawer","bind","closeDrawer","this","setState","content","Component","withStyles","flexGrow","connect","configureStore","reducer","navigationReducer","accountsReducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CssBaseline","store","document","getElementById"],"mappings":"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","file":"static/js/main.4e744428.chunk.js","sourcesContent":["const defaultAccountSettings = accountSettings(\r\n  asset('United States Dollar', 'USD', '$', 2, 4),\r\n);\r\nconst defaultAssets = [\r\n  asset('Bitcoin', 'BTC', '₿', 8, 2),\r\n];\r\nconst defaultJournals = [\r\n  journal(\r\n    'Trading',\r\n    'trading',\r\n    [\r\n      transaction('01/01/2021', 'BTC', 1, 'USD', 50000, 0, 20, 'First transaction'),\r\n      transaction('02/01/2021', 'BTC', 0.5, 'USD', 25000, 0, 10, 'Second transaction'),\r\n    ],\r\n    tradingColumns(),\r\n    ['date', 'base', 'baseAmount', 'quote', 'quoteAmount', 'price', 'feeBase', 'feeQuote', 'notes'],\r\n  ),\r\n  journal(\r\n    'Misc fees',\r\n    'expense',\r\n    [],\r\n    expenseColumns(),\r\n    ['date', 'base', 'baseAmount', 'quote', 'quoteAmount', 'price', 'feeBase', 'feeQuote', 'notes'],\r\n  ),\r\n];\r\n\r\n/**\r\n * Account settings.\r\n * @param {Object} baseCurrency The base currency of the account.\r\n * @returns An object with the given members.\r\n */\r\nexport function accountSettings(baseCurrency = asset('United States Dollar', 'USD', '$', 2, 4)) {\r\n  return {baseCurrency};\r\n}\r\n\r\n/**\r\n * Asset settings.\r\n * @param {String} name Name of the asset, e.g. Bitcoin.\r\n * @param {String} ticker Ticker of the asset, e.g. BTC.\r\n * @param {String} symbol Symbol of the asset, e.g. ₿.\r\n * @param {Number} precision The precision used to record amounts.\r\n * @param {Number} pricePrecision The default precision used to show prices.\r\n * @returns An object with the given members.\r\n */\r\nexport function asset(name, ticker, symbol, precision = 2, pricePrecision = 2) {\r\n  return {name, ticker, symbol, precision, pricePrecision};\r\n}\r\n\r\n/**\r\n * A transaction (trade, income or expense).\\\r\n * An income transaction has positive base and quote amounts.\\\r\n * An expense transaction has negative base and no quote amount.\\\r\n * A trade has opposite base and quote amount signs.\r\n * @param {Date} date Date of the transaction.\r\n * @param {String} base Base currency/asset.\r\n * @param {Number} baseAmount Amount of base changed, i.e. amount.\r\n * @param {String} quote Quote currency/asset.\r\n * @param {Number} quoteAmount Amount of quote changed, i.e. total.\r\n * @param {Number} feeBase Fee in base currency.\r\n * @param {Number} feeQuote Fee in quote currency.\r\n * @param {String} notes User written notes.\r\n * @param {Object[]} misc Extra properties, e.g. [{name: 'Exchange', type: 'string', value: 'NYSE'}].\r\n * @returns An object with the given members.\r\n */\r\nexport function transaction(\r\n  date,\r\n  base = 'USD',\r\n  baseAmount = 0,\r\n  quote = 'USD',\r\n  quoteAmount = 0,\r\n  feeBase = 0,\r\n  feeQuote = 0,\r\n  notes = '',\r\n  misc = []\r\n) {\r\n  return {date, base, baseAmount, quote, quoteAmount, feeBase, feeQuote, notes, misc};\r\n}\r\n\r\n/**\r\n * A set of journal columns.\r\n * @param {*} date Date journal column.\r\n * @param {*} base Base journal column.\r\n * @param {*} baseAmount Base amount journal column.\r\n * @param {*} quote Quote journal column.\r\n * @param {*} quoteAmount Quote amount journal column.\r\n * @param {*} price Price journal column.\r\n * @param {*} feeBase Fee in base curreny journal column.\r\n * @param {*} feeQuote Fee in quote curreny journal column.\r\n * @param {*} notes Notes journal column.\r\n * @param {*} extra Extra journal columns.\r\n * @returns An object with the given members.\r\n */\r\nexport function journalColumnSet(date, base, baseAmount, quote, quoteAmount, price, feeBase, feeQuote, notes, extra = []) {\r\n  return {\r\n    date, base, baseAmount, quote, quoteAmount, price, feeBase, feeQuote, notes, extra,\r\n  };\r\n}\r\n\r\nexport function tradingColumns(dateTimeFormat = 'date') {\r\n  return journalColumnSet(\r\n    journalColumn('Date', 'date', false, undefined, dateTimeFormat),\r\n    journalColumn('Asset', 'string', false),\r\n    journalColumn('Amount', 'number', false, 8),\r\n    journalColumn('Quote', 'string', true),\r\n    journalColumn('Total', 'number', false, 2),\r\n    journalColumn('Price', 'number', false, 2),\r\n    journalColumn('Fee (Base)', 'number', true, 8),\r\n    journalColumn('Fee', 'number', false, 2),\r\n    journalColumn('Notes', 'string', false),\r\n  );\r\n}\r\n\r\nexport function incomeColumns(dateTimeFormat = 'date') {\r\n  return journalColumnSet(\r\n    journalColumn('Date', 'date', false, undefined, dateTimeFormat),\r\n    journalColumn('Asset', 'string', false),\r\n    journalColumn('Amount', 'number', false, 2),\r\n    journalColumn('Quote', 'string', true),\r\n    journalColumn('Total', 'number', true, 2),\r\n    journalColumn('Price', 'number', true, 2),\r\n    journalColumn('Fee (Base)', 'number', true, 8),\r\n    journalColumn('Fee', 'number', true, 2),\r\n    journalColumn('Notes', 'string', false),\r\n  );\r\n}\r\n\r\nexport function expenseColumns(dateTimeFormat = 'date') {\r\n  return journalColumnSet(\r\n    journalColumn('Date', 'date', false, undefined, dateTimeFormat),\r\n    journalColumn('Asset', 'string', false),\r\n    journalColumn('Amount', 'number', false, 2),\r\n    journalColumn('Quote', 'string', true),\r\n    journalColumn('Total', 'number', true, 2),\r\n    journalColumn('Price', 'number', true, 2),\r\n    journalColumn('Fee (Base)', 'number', true, 8),\r\n    journalColumn('Fee', 'number', true, 2),\r\n    journalColumn('Notes', 'string', false),\r\n  );\r\n}\r\n\r\n/**\r\n * Journal column settings.\r\n * @param {String} name Name of the column.\r\n * @param {String} type Type of column, one of: 'date', 'string', 'number', 'integer'.\r\n * @param {Boolean} hide Hide the column if true.\r\n * @param {Number} precision Precision of the column if the type is 'number'.\r\n * @param {String} dateTimeFormat Date time format if the type is 'date', one of: 'date', 'time', 'datetime'.\r\n * @returns An object with the given members.\r\n */\r\nexport function journalColumn(name, type, hide = false, precision = 2, dateTimeFormat = 'date') {\r\n  return {name, type, hide, precision, dateTimeFormat};\r\n}\r\n\r\n/**\r\n * A journal for an account.\r\n * @param {String} name Name of the journal.\r\n * @param {String} type Type of the journal, one of: 'trading', 'income', 'expense'.\r\n * @param {Object[]} transactions List of transactions.\r\n * @param {Object} columns Mapping of columns and their settings.\r\n * @param {String[]} columnOrder The shown order of the columns.\r\n * @returns An object with the given members.\r\n */\r\nexport function journal(name, type = 'trading', transactions = [], columns = {}, columnOrder = []) {\r\n  return {name, type, transactions, columns, columnOrder};\r\n}\r\n\r\n/**\r\n * A trading account.\r\n * @param {String} name Name of the account.\r\n * @param {Object} settings Account settings.\r\n * @param {Object[]} assets Managed assets of the account.\r\n * @param {Object[]} journals List of Transaction journals.\r\n * @returns An object with the given members.\r\n */\r\nexport function account(name, settings = defaultAccountSettings, assets = defaultAssets, journals = defaultJournals,) {\r\n  return {name, settings, assets, journals};\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\nimport { account, transaction } from '../../models/Account';\r\n\r\nexport const accountsSlice = createSlice({\r\n  name: 'transactions',\r\n  initialState: {\r\n    accounts: [],       // Array of accounts\r\n    activeAccount: 0,   // Integer\r\n  },\r\n  reducers: {\r\n    /**\r\n     * Change the active account (-1 for all accounts). Receives an index from the payload. Invalid values\r\n     * are evaluated as 0. Negative numbers are evaluated as -1 (all accounts).\r\n     */\r\n    changeAccount: (state, action) => {\r\n      const accountIndex = parseInt(action.payload);\r\n      state.activeAccount = accountIndex ? Math.max(accountIndex, -1) : 0;\r\n    },\r\n    addAccount: (state, action) => {\r\n      if (action.payload) {\r\n        state.accounts.push(action.payload);\r\n      } else {\r\n        console.warn(`Attempted to add invalid account: ${action.payload}`);\r\n      }\r\n    },\r\n    addDefaultAccount: (state, action) => {\r\n      const name = action.payload ? String(action.payload) : 'New Account';\r\n      state.accounts.push(account(name));\r\n    },\r\n    addTransaction: (state, action) => {\r\n      // Takes payload: {account: activeAccountIndex, transaction: Tx, journal: journalIndex}\r\n      const account = state.accounts[action.payload.account || state.activeAccount];\r\n      const journal = action.payload.journal;\r\n      const transaction = action.payload.transaction;\r\n      account.journals[journal].transactions.push(transaction);\r\n    },\r\n  }\r\n});\r\n\r\n// Actions\r\nexport const { changeAccount, addAccount, addDefaultAccount, addTransaction } = accountsSlice.actions;\r\n\r\n// Selectors\r\nexport const selectAccounts = state => state.accounts.accounts;\r\nexport const selectActiveAccountIndex = state => state.accounts.activeAccount;\r\nexport const selectActiveAccount = state => {\r\n  const accounts = selectAccounts(state);\r\n  const activeAccount = selectActiveAccountIndex(state);\r\n  return activeAccount < accounts.length ? accounts[activeAccount] : null;\r\n}\r\nexport const selectActiveAccountName = state => {\r\n  const activeAccount = selectActiveAccount(state);\r\n  return activeAccount ? activeAccount.name : 'No account selected';\r\n}\r\n\r\nexport default accountsSlice.reducer;","export const drawerWidth = '15rem';","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ArrowDropDownCircleIcon from '@material-ui/icons/ArrowDropDownCircle';\r\nimport { selectAccounts, selectActiveAccountIndex, selectActiveAccountName, changeAccount } from '../accounts/accountsSlice';\r\nimport { drawerWidth } from '../../constants';\r\nimport React from 'react';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    display: props => props.drawerOpen ? 'none' : 'initial'\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarDrawerOpen: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth})`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  }\r\n}));\r\n\r\nfunction TopAppBar(props) {\r\n  const classes = useStyles(props);\r\n  // Controls the showing of the \"change account\" menu\r\n  const [menuAnchor, setMenuAnchor] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const accounts = useSelector(selectAccounts);\r\n  const activeAccountIndex = useSelector(selectActiveAccountIndex);\r\n  const activeAccountName = useSelector(selectActiveAccountName);\r\n\r\n  const handleChangeAccount = (index) => (e) => {\r\n    dispatch(changeAccount(index));\r\n    setMenuAnchor(null);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarDrawerOpen]: props.drawerOpen\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            onClick={props.onMenuClick}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">{ activeAccountName }</Typography>\r\n          <IconButton\r\n            onClick={(e) => setMenuAnchor(e.currentTarget)}\r\n            color=\"inherit\"\r\n            aria-label=\"Change account\"\r\n            aria-haspopup=\"true\"\r\n          >\r\n            <ArrowDropDownCircleIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Menu\r\n        anchorEl={menuAnchor}\r\n        open={Boolean(menuAnchor)}\r\n        onClose={() => setMenuAnchor(null)}\r\n      >\r\n        {accounts.map((a, index) => (\r\n          <MenuItem onClick={handleChangeAccount(index)} selected={activeAccountIndex} key={index}>\r\n            { a.name }\r\n          </MenuItem>\r\n        ))}\r\n        <MenuItem>All Accounts</MenuItem>\r\n        <MenuItem>Create New Account</MenuItem>\r\n      </Menu>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TopAppBar;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const navigationSlice = createSlice({\r\n  name: 'navigation',\r\n  initialState: {\r\n    user: 'New User',       // String or null\r\n    page: 'transactions',   // String or null\r\n  },\r\n  reducers: {\r\n    changePage: (state, action) => {\r\n      state.page = action.payload ? String(action.payload) : null;\r\n    },\r\n  }\r\n});\r\n\r\n// Actions\r\nexport const { changePage } = navigationSlice.actions;\r\n\r\n// Selectors\r\nexport const selectPage = state => state.navigation.page;\r\n\r\nexport default navigationSlice.reducer;","import { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport BookIcon from '@material-ui/icons/Book';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport { changePage, selectPage } from './navigationSlice';\r\nimport { drawerWidth } from '../../constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    \r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // Have the same height as the top app bar\r\n    ...theme.mixins.toolbar\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    whiteSpace: 'nowrap',   // Prevent text wrapping when closing the drawer\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerClose: {\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7),\r\n    // Have extra space for the scrollbar if needed\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  }\r\n}));\r\n\r\n/**\r\n * See\r\n * - https://material-ui.com/components/drawers/#mini-variant-drawer\r\n * - https://material-ui.com/api/drawer/\r\n * - https://github.com/mui-org/material-ui/blob/master/docs/src/pages/getting-started/templates/dashboard/Dashboard.js\r\n * - https://material-ui.com/getting-started/templates/dashboard/\r\n */\r\nfunction SideDrawer(props) {\r\n  const classes = useStyles();\r\n  const activePage = useSelector(selectPage);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      anchor=\"left\"\r\n      classes={{\r\n        paper: clsx({\r\n          [classes.drawerOpen]: props.open,\r\n          [classes.drawerClose]: !props.open\r\n        })\r\n      }}\r\n      className={clsx(classes.drawer, {\r\n        [classes.drawerOpen]: props.open,\r\n        [classes.drawerClose]: !props.open\r\n      })}\r\n    >\r\n      <div className={classes.toolbar}>\r\n        <IconButton onClick={props.onClose}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List component=\"nav\" aria-label=\"// TODO\">\r\n        <ListItem\r\n          button\r\n          selected={activePage === 'transactions'}\r\n          onClick={() => dispatch(changePage('transactions'))}\r\n        >\r\n          <ListItemIcon>\r\n            <CreateIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Transactions\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          selected={activePage === 'capital-changes'}\r\n          onClick={() => dispatch(changePage('capital-changes'))}\r\n        >\r\n          <ListItemIcon>\r\n            <CreateIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Capital changes\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          selected={activePage === 'journals'}\r\n          onClick={() => dispatch(changePage('journals'))}\r\n        >\r\n          <ListItemIcon>\r\n            <BookIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Journals\" />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List component=\"nav\" aria-label=\"// TODO\">\r\n        <ListSubheader inset disableSticky={true}>Financials</ListSubheader>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <AssignmentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Monthly\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <AssignmentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Quarterly\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <AssignmentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Biyearly\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <AssignmentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Yearly\" />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List component=\"nav\" aria-label=\"Account settings\">\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <SettingsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Account settings\" />\r\n        </ListItem>\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default SideDrawer;","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { addTransaction } from '../accounts/accountsSlice';\r\nimport { transaction } from '../../models/Account';\r\n\r\n/**\r\n * @returns The current local date and time in \"yyyy-mm-ddThh:mm:ss:SSS\" format\r\n */\r\nfunction getCurrentLocalDateTime() {\r\n  const currentDateTime = new Date();\r\n  return new Date(currentDateTime - currentDateTime.getTimezoneOffset() * 60 * 1000).toISOString().slice(0, 19);\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n\r\n  },\r\n}));\r\n\r\nfunction AddEditTransactionDialog(props) {\r\n  const classes = useStyles();\r\n  const [date, setDate] = useState('');\r\n  const [base, setBase] = useState('');\r\n  const [quote, setQuote] = useState('');\r\n  const [trade, setTrade] = useState('buy');\r\n  const [baseAmount, setBaseAmount] = useState('');\r\n  const [quoteAmount, setQuoteAmount] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n  const [fee, setFee] = useState(0);\r\n  const [feeCurrency, setFeeCurrency] = useState('quote');\r\n  const [notes, setNotes] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // TODO input validation\r\n    dispatch(addTransaction({\r\n      journal: props.index,\r\n      transaction: transaction(date, base, baseAmount, quote, quoteAmount, 0, fee, notes),\r\n    }));\r\n    props.onDialogClose();\r\n  };\r\n  const handleOpenDialog = () => {\r\n    // Init form fields according to add or edit mode\r\n    console.log(`Open dialog: ${props.edit ? 'Edit' : 'Add'} mode`);\r\n    if (props.edit) {\r\n      \r\n    } else {\r\n      resetForm();\r\n    }\r\n  }\r\n\r\n  const resetForm = () => {\r\n    setDate(getCurrentLocalDateTime());\r\n    setBase('');\r\n    setQuote('USD');\r\n    setTrade('buy');\r\n    setBaseAmount('');\r\n    setQuoteAmount('');\r\n    setPrice('');\r\n    setFee(0);\r\n    setFeeCurrency('quote');\r\n    setNotes('');\r\n  };\r\n\r\n  return (\r\n    <Dialog open={props.open} onClose={props.onDialogClose} onEnter={handleOpenDialog}>\r\n      <DialogTitle>{ `${props.edit ? 'Edit' : 'Add'} Transaction` }</DialogTitle>\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                type=\"datetime-local\"\r\n                fullWidth\r\n                size=\"small\"\r\n                label=\"Date\"\r\n                required\r\n                value={date}\r\n                onChange={(e) => setDate(e.target.value)}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <TextField\r\n                type=\"number\"\r\n                fullWidth\r\n                size=\"small\"\r\n                label=\"Amount\"\r\n                required\r\n                value={baseAmount}\r\n                onChange={(e) => setBaseAmount(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                select\r\n                fullWidth\r\n                size=\"small\"\r\n                label=\"Asset\"\r\n                required\r\n                value={base}\r\n                onChange={(e) => setBase(e.target.value)}\r\n              >\r\n                <MenuItem value={'USD'}>{ 'USD' }</MenuItem>\r\n                <MenuItem value={'BTC'}>{ 'BTC' }</MenuItem>\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <TextField\r\n                type=\"number\"\r\n                fullWidth\r\n                size=\"small\"\r\n                label=\"Total\"\r\n                required\r\n                value={quoteAmount}\r\n                onChange={(e) => setQuoteAmount(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                select\r\n                fullWidth\r\n                size=\"small\"\r\n                label=\"Quote Currency\"\r\n                required\r\n                value={quote}\r\n                onChange={(e) => setQuote(e.target.value)}\r\n              >\r\n                <MenuItem value={'USD'}>{ 'USD' }</MenuItem>\r\n                <MenuItem value={'BTC'}>{ 'BTC' }</MenuItem>\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <TextField\r\n                type=\"number\"\r\n                fullWidth\r\n                size=\"small\"\r\n                label=\"Price\"\r\n                required\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                select\r\n                fullWidth\r\n                size=\"small\"\r\n                label=\"Trade Type\"\r\n                required\r\n                value={trade}\r\n                onChange={(e) => setTrade(e.target.value)}\r\n              >\r\n                <MenuItem value={'buy'}>{ 'Buy' }</MenuItem>\r\n                <MenuItem value={'sell'}>{ 'Sell' }</MenuItem>\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <TextField\r\n                type=\"number\"\r\n                fullWidth\r\n                size=\"small\"\r\n                label=\"Fee\"\r\n                value={fee}\r\n                onChange={(e) => setFee(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                select\r\n                fullWidth\r\n                size=\"small\"\r\n                label=\"Fee Currency\"\r\n                value={feeCurrency}\r\n                onChange={(e) => setFeeCurrency(e.target.value)}\r\n              >\r\n                <MenuItem value={'base'}>{ 'Base' }</MenuItem>\r\n                <MenuItem value={'quote'}>{ 'Quote' }</MenuItem>\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                multiline\r\n                fullWidth\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                label=\"Notes\"\r\n                value={notes}\r\n                onChange={(e) => setNotes(e.target.value)}\r\n              >\r\n                <MenuItem value={'base'}>{ 'Base' }</MenuItem>\r\n                <MenuItem value={'quote'}>{ 'Quote' }</MenuItem>\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.onDialogClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={resetForm} color=\"primary\">\r\n          Reset form\r\n        </Button>\r\n        <Button onClick={handleSubmit} color=\"primary\">\r\n          { props.edit ? 'Edit' : 'Add' }\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default AddEditTransactionDialog;","\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AddEditTransactionDialog from './AddEditTransactionDialog';\r\nimport { selectActiveAccount } from '../accounts/accountsSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction TransactionSheet(props) {\r\n  const classes = useStyles();\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [dialogEdit, setDialogEdit] = useState(false);\r\n  // const account = useSelector(selectActiveAccountObject);\r\n\r\n  const openAddDialog = () => {\r\n    setDialogEdit(false);\r\n    setDialogOpen(true);\r\n  };\r\n  const openEditDialog = (tx) => {\r\n    setDialogEdit(true);\r\n    setDialogOpen(true);\r\n  };\r\n\r\n  return props.active && (\r\n    <div role=\"tabpanel\">\r\n      <TableContainer component={Paper}>\r\n        <Table\r\n          size={'small'}\r\n          className={classes.table}\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>{ props.journal.columns.date.name }</TableCell>\r\n              <TableCell>{ props.journal.columns.base.name }</TableCell>\r\n              <TableCell>{ props.journal.columns.quote.name }</TableCell>\r\n              <TableCell>{ props.journal.columns.baseAmount.name }</TableCell>\r\n              <TableCell>{ props.journal.columns.quoteAmount.name }</TableCell>\r\n              <TableCell>{ props.journal.columns.price.name }</TableCell>\r\n              <TableCell>{ props.journal.columns.notes.name }</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {props.journal.transactions.map((tx, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell align=\"right\">{tx.date}</TableCell>\r\n                <TableCell align=\"right\">{tx.base}</TableCell>\r\n                <TableCell align=\"right\">{tx.quote}</TableCell>\r\n                <TableCell align=\"right\">{tx.baseAmount}</TableCell>\r\n                <TableCell align=\"right\">{tx.quoteAmount}</TableCell>\r\n                <TableCell align=\"right\">{tx.quoteAmount / tx.baseAmount}</TableCell>\r\n                <TableCell>{tx.notes}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Fab color=\"secondary\" className={classes.fab} onClick={() => openAddDialog()}>\r\n        <AddIcon />\r\n      </Fab>\r\n      <AddEditTransactionDialog\r\n        journal={props.journal}\r\n        index={props.index}\r\n        open={dialogOpen}\r\n        edit={dialogEdit}\r\n        onDialogClose={() => setDialogOpen(false)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default TransactionSheet;","import Typography from '@material-ui/core/Typography';\r\n\r\nfunction AddTransactionTypeForm(props) {\r\n\r\n  return props.active && (\r\n    <div role=\"tabpanel\">\r\n      <Typography variant=\"h3\">Add Transaction Type</Typography>\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default AddTransactionTypeForm;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TransactionSheet from './TransactionSheet';\r\nimport AddTransactionTypeForm from './AddTransactionTypeForm';\r\nimport { selectActiveAccount } from '../accounts/accountsSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // flexGrow: 1,\r\n    // backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nfunction Transactions(props) {\r\n  const classes = useStyles();\r\n  const account = useSelector(selectActiveAccount);\r\n  const dispatch = useDispatch();\r\n  const journals = account ? account.journals : [];\r\n  const [activeTab, setActiveTab] = React.useState(0);\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={activeTab} onChange={(e, v) => setActiveTab(v)} aria-label=\"Transactions tab\">\r\n          {/* TODO update key */}\r\n          {/* TODO aria labels */}\r\n          {journals.map((journal, index) =>\r\n            <Tab label={journal['name']} key={index} />\r\n          )}\r\n          <Tab icon={<AddIcon />} />\r\n        </Tabs>\r\n      </AppBar>\r\n      {/* TODO update key */}\r\n      {journals.map((journal, index) =>\r\n        <TransactionSheet journal={journal} index={index} active={activeTab === index} key={index} />\r\n      )}\r\n      <AddTransactionTypeForm\r\n        index={journals.length}\r\n        active={activeTab === journals.length}\r\n        key={journals.length}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Transactions;","\r\n\r\nfunction CapitalChanges(props) {\r\n  return (\r\n    <p>Capital Changes</p>\r\n  );\r\n}\r\n  \r\nexport default CapitalChanges;","\r\n\r\nfunction Journals(props) {\r\n    return (\r\n      <p>Journals</p>\r\n    );\r\n  }\r\n    \r\n  export default Journals;","import { useSelector } from 'react-redux';\r\nimport Transactions from './features/transactions/Transactions';\r\nimport CapitalChanges from './features/capital-changes/CapitalChanges';\r\nimport Journals from './features/journals/Journals';\r\nimport { selectPage } from './features/navigation/navigationSlice';\r\n\r\nfunction AppContent(props) {\r\n  const activePage = useSelector(selectPage);\r\n  switch (activePage) {\r\n    case 'transactions':\r\n      return <Transactions {...props} />;\r\n    case 'capital-changes':\r\n      return <CapitalChanges {...props} />;\r\n    case 'journals':\r\n      return <Journals {...props} />;\r\n    default:\r\n      console.warn(`Unable to navigate to page: ${activePage}`);\r\n      return <Transactions {...props} />;\r\n  }\r\n}\r\n\r\nexport default AppContent;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TopAppBar from './features/navigation/TopAppBar';\r\nimport SideDrawer from './features/navigation/SideDrawer';\r\nimport AppContent from './AppContent';\r\nimport { addDefaultAccount } from './features/accounts/accountsSlice';\r\n\r\nconst styles = {\r\n  root: {\r\n    // Allow content to grow\r\n    display: 'flex',\r\n  },\r\n  content: {\r\n    // Let content grow horizontally\r\n    flexGrow: 1,\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      drawerOpen: false,\r\n    };\r\n\r\n    this.openDrawer = this.openDrawer.bind(this);\r\n    this.closeDrawer = this.closeDrawer.bind(this);\r\n  }\r\n\r\n  openDrawer() {\r\n    this.setState({drawerOpen: true});\r\n  }\r\n\r\n  closeDrawer() {\r\n    this.setState({drawerOpen: false});\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Init with test data\r\n    this.props.dispatch(addDefaultAccount('Coinbase'));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.props.classes.root}>\r\n          <TopAppBar\r\n            onMenuClick={this.openDrawer}\r\n            drawerOpen={this.state.drawerOpen}\r\n          />\r\n          <aside>\r\n            <SideDrawer open={this.state.drawerOpen} onClose={this.closeDrawer} />\r\n          </aside>\r\n          <main className={this.props.classes.content}>\r\n            {/* Spacing with (height = top app bar height) so content is not clipped by the fixed app bar */}\r\n            <Toolbar />\r\n            <AppContent />\r\n          </main>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(connect()(App));","import { configureStore } from '@reduxjs/toolkit';\r\nimport navigationReducer from '../features/navigation/navigationSlice';\r\nimport accountsReducer from '../features/accounts/accountsSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    navigation: navigationReducer,\r\n    accounts: accountsReducer,\r\n  },\r\n});","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CssBaseline />\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}