{"version":3,"sources":["models/accountFunctions.ts","models/account.ts","features/accounts/accountsSlice.ts","constants.js","features/navigation/TopAppBar.tsx","features/navigation/SideDrawer.js","components/AddEditDialog.tsx","features/journals/AddEditTransactionDialog.tsx","features/accounts/AddEditJournalDialog.tsx","features/accounts/AddEditJournalColumnDialog.tsx","features/accounts/EditJournalColumnOrderDialog.tsx","features/journals/JournalSheet.tsx","features/journals/AddJournalTab.tsx","features/journals/Journals.tsx","features/capital-changes/CapitalChanges.js","features/asset-statements/AssetStatements.js","features/accounts/AddEditAssetDialog.tsx","components/SettingsSection.tsx","components/IconButtonHeading.tsx","features/accounts/AccountMainSettings.tsx","components/DeleteButton.tsx","features/accounts/AccountAssetsSettings.tsx","features/accounts/AccountJournalsSettings.tsx","features/accounts/AccountSettings.tsx","App.js","features/navigation/navigationSlice.ts","app/store.ts","reportWebVitals.js","index.js"],"names":["journalColumnRoleDisplay","role","undefined","toFixed","getJournalColumn","journal","columns","extra","formatTransactionDecimalColumn","value","column","baseTicker","quoteTicker","assets","isNaN","parseFloat","precision","base","find","a","ticker","quote","description","pricePrecision","String","transactionDataDisplay","transaction","data","quoteAmount","baseAmount","name","isDecimalColumn","isDateColumn","showTime","Date","toLocaleString","toLocaleDateString","isBooleanColumn","type","isAssetColumn","isTextColumn","isDecimalColumnDescription","obj","indexOf","isBaseAmountColumn","isQuoteAmountColumn","isExtraColumn","isIntegerColumn","defaultColumnOrder","defaultAccountSettings","accountingCurrency","isCurrency","symbol","defaultAssets","defaultJournals","createTradingJournal","date","feeBase","feeQuote","notes","createExpenseJournal","createTradingColumns","hide","price","createIncomeColumns","createExpenseColumns","createDefaultJournal","columnOrder","transactions","createIncomeJournal","accountsSlice","createSlice","initialState","accounts","activeAccount","reducers","switchAccount","state","action","accountIndex","payload","Math","max","addAccount","push","addDefaultAccount","settings","journals","createDefaultAccount","addTransaction","account","journalIndex","i","length","splice","console","warn","JSON","stringify","changeAccountingCurrency","currency","addAsset","asset","editAsset","index","deleteAsset","addJournal","addDefaultJournal","editJournalSettings","deleteJournal","addJournalColumn","extraColumnsLength","editJournalColumn","isPriceColumn","deleteJournalColumn","columnIndex","deletedColIndex","colIndex","editJournalColumnOrder","actions","selectAccounts","selectActiveAccountIndex","selectActiveAccount","selectActiveAccountName","selectActiveAccountAccountingCurrency","selectActiveAccountAssets","selectActiveAccountAssetsAll","selectActiveAccountJournals","drawerWidth","useStyles","makeStyles","theme","root","menuButton","marginRight","spacing","display","props","drawerOpen","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarDrawerOpen","marginLeft","width","enteringScreen","TopAppBar","classes","useState","menuAnchor","setMenuAnchor","dispatch","useDispatch","useSelector","activeAccountIndex","activeAccountName","Fragment","AppBar","position","className","clsx","Toolbar","IconButton","onClick","onMenuClick","color","aria-label","Typography","variant","e","currentTarget","aria-haspopup","Menu","anchorEl","open","Boolean","onClose","map","MenuItem","handleSwitchAccount","selected","toolbar","alignItems","justifyContent","padding","mixins","whiteSpace","drawerClose","overflowX","breakpoints","up","SideDrawer","path","useLocation","pathname","Drawer","anchor","paper","Divider","List","component","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","ListSubheader","inset","disableSticky","content","maxWidth","contentMaxWidth","AddEditDialog","objectName","Dialog","onEnter","DialogTitle","edit","DialogContent","dividers","children","DialogActions","Button","onReset","onSubmit","initialFormFields","NaN","fee","feeCurrency","AddEditTransactionDialog","onDialogClose","fields","setFields","resetForm","getFullYear","padStart","getMonth","getDate","getHours","getMinutes","getSeconds","Grid","container","item","xs","TextField","size","label","fullWidth","required","onChange","s","target","InputLabelProps","shrink","select","multiline","AddEditJournalDialog","handleReset","Box","mt","removeButton","palette","error","main","DecimalColumnSettings","disableDescription","onDescriptionChange","onPrecisionChange","newPrecisionFields","onNewPrecisionFieldsChange","onNewPrecisionFieldsReset","disabled","Object","entries","t","p","parseInt","newPrecision","handleDeletePrecision","ticker2","decimalColumnDescription","AddEditJournalColumnDialog","setNewPrecisionFields","allAssets","handleResetNewPrecisionFields","addOrEditJournalColumn","newColumn","newType","partialColumn","FormControlLabel","control","Checkbox","checked","labelPlacement","newDescription","newFields","listItem","paddingRight","editHide","EditJournalColumnOrderDialog","displayRoleDefault","dialogColumnOrder","setDialogColumnOrder","hiddenColumns","setHiddenColumns","displayRole","setDisplayRole","newHiddenColumns","forEach","handleReorderColumn","newIndex","newColumnOrder","oldColumn","newHide","Switch","dense","disableGutters","divider","secondaryAction","Tooltip","title","disableRipple","ListItemSecondaryAction","hiddenIndex","handleToggleHide","edge","useJournalHeadersStyles","borderBottom","borderRight","columnSettings","JournalHeaders","TableRow","TableCell","onSettingsClick","fontSize","style","useJournalRowStyles","JournalRow","hover","align","flexGrow","table","borderRadius","boxShadow","fab","bottom","right","JournalSheet","transactionDialogOpen","setTransactionDialogOpen","selectedTransaction","setSelectedTransaction","journalSettingsDialogOpen","setJournalSettingsDialogOpen","journalColumnOrderDialogOpen","setJournalColumnOrderDialogOpen","journalColumnDialogOpen","setJournalColumnDialogOpen","selectedJournalColumn","setSelectedJournalColumn","TableContainer","Paper","Table","stickyHeader","TableHead","TableBody","tx","Fab","AddJournalTab","Journals","activeTab","setActiveTab","Tabs","v","Tab","icon","CapitalChanges","AssetStatements","AddEditAssetDialog","paddingTop","paddingBottom","paddingLeft","SettingsSection","elevation","marginBottom","IconButtonHeading","gutterBottom","buttonColor","AccountMainSettings","accountingCurrencyDialogOpen","setAccountingCurrencyDialogOpen","DeleteButton","buttonSize","iconSize","tableRow","cursor","AccountAssetsSettings","addEditAssetDialogOpen","setAddEditAssetDialogOpen","selectedAsset","setSelectedAsset","stopPropagation","handleDeleteAsset","useJournalColumnRowStyles","JournalColumnRow","journalColumn","keys","mainRow","collapsibleCell","columnOrderChip","onAddColumn","onEditColumn","onEditColumnOrder","setOpen","colSpan","Collapse","in","timeout","unmountOnExit","margin","flexWrap","c","Chip","AccountJournalsSettings","addEditJournalDialogOpen","setAddEditJournalDialogOpen","addEditJournalColumnDialogOpen","setAddEditJournalColumnDialogOpen","editJournalColumnOrderDialogOpen","setEditJournalColumnOrderDialogOpen","selectedJournal","setSelectedJournal","j","openEditColumnDialog","AccountSettings","Container","my","App","openDrawer","bind","closeDrawer","this","setState","React","Component","connect","navigationSlice","user","changeUser","store","configureStore","reducer","navigation","navigationReducer","accountsReducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.98db65b5.chunk.js","sourcesContent":["import {\r\n  Asset,\r\n  Transaction,\r\n  Journal,\r\n  DateColumn,\r\n  AssetColumn,\r\n  DecimalColumn,\r\n  BaseAmountColumn,\r\n  QuoteAmountColumn,\r\n  PriceColumn,\r\n  TextColumn,\r\n  ExtraColumn,\r\n  JournalColumn,\r\n  JournalColumnRole,\r\n  JournalColumnType,\r\n  isDecimalColumn,\r\n  isBooleanColumn,\r\n  isDateColumn,\r\n} from \"./account\";\r\n\r\n/**\r\n * Convert a date to \"yyyy-mm-ddThh:mm:ss\" format in GMT. Compatible with DateColumn.\r\n */\r\nexport function dateToString(date: Date) {\r\n  return `${String(date.getFullYear()).padStart(4, '0')}-${String(date.getMonth()).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}T${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}:${String(date.getSeconds()).padStart(2, '0')}`;\r\n}\r\n\r\nexport function journalColumnRoleDisplay(role: JournalColumnRole | undefined | null) {\r\n  switch (role) {\r\n    case undefined:\r\n    case null:\r\n      return role;\r\n    case 'date':\r\n      return 'Date';\r\n    case 'base':\r\n      return 'Base';\r\n    case 'baseAmount':\r\n      return 'Base amount';\r\n    case 'quote':\r\n      return 'Quote';\r\n    case 'quoteAmount':\r\n      return 'Quote amount';\r\n    case 'price':\r\n      return 'Price';\r\n    case 'feeBase':\r\n      return 'Base fee';\r\n    case 'feeQuote':\r\n      return 'Quote fee';\r\n    case 'notes':\r\n      return 'Notes';\r\n    default:    // Implicit typeof role = number\r\n      return `Extra (${(role + 1).toFixed()})`;\r\n  }\r\n}\r\n\r\n// This code is too janky, use overloads instead, see below\r\n// export function getJournalColumn<T extends JournalColumnRole>(journal: Journal, role: T): T extends number ? ExtraColumn : JournalColumn {\r\n//   if (typeof role === 'number') {\r\n//     return journal.columns.extra[role as number] as T extends number ? ExtraColumn : JournalColumn;\r\n//   } else {\r\n//     return journal.columns[role as JournalCoreColumnRole] as T extends number ? ExtraColumn : JournalColumn;\r\n//   }\r\n// }\r\n\r\n// TODO add tests\r\n// TODO note that this can sometimes return undefined (index out of range)\r\nexport function getJournalColumn(journal: Journal, role: number): ExtraColumn;\r\nexport function getJournalColumn(journal: Journal, role: 'date'): DateColumn;\r\nexport function getJournalColumn(journal: Journal, role: 'base' | 'quote'): AssetColumn;\r\nexport function getJournalColumn(journal: Journal, role: 'baseAmount' | 'feeBase'): BaseAmountColumn;\r\nexport function getJournalColumn(journal: Journal, role: 'quoteAmount' | 'feeQuote'): QuoteAmountColumn;\r\nexport function getJournalColumn(journal: Journal, role: 'price'): PriceColumn;\r\nexport function getJournalColumn(journal: Journal, role: 'baseAmount' | 'feeBase' | 'quoteAmount' | 'feeQuote' | 'price'): DecimalColumn;\r\nexport function getJournalColumn(journal: Journal, role: 'notes'): TextColumn;\r\nexport function getJournalColumn(journal: Journal, role: Exclude<JournalColumnRole, number>): JournalColumn;\r\nexport function getJournalColumn(journal: Journal, role: JournalColumnRole): JournalColumn;\r\nexport function getJournalColumn(journal: Journal, role: JournalColumnRole) {\r\n  if (typeof role === 'number') {\r\n    return journal.columns.extra[role];\r\n  } else {\r\n    return journal.columns[role];\r\n  }\r\n}\r\n\r\nexport function isRightAlignJournalColumnType(type: JournalColumnType): boolean {\r\n  return ['date', 'integer', 'decimal'].indexOf(type) !== -1;\r\n}\r\n\r\n/**\r\n * Formats a transaction's value to the correct decimal places depending on the column and asset settings.\r\n * @param value The value to format. String values are attempted to be coerced into numbers.\r\n * @param column The column settings.\r\n * @param baseTicker The ticker of the base asset/currency.\r\n * @param quoteTicker The ticker of the quote asset/currency.\r\n * @param assets The assets to get the settings of. The baseTicker and quoteTicker will attempt to get the settings here.\r\n * @returns A formatted string with the correct decimal places, or the original value of could not get the precision settings.\r\n */\r\nfunction formatTransactionDecimalColumn(value: number | string, column: DecimalColumn, baseTicker: string, quoteTicker: string, assets: Asset[] = []): string {\r\n  if (typeof value === 'number' || isNaN(parseFloat(value))) {\r\n    const base = assets.find(a => a.ticker === baseTicker);\r\n    const quote = assets.find(a => a.ticker === quoteTicker);\r\n    let precision: number;\r\n    if (column.description === 'base') {\r\n      precision = column.precision[baseTicker] ?? base?.precision ?? -1;\r\n    } else if (column.description === 'quote') {\r\n      precision = column.precision[quoteTicker] ?? quote?.precision ?? -1;\r\n    } else if (column.description === 'price') {\r\n      precision = column.precision[`${baseTicker}/${quoteTicker}`] ?? base?.pricePrecision ?? -1;\r\n    } else {\r\n      precision = -1;\r\n    }\r\n    if (precision >= 0) {\r\n      return typeof value === 'number' ? value.toFixed(precision) : parseFloat(value).toFixed(precision);\r\n    };\r\n  }\r\n  return String(value);\r\n}\r\n// TODO find way to convert number <-> string <-> boolean\r\n/**\r\n * Format a transaction value to display in a table to the user.\r\n * @param transaction The transaction to format.\r\n * @param role The column of the transaction to display.\r\n * @param journal The journal to get the column settings from.\r\n * @param assets A list of assets to get the precision settings from (for decimal columns).\r\n * @returns A formatted string representing the transaction's value to be displayed to the user.\r\n */\r\nexport function transactionDataDisplay(transaction: Transaction, role: JournalColumnRole, journal: Journal, assets: Asset[] = []): string {\r\n  const column = getJournalColumn(journal, role);\r\n  // Could be undefined due to extra column does not exist\r\n  let data: number | string | boolean | undefined;\r\n  if (role === 'price') {\r\n    data = transaction.quoteAmount / transaction.baseAmount;\r\n  } else if (typeof role === 'number') {\r\n    data = transaction.extra[column.name];\r\n  } else {\r\n    data = transaction[role];\r\n  }\r\n  if (isDecimalColumn(column) && (typeof data === 'number' || typeof data === 'string')) {\r\n    return formatTransactionDecimalColumn(data, column, transaction.base, transaction.quote, assets);\r\n  } else if (isDateColumn(column) && typeof data === 'string') {\r\n    return column.showTime ? new Date(data).toLocaleString() : new Date(data).toLocaleDateString();\r\n  } else if (isBooleanColumn(column)) {\r\n    return data ? 'Yes' : 'No';\r\n  }\r\n  return data !== undefined ? String(data) : '';\r\n}","export * from './accountFunctions';\r\n\r\n/**\r\n * A trading account.\r\n * @param name Name of the account.\r\n * @param settings The account settings.\r\n * @param assets Managed assets of the account.\r\n * @param journals List of journals to manage transactions.\r\n */\r\nexport interface Account {\r\n  name: string;\r\n  settings: AccountSettings;\r\n  assets: Asset[];\r\n  journals: Journal[];\r\n}\r\n/**\r\n * Account settings.\r\n * @param accountingCurrency The accounting currency of the account.\r\n */\r\nexport interface AccountSettings {\r\n  accountingCurrency: Asset;\r\n}\r\n\r\n/**\r\n * Asset settings.\r\n * @param ticker Ticker of the asset, e.g. BTC. This is the unique identifier of an asset.\r\n * @param name Name of the asset, e.g. Bitcoin.\r\n * @param precision The precision used to record amounts.\r\n * @param pricePrecision The default precision used to show prices.\r\n * @param isCurrency true if the asset is a currency.\r\n * @param symbol Optional. Symbol of the asset, e.g. '₿'.\r\n */\r\nexport interface Asset {\r\n  // TODO: Ticker only letters, numbers and period (.)\r\n  ticker: string;\r\n  name: string;\r\n  precision: number;\r\n  pricePrecision: number;\r\n  isCurrency: boolean;\r\n  symbol?: string;\r\n}\r\n\r\nexport type JournalType = 'trading' | 'income' | 'expense';\r\nexport function isJournalType(obj: any): obj is JournalType {\r\n  return typeof obj === 'string' && ['trading', 'income', 'expense'].indexOf(obj) !== -1;\r\n}\r\n/**\r\n * A journal for an account.\r\n * @param name Name of the journal.\r\n * @param type Type of the journal, one of: 'trading', 'income', 'expense'.\r\n * @param columns Mapping of columns and their settings.\r\n * @param columnOrder The order of the columns show in the journal.\r\n * @param transactions List of transactions.\r\n * @returns An object with the given members.\r\n */\r\nexport interface Journal {\r\n  name: string;\r\n  type: JournalType;\r\n  columns: JournalColumnSet;\r\n  columnOrder: JournalColumnRole[];\r\n  transactions: Transaction[];\r\n}\r\n/**\r\n * A set of journal columns.\r\n * @param date Date journal column.\r\n * @param base Base journal column.\r\n * @param baseAmount Base amount journal column.\r\n * @param quote Quote journal column.\r\n * @param quoteAmount Quote amount journal column.\r\n * @param price Price journal column.\r\n * @param feeBase Fee in base curreny journal column.\r\n * @param feeQuote Fee in quote curreny journal column.\r\n * @param notes Notes journal column.\r\n * @param extra Extra journal columns.\r\n */\r\nexport interface JournalColumnSet {\r\n  date: DateColumn;\r\n  base: AssetColumn;\r\n  baseAmount: BaseAmountColumn;\r\n  quote: AssetColumn;\r\n  quoteAmount: QuoteAmountColumn;\r\n  price: PriceColumn;\r\n  feeBase: BaseAmountColumn;\r\n  feeQuote: QuoteAmountColumn;\r\n  notes: TextColumn;\r\n  extra: ExtraColumn[];\r\n}\r\n/**\r\n * Used to select Columns from JournalColumnSet. A string value is for the key of a core column,\r\n * a number value is the index of an extra column.\r\n */\r\nexport type JournalColumnRole = Exclude<keyof JournalColumnSet, 'extra'> | number;\r\nexport function isJournalColumnRole(obj: any): obj is JournalColumnRole {\r\n  const type = typeof obj;\r\n  return type === 'number' || (type === 'string' &&\r\n    ['date', 'base', 'baseAmount', 'quote', 'quoteAmount', 'price', 'feeBase', 'feeQuote', 'notes'].indexOf(obj) !== -1);\r\n}\r\n/** Base Journal Column interface to extend from. */\r\ninterface BaseJournalColumn {\r\n  name: string;\r\n  hide: boolean;\r\n}\r\nexport interface DateColumn extends BaseJournalColumn {\r\n  type: 'date';\r\n  showTime: boolean;\r\n}\r\nexport function isDateColumn(column: JournalColumn | BaseJournalColumn): column is DateColumn {\r\n  return 'type' in column && column.type === 'date' && 'showTime' in column;\r\n}\r\nexport interface AssetColumn extends BaseJournalColumn {\r\n  type: 'asset';\r\n}\r\nexport function isAssetColumn(column: JournalColumn | BaseJournalColumn): column is AssetColumn {\r\n  return 'type' in column && column.type === 'asset';\r\n}\r\nexport interface TextColumn extends BaseJournalColumn {\r\n  type: 'text';\r\n}\r\nexport function isTextColumn(column: JournalColumn | BaseJournalColumn): column is TextColumn {\r\n  return 'type' in column && column.type === 'text';\r\n}\r\nexport interface IntegerColumn extends BaseJournalColumn {\r\n  type: 'integer';\r\n}\r\nexport function isIntegerColumn(column: JournalColumn | BaseJournalColumn): column is IntegerColumn {\r\n  return 'type' in column && column.type === 'integer';\r\n}\r\nexport type DecimalColumnDescription = 'base' | 'quote' | 'price';\r\nexport function isDecimalColumnDescription(obj: any): obj is DecimalColumnDescription {\r\n  return typeof obj === 'string' && ['base', 'quote', 'price'].indexOf(obj) !== -1;\r\n}\r\n/**\r\n * @param precision The precision shown of the column. Shows the default asset precision if not set.\r\n * @param description Used to set the default precision depending on if its an asset amount or price. No\r\n * default precision used if not set.\r\n */\r\nexport interface DecimalColumn extends BaseJournalColumn {\r\n  type: 'decimal';\r\n  /** Key can be an asset ticker, e.g. USD, or an asset pair, e.g. BTC/USD. */\r\n  precision: Record<string, number>;\r\n  description: DecimalColumnDescription;\r\n}\r\nexport function isDecimalColumn(column: JournalColumn | BaseJournalColumn): column is DecimalColumn {\r\n  return 'type' in column && column.type === 'decimal' && 'precision' in column && 'description' in column;\r\n}\r\nexport interface BaseAmountColumn extends DecimalColumn {\r\n  description: 'base';\r\n}\r\nexport function isBaseAmountColumn(column: JournalColumn | BaseJournalColumn): column is BaseAmountColumn {\r\n  return isDecimalColumn(column) && column.description === 'base';\r\n}\r\nexport interface QuoteAmountColumn extends DecimalColumn {\r\n  description: 'quote';\r\n}\r\nexport function isQuoteAmountColumn(column: JournalColumn | BaseJournalColumn): column is QuoteAmountColumn {\r\n  return isDecimalColumn(column) && column.description === 'quote';\r\n}\r\nexport interface PriceColumn extends DecimalColumn {\r\n  description: 'price';\r\n}\r\nexport function isPriceColumn(column: JournalColumn | BaseJournalColumn): column is PriceColumn {\r\n  return isDecimalColumn(column) && column.description === 'price';\r\n}\r\nexport interface BooleanColumn extends BaseJournalColumn {\r\n  type: 'boolean';\r\n}\r\nexport function isBooleanColumn(column: JournalColumn | BaseJournalColumn): column is BooleanColumn {\r\n  return 'type' in column && column.type === 'boolean';\r\n}\r\n/** Journal Columns that the user can create. */\r\nexport type ExtraColumn = TextColumn | IntegerColumn | DecimalColumn | BooleanColumn;\r\nexport function isExtraColumn(column: JournalColumn | BaseJournalColumn): column is ExtraColumn {\r\n  return isTextColumn(column) || isIntegerColumn(column) || isDecimalColumn(column) || isBooleanColumn(column);\r\n}\r\nexport type ExtraColumnType = ExtraColumn['type'];\r\nexport function isExtraColumnType(obj: any): obj is ExtraColumnType {\r\n  return typeof obj === 'string' && ['text', 'integer', 'decimal', 'boolean'].indexOf(obj) !== -1;\r\n}\r\n/** All Journal Column types */\r\nexport type JournalColumn = ExtraColumn | DateColumn | AssetColumn;\r\nexport type JournalColumnType = JournalColumn['type'];\r\nexport function isJournalColumnType(obj: any): obj is JournalColumnType {\r\n  return typeof obj === 'string' && ['date', 'asset', 'text', 'integer', 'decimal', 'boolean'].indexOf(obj) !== -1;\r\n}\r\n/**\r\n * A transaction (trade, income or expense).\\\r\n * An income transaction has positive base and quote amounts.\\\r\n * An expense transaction has negative base and no quote amount.\\\r\n * A trade has opposite base and quote amount signs.\r\n * @param date Date of the transaction.\r\n * @param base Ticker of the base currency/asset.\r\n * @param baseAmount Amount of base changed, i.e. amount.\r\n * @param quote Ticker of the quote currency/asset.\r\n * @param quoteAmount Amount of quote changed, i.e. total.\r\n * @param feeBase Fee in base currency.\r\n * @param feeQuote Fee in quote currency.\r\n * @param notes User written notes.\r\n * @param extra Extra properties, e.g. `{exchange: 'NYSE'}`.\r\n */\r\n export interface Transaction {\r\n  date: string;\r\n  base: string;\r\n  baseAmount: number;\r\n  quote: string;\r\n  quoteAmount: number;\r\n  feeBase: number;\r\n  feeQuote: number;\r\n  notes: string;\r\n  extra: {[key: string]: (string | number | boolean)};\r\n}\r\n\r\nconst defaultColumnOrder: JournalColumnRole[] = ['date', 'base', 'baseAmount', 'quote', 'quoteAmount', 'price', 'feeBase', 'feeQuote', 'notes'];\r\nconst defaultAccountSettings: AccountSettings = {\r\n  accountingCurrency: {\r\n    ticker: 'USD',\r\n    name: 'United States Dollar',\r\n    precision: 2,\r\n    pricePrecision: 4,\r\n    isCurrency: true,\r\n    symbol: '$',\r\n  },\r\n};\r\nconst defaultAssets: Asset[] = [\r\n  {ticker: 'BTC', name: 'Bitcoin', precision: 8, pricePrecision: 2, isCurrency: true, symbol: '₿'},\r\n];\r\nconst defaultJournals: Journal[] = [\r\n  createTradingJournal('Trading', undefined, [\r\n    {\r\n      date: '2021-01-01T00:00:00',\r\n      base: 'BTC',\r\n      baseAmount: 1,\r\n      quote: 'USD',\r\n      quoteAmount: 50000,\r\n      feeBase: 0,\r\n      feeQuote: 20,\r\n      notes: 'First transaction',\r\n      extra: {}\r\n    },\r\n    {\r\n      date: '2021-01-02T00:00:00',\r\n      base: 'BTC',\r\n      baseAmount: 0.5,\r\n      quote: 'USD',\r\n      quoteAmount: 20000,\r\n      feeBase: 0,\r\n      feeQuote: 8,\r\n      notes: 'Second transaction',\r\n      extra: {}\r\n    },\r\n  ]),\r\n  createExpenseJournal('Misc fees'),\r\n];\r\n\r\nexport function createTradingColumns(showTime: boolean = false): JournalColumnSet {\r\n  return {\r\n    date: {name: 'Date', showTime: showTime, type: 'date', hide: false},\r\n    base: {name: 'Asset', type: 'asset', hide: false},\r\n    baseAmount: {name: 'Amount', type: 'decimal', description: 'base', precision: {}, hide: false},\r\n    quote: {name: 'Quote', type: 'asset', hide: true},\r\n    quoteAmount: {name: 'Total', type: 'decimal', description: 'quote', precision: {}, hide: false},\r\n    price: {name: 'Price', type: 'decimal', description: 'price', precision: {}, hide: false},\r\n    feeBase: {name: 'Fee (Base)', type: 'decimal', description: 'base', precision: {}, hide: true},\r\n    feeQuote: {name: 'Fee', type: 'decimal', description: 'quote', precision: {}, hide: false},\r\n    notes: {name: 'Notes', type: 'text', hide: false},\r\n    extra: [],\r\n  };\r\n}\r\n\r\nexport function createIncomeColumns(showTime: boolean = false): JournalColumnSet {\r\n  return {\r\n    date: {name: 'Date', showTime: showTime, type: 'date', hide: false},\r\n    base: {name: 'Asset', type: 'asset', hide: false},\r\n    baseAmount: {name: 'Amount', type: 'decimal', description: 'base', precision: {}, hide: false},\r\n    quote: {name: 'Quote', type: 'asset', hide: true},\r\n    quoteAmount: {name: 'Total', type: 'decimal', description: 'quote', precision: {}, hide: false},\r\n    price: {name: 'Price', type: 'decimal', description: 'price', precision: {}, hide: false},\r\n    feeBase: {name: 'Fee (Base)', type: 'decimal', description: 'base', precision: {}, hide: true},\r\n    feeQuote: {name: 'Fee', type: 'decimal', description: 'quote', precision: {}, hide: true},\r\n    notes: {name: 'Notes', type: 'text', hide: false},\r\n    extra: [],\r\n  };\r\n}\r\n\r\nexport function createExpenseColumns(showTime: boolean = false): JournalColumnSet {\r\n  return {\r\n    date: {name: 'Date', showTime: showTime, type: 'date', hide: false},\r\n    base: {name: 'Asset', type: 'asset', hide: false},\r\n    baseAmount: {name: 'Amount', type: 'decimal', description: 'base', precision: {}, hide: false},\r\n    quote: {name: 'Quote', type: 'asset', hide: true},\r\n    quoteAmount: {name: 'Total', type: 'decimal', description: 'quote', precision: {}, hide: false},\r\n    price: {name: 'Price', type: 'decimal', description: 'price', precision: {}, hide: false},\r\n    feeBase: {name: 'Fee (Base)', type: 'decimal', description: 'base', precision: {}, hide: true},\r\n    feeQuote: {name: 'Fee', type: 'decimal', description: 'quote', precision: {}, hide: true},\r\n    notes: {name: 'Notes', type: 'text', hide: false},\r\n    extra: [],\r\n  };\r\n}\r\n\r\nexport function createDefaultJournal(name: string, type: JournalType): Journal {\r\n  switch (type) {\r\n    case 'trading':\r\n      return createTradingJournal(name);\r\n    case 'income':\r\n      return createIncomeJournal(name);\r\n    case 'expense':\r\n      return createExpenseJournal(name);\r\n  }\r\n}\r\n\r\nexport function createTradingJournal(name: string, columnOrder: JournalColumnRole[] = defaultColumnOrder, transactions: Transaction[] = []): Journal {\r\n  return {\r\n    name: name,\r\n    type: 'trading',\r\n    columns: createTradingColumns(),\r\n    columnOrder: columnOrder,\r\n    transactions: transactions,\r\n  };\r\n}\r\n\r\nexport function createIncomeJournal(name: string, columnOrder: JournalColumnRole[] = defaultColumnOrder, transactions: Transaction[] = []): Journal {\r\n  return {\r\n    name: name,\r\n    type: 'income',\r\n    columns: createIncomeColumns(),\r\n    columnOrder: columnOrder,\r\n    transactions: transactions,\r\n  };\r\n}\r\n\r\nexport function createExpenseJournal(name: string, columnOrder: JournalColumnRole[] = defaultColumnOrder, transactions: Transaction[] = []): Journal {\r\n  return {\r\n    name: name,\r\n    type: 'expense',\r\n    columns: createExpenseColumns(),\r\n    columnOrder: columnOrder,\r\n    transactions: transactions,\r\n  };\r\n}\r\n\r\nexport function createDefaultAccount(name: string, settings = defaultAccountSettings, assets = defaultAssets, journals = defaultJournals): Account {\r\n  return {\r\n    name,\r\n    settings,\r\n    assets,\r\n    journals,\r\n  };\r\n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport type { RootState } from '../../app/store';\r\nimport {\r\n  Account,\r\n  Asset,\r\n  Transaction,\r\n  Journal,\r\n  JournalType,\r\n  JournalColumnRole,\r\n  JournalColumn,\r\n  ExtraColumn,\r\n  createDefaultAccount,\r\n  createDefaultJournal,\r\n  isDateColumn,\r\n  isAssetColumn,\r\n  isBaseAmountColumn,\r\n  isQuoteAmountColumn,\r\n  isPriceColumn,\r\n  isTextColumn,\r\n  isExtraColumn,\r\n} from '../../models/account';\r\n\r\ninterface State {\r\n  readonly accounts: Account[],\r\n  readonly activeAccount: number,\r\n}\r\n\r\nconst initialState: State = {\r\n  accounts: [],\r\n  activeAccount: 0,\r\n};\r\n\r\nexport const accountsSlice = createSlice({\r\n  name: 'transactions',\r\n  initialState: initialState,\r\n  reducers: {\r\n    /**\r\n     * Change the active account (-1 for all accounts). Negative numbers are evaluated as -1 (all accounts).\r\n     */\r\n    switchAccount: (state, action: PayloadAction<number>) => {\r\n      const accountIndex = action.payload;\r\n      state.activeAccount = Math.max(accountIndex, -1);\r\n    },\r\n    addAccount: (state, action: PayloadAction<Account>) => {\r\n      state.accounts.push(action.payload);\r\n    },\r\n    addDefaultAccount: (state, action: PayloadAction<string>) => {\r\n      const name = action.payload || 'New Account';\r\n      state.accounts.push(createDefaultAccount(name));\r\n    },\r\n    addTransaction: (state, action: PayloadAction<{account?: number, journal: number, transaction: Transaction}>) => {\r\n      const { account: accountIndex, journal: journalIndex, transaction } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      const journal = account.journals[journalIndex] as Journal | undefined;\r\n      if (journal !== undefined) {\r\n        // Insert transaction in the correct order\r\n        for (let i = journal.transactions.length; i >= 0; i--) {\r\n          if (i === 0 || new Date(transaction.date) >= new Date(journal.transactions[i-1].date)) {\r\n            journal.transactions.splice(i, 0, transaction);\r\n            break;\r\n          }\r\n        }\r\n      } else {\r\n        console.warn(`addTransaction: journal index ${journalIndex} is out of range for account: ${JSON.stringify(account)}.`);\r\n      }\r\n    },\r\n    changeAccountingCurrency: (state, action: PayloadAction<{account?: number, currency: Asset}>) => {\r\n      const { account: accountIndex, currency } = action.payload;\r\n      // Updates the active account if no account provided\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      account.settings.accountingCurrency = currency;\r\n    },\r\n    addAsset: (state, action: PayloadAction<{account?: number, asset: Asset}>) => {\r\n      const { account: accountIndex, asset } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      account.assets.push(asset);\r\n    },\r\n    editAsset: (state, action: PayloadAction<{account?: number, index: number, asset: Asset}>) => {\r\n      const { account: accountIndex, index, asset } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      // Only edit if the index is valid\r\n      if (account.assets[index] !== undefined) {\r\n        account.assets[index] = asset;\r\n      } else {\r\n        console.warn(`editAsset: Invalid index ${index} of assets array of length ${account.assets.length}.`);\r\n      }\r\n    },\r\n    deleteAsset: (state, action: PayloadAction<{account?: number, index: number}>) => {\r\n      const { account: accountIndex, index } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      account.assets.splice(index, 1);\r\n    },\r\n    addJournal: (state, action: PayloadAction<{account?: number, journal: Journal}>) => {\r\n      // Payload: {account: int?, journal: Journal (except column settings)}\r\n      const { account: accountIndex, journal } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      account.journals.push(journal);\r\n    },\r\n    addDefaultJournal: (state, action: PayloadAction<{account?: number, name: string, type: JournalType}>) => {\r\n      const { account: accountIndex, name, type } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      account.journals.push(createDefaultJournal(name, type));\r\n    },\r\n    editJournalSettings: (state, action: PayloadAction<{account?: number, index: number, name: string, type: JournalType}>) => {\r\n      const { account: accountIndex, index, name, type } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      if (account.journals[index] !== undefined) {\r\n        const journal = account.journals[index];\r\n        account.journals[index] = {...journal, name: name, type: type};\r\n      } else {\r\n        console.warn(`editJournalSettings: Invalid index ${index} of journals array of length ${account.journals.length}.`);\r\n      }\r\n    },\r\n    deleteJournal: (state, action: PayloadAction<{account?: number, index: number}>) => {\r\n      const { account: accountIndex, index } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      account.journals.splice(index, 1);\r\n    },\r\n    addJournalColumn: (state, action: PayloadAction<{account?: number, index: number, column: ExtraColumn}>) => {\r\n      const { account: accountIndex, index, column } = action.payload;\r\n      // Updates the active account if no account provided\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      account.journals[index].columns.extra.push(column);\r\n      // Add column to the end of column order\r\n      const extraColumnsLength = account.journals[index].columns.extra.length;\r\n      account.journals[index].columnOrder.push(extraColumnsLength - 1);\r\n    },\r\n    editJournalColumn: (state, action: PayloadAction<{account?: number, index: number, role: JournalColumnRole, column: JournalColumn}>) => {\r\n      const { account: accountIndex, index, role, column } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      if (typeof role === 'string') {\r\n        // Core column\r\n        if (role === 'date' && isDateColumn(column)) {\r\n          account.journals[index].columns[role] = column;\r\n        } else if (role === 'base' && isAssetColumn(column)) {\r\n          account.journals[index].columns[role] = column;\r\n        } else if (role === 'baseAmount' && isBaseAmountColumn(column)) {\r\n          account.journals[index].columns[role] = column;\r\n        } else if (role === 'quote' && isAssetColumn(column)) {\r\n          account.journals[index].columns[role] = column;\r\n        } else if (role === 'quoteAmount' && isQuoteAmountColumn(column)) {\r\n          account.journals[index].columns[role] = column;\r\n        } else if (role === 'price' && isPriceColumn(column)) {\r\n          account.journals[index].columns[role] = column;\r\n        } else if (role === 'feeBase' && isBaseAmountColumn(column)) {\r\n          account.journals[index].columns[role] = column;\r\n        } else if (role === 'feeQuote' && isQuoteAmountColumn(column)) {\r\n          account.journals[index].columns[role] = column;\r\n        } else if (role === 'notes' && isTextColumn(column)) {\r\n          account.journals[index].columns[role] = column;\r\n        } else {\r\n          console.warn(`editJournalColumn: Column does not match core column role: ${role}.`);\r\n        }\r\n      } else {    // Implicit typeof column === 'number'\r\n        if (isExtraColumn(column)) {\r\n          account.journals[index].columns.extra[role] = column;\r\n        } else {\r\n          console.warn(`editJournalColumn: Column is not an ExtraColumn for role: ${role}.`);\r\n        }\r\n      }\r\n    },\r\n    deleteJournalColumn: (state, action: PayloadAction<{account?: number, journalIndex: number, columnIndex: number}>) => {\r\n      const { account: accountIndex, journalIndex, columnIndex } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      if (columnIndex >= 0 && columnIndex < account.journals[journalIndex]?.columns.extra.length) {\r\n        account.journals[journalIndex].columns.extra.splice(columnIndex, 1);\r\n        // Delete column from column order. The numberic JournalColumnRoles cascade down to preserve the column order after deletion.\r\n        const extraColumnsLength = account.journals[journalIndex].columns.extra.length;\r\n        const deletedColIndex = account.journals[journalIndex].columnOrder.indexOf(columnIndex);\r\n        if (deletedColIndex !== -1) {\r\n          account.journals[journalIndex].columnOrder.splice(deletedColIndex, 1);\r\n        }\r\n        for (let i = columnIndex + 1; i <= extraColumnsLength; i++) {\r\n          const colIndex = account.journals[journalIndex].columnOrder.indexOf(i);\r\n          if (colIndex !== -1) {\r\n            account.journals[journalIndex].columnOrder[colIndex] = i - 1;\r\n          }\r\n        }\r\n      } else {\r\n        console.warn(`deleteJournalColumn: Invalid column selectors journalIndex: ${journalIndex} and columnIndex: ${columnIndex}.`);\r\n      }\r\n    },\r\n    editJournalColumnOrder: (state, action: PayloadAction<{account?: number, index: number, columnOrder: JournalColumnRole[]}>) => {\r\n      const { account: accountIndex, index, columnOrder } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      if (account.journals[index] !== undefined) {\r\n        account.journals[index].columnOrder = columnOrder;\r\n      } else {\r\n        console.warn(`editJournalColumnOrder: Invalid index ${index} for column order of length: ${account.journals.length}.`);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\n// Actions\r\nexport const {\r\n  switchAccount,\r\n  addAccount,\r\n  addDefaultAccount,\r\n  addTransaction,\r\n  changeAccountingCurrency,\r\n  addAsset,\r\n  editAsset,\r\n  deleteAsset,\r\n  addJournal,\r\n  addDefaultJournal,\r\n  editJournalSettings,\r\n  deleteJournal,\r\n  addJournalColumn,\r\n  editJournalColumn,\r\n  deleteJournalColumn,\r\n  editJournalColumnOrder,\r\n} = accountsSlice.actions;\r\n\r\n// Selectors\r\n// TODO consider selector errors\r\nexport const selectAccounts = (state: RootState) => state.accounts.accounts;\r\nexport const selectActiveAccountIndex = (state: RootState) => state.accounts.activeAccount;\r\nexport const selectActiveAccount = (state: RootState) => {\r\n  const accounts = selectAccounts(state);\r\n  const activeAccount = selectActiveAccountIndex(state);\r\n  return activeAccount < accounts.length ? accounts[activeAccount] : null;\r\n}\r\nexport const selectActiveAccountName = (state: RootState) => {\r\n  const activeAccount = selectActiveAccount(state);\r\n  return activeAccount ? activeAccount.name : 'No account selected';\r\n}\r\nexport const selectActiveAccountAccountingCurrency = (state: RootState) => {\r\n  const activeAccount = selectActiveAccount(state);\r\n  return activeAccount ? activeAccount.settings.accountingCurrency : null;\r\n}\r\n/**\r\n * Get the assets (excluding base currency) of the active account.\r\n */\r\nexport const selectActiveAccountAssets = (state: RootState) => {\r\n  const activeAccount = selectActiveAccount(state);\r\n  return activeAccount ? activeAccount.assets : [];\r\n}\r\n/**\r\n * Get the accounting currency and assets of the active account.\r\n */\r\nexport const selectActiveAccountAssetsAll = (state: RootState) => {\r\n  const activeAccount = selectActiveAccount(state);\r\n  return activeAccount ? [activeAccount.settings.accountingCurrency, ...activeAccount.assets] : [];\r\n}\r\nexport const selectActiveAccountJournals = (state: RootState) => {\r\n  const activeAccount = selectActiveAccount(state);\r\n  return activeAccount ? activeAccount.journals : [];\r\n}\r\n\r\nexport default accountsSlice.reducer;","export const drawerWidth = '15rem';","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport clsx from 'clsx'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ArrowDropDownCircleIcon from '@material-ui/icons/ArrowDropDownCircle';\r\nimport { selectAccounts, selectActiveAccountIndex, selectActiveAccountName, switchAccount } from '../accounts/accountsSlice';\r\nimport { drawerWidth } from '../../constants';\r\n\r\ninterface Props {\r\n  readonly drawerOpen: boolean;\r\n  readonly onMenuClick?: React.MouseEventHandler<HTMLButtonElement>;\r\n}\r\n\r\nconst useStyles = makeStyles<Theme, Props>(theme => ({\r\n  root: {\r\n\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    display: props => props.drawerOpen ? 'none' : 'initial'\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarDrawerOpen: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth})`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  }\r\n}));\r\n\r\nfunction TopAppBar(props: Props) {\r\n  const classes = useStyles(props);\r\n  // Controls the showing of the \"change account\" menu\r\n  const [menuAnchor, setMenuAnchor] = useState<Element | null>(null);\r\n  const dispatch = useDispatch();\r\n  const accounts = useSelector(selectAccounts);\r\n  const activeAccountIndex = useSelector(selectActiveAccountIndex);\r\n  const activeAccountName = useSelector(selectActiveAccountName);\r\n\r\n  const handleSwitchAccount = (index: number) => {\r\n    dispatch(switchAccount(index));\r\n    setMenuAnchor(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarDrawerOpen]: props.drawerOpen\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            onClick={props.onMenuClick}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">{ activeAccountName }</Typography>\r\n          <IconButton\r\n            onClick={(e) => setMenuAnchor(e.currentTarget)}\r\n            color=\"inherit\"\r\n            aria-label=\"Change account\"\r\n            aria-haspopup=\"true\"\r\n          >\r\n            <ArrowDropDownCircleIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Menu\r\n        anchorEl={menuAnchor}\r\n        open={Boolean(menuAnchor)}\r\n        onClose={() => setMenuAnchor(null)}\r\n      >\r\n        {accounts.map((a, index) => (\r\n          <MenuItem onClick={() => handleSwitchAccount(index)} selected={activeAccountIndex === index} key={index}>\r\n            { a.name }\r\n          </MenuItem>\r\n        ))}\r\n        <MenuItem>All Accounts</MenuItem>\r\n        <MenuItem>Create New Account</MenuItem>\r\n      </Menu>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TopAppBar;","import { Link, useLocation } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport BookIcon from '@material-ui/icons/Book';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport { drawerWidth } from '../../constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    \r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // Have the same height as the top app bar\r\n    ...theme.mixins.toolbar\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    whiteSpace: 'nowrap',   // Prevent text wrapping when closing the drawer\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerClose: {\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7),\r\n    // Have extra space for the scrollbar if needed\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  }\r\n}));\r\n\r\n/**\r\n * See\r\n * - https://material-ui.com/components/drawers/#mini-variant-drawer\r\n * - https://material-ui.com/api/drawer/\r\n * - https://github.com/mui-org/material-ui/blob/master/docs/src/pages/getting-started/templates/dashboard/Dashboard.js\r\n * - https://material-ui.com/getting-started/templates/dashboard/\r\n */\r\nfunction SideDrawer(props) {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const path = location.pathname;\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      anchor=\"left\"\r\n      classes={{\r\n        paper: clsx({\r\n          [classes.drawerOpen]: props.open,\r\n          [classes.drawerClose]: !props.open\r\n        })\r\n      }}\r\n      className={clsx(classes.drawer, {\r\n        [classes.drawerOpen]: props.open,\r\n        [classes.drawerClose]: !props.open\r\n      })}\r\n    >\r\n      <div className={classes.toolbar}>\r\n        <IconButton onClick={props.onClose}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List component=\"nav\" aria-label=\"Journals\">\r\n        <ListItem\r\n          button\r\n          component={Link}\r\n          to={'/journals'}\r\n          selected={path === '/journals' || path === '/'}\r\n        >\r\n          <ListItemIcon>\r\n            <CreateIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Journals\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          component={Link}\r\n          to={'/capital-changes'}\r\n          selected={path === '/capital-changes'}\r\n        >\r\n          <ListItemIcon>\r\n            <CreateIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Capital changes\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          component={Link}\r\n          to={'/asset-statements'}\r\n          selected={path === '/asset-statements'}\r\n        >\r\n          <ListItemIcon>\r\n            <BookIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Asset Statements\" />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List component=\"nav\" aria-label=\"Financials\">\r\n        <ListSubheader inset disableSticky={true}>Financials</ListSubheader>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <AssignmentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Monthly\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <AssignmentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Quarterly\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <AssignmentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Biyearly\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <AssignmentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Yearly\" />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List component=\"nav\" aria-label=\"Account settings\">\r\n        <ListItem\r\n          button\r\n          component={Link}\r\n          to={'/account-settings'}\r\n          selected={path === '/account-settings'}\r\n        >\r\n          <ListItemIcon>\r\n            <SettingsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Account settings\" />\r\n        </ListItem>\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default SideDrawer;","import { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\ninterface Props {\r\n  objectName?: string;\r\n  edit?: boolean;\r\n  open: boolean;\r\n  onClose?: React.MouseEventHandler<HTMLButtonElement>;\r\n  onReset?: React.MouseEventHandler<HTMLButtonElement>;\r\n  onSubmit?: React.MouseEventHandler<HTMLButtonElement>;\r\n  onEnter?: (node: HTMLElement, isAppearing: boolean) => void;\r\n  dividers?: boolean;\r\n  children?: React.ReactNode;\r\n  contentMaxWidth?: string;\r\n}\r\n\r\nconst useStyles = makeStyles<Theme, Props>(theme => ({\r\n  content: props => ({\r\n    maxWidth: props.contentMaxWidth,\r\n  }),\r\n}));\r\n\r\n/**\r\n * A dialog to add or edit an object.\r\n * \r\n * Props:\r\n * - objectName: Name of the object to add or edit. Appears in the title.\r\n * - edit: true for edit mode, false for add mode (affects text).\r\n * - open: Dialog shows if true.\r\n * - onClose - Function called when the dialog requests to be closed (cancel button or click away).\r\n * - onEnter - Function called before the dialog is opened.\r\n * - onReset - Function called when the \"reset\" button is clicked.\r\n * - onSubmit - Function called when the \"Add/Edit\" button is clicked.\r\n * - dividers - Display the DialogContent dividers if true.\r\n * - contentMaxWidth - The maximum width of the dialog content.\r\n */\r\nfunction AddEditDialog({objectName = 'Item', ...props}: Props) {\r\n  const classes = useStyles(props);\r\n  return (\r\n    <Dialog open={props.open} onClose={props.onClose} onEnter={props.onEnter}>\r\n      <DialogTitle>{ `${props.edit ? 'Edit' : 'Add'} ${objectName}` }</DialogTitle>\r\n      <DialogContent dividers={props.dividers} className={classes.content}>\r\n        { props.children }\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.onClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={props.onReset} color=\"primary\">\r\n          Reset\r\n        </Button>\r\n        <Button onClick={props.onSubmit} color=\"primary\">\r\n          { props.edit ? 'Edit' : 'Add' }\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default AddEditDialog;","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport AddEditDialog from '../../components/AddEditDialog';\r\nimport { addTransaction, selectActiveAccount, selectActiveAccountAssetsAll } from '../accounts/accountsSlice';\r\nimport { Transaction, dateToString } from '../../models/account';\r\n\r\nexport interface FormFields {\r\n  date: string;\r\n  base: string;\r\n  quote: string;\r\n  baseAmount: number,\r\n  quoteAmount: number,\r\n  price: number,\r\n  fee: number,\r\n  feeCurrency: 'base' | 'quote',\r\n  notes: string,\r\n}\r\n\r\nconst initialFormFields: FormFields = {\r\n  date: '',\r\n  base: '',\r\n  quote: '',\r\n  baseAmount: NaN,\r\n  quoteAmount: NaN,\r\n  price: NaN,\r\n  fee: NaN,\r\n  feeCurrency: 'quote',\r\n  notes: '',\r\n};\r\n\r\ninterface Props {\r\n  journal: number;\r\n  transaction?: Transaction | null;\r\n  open: boolean;\r\n  onDialogClose?: () => void;\r\n}\r\n\r\nfunction AddEditTransactionDialog(props: Props) {\r\n  const { journal, transaction, open, onDialogClose } = props;\r\n  const [fields, setFields] = useState<FormFields>(initialFormFields);\r\n  const dispatch = useDispatch();\r\n  const account = useSelector(selectActiveAccount);\r\n  const assets = useSelector(selectActiveAccountAssetsAll);\r\n\r\n  const resetForm = () => {\r\n    if (transaction === null || transaction === undefined) {\r\n      setFields({\r\n        ...initialFormFields,\r\n        date: dateToString(new Date()),\r\n        base: account?.assets[0]?.ticker ?? '',\r\n        quote: account?.settings.accountingCurrency.ticker ?? '',\r\n      });\r\n    } else {\r\n      setFields({\r\n        date: transaction.date,\r\n        base: transaction.base,\r\n        baseAmount: transaction.baseAmount,\r\n        quote: transaction.quote,\r\n        quoteAmount: transaction.quoteAmount,\r\n        price: transaction.quoteAmount / transaction.baseAmount,\r\n        fee: transaction.feeBase !== 0 ? transaction.feeBase : transaction.feeQuote,\r\n        feeCurrency: transaction.feeBase !== 0 ? 'base' : 'quote',\r\n        notes: transaction.notes,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // TODO input validation\r\n    if (transaction === null || transaction === undefined) {\r\n      dispatch(addTransaction({\r\n        journal: journal,\r\n        transaction: {\r\n          date: fields.date,\r\n          base: fields.base,\r\n          baseAmount: fields.baseAmount,\r\n          quote: fields.quote,\r\n          quoteAmount: fields.quoteAmount,\r\n          feeBase: 0,\r\n          feeQuote: fields.fee,\r\n          notes: fields.notes,\r\n          extra: {},\r\n        },\r\n      }));\r\n    } else {\r\n      // TODO\r\n    }\r\n    onDialogClose?.();\r\n  };\r\n\r\n  return (\r\n    <AddEditDialog\r\n      objectName=\"Transaction\"\r\n      edit={Boolean(transaction)}\r\n      open={open}\r\n      onClose={onDialogClose}\r\n      onEnter={resetForm}\r\n      onReset={resetForm}\r\n      onSubmit={handleSubmit}\r\n      contentMaxWidth=\"30rem\"\r\n    >\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            type=\"datetime-local\"\r\n            size=\"small\"\r\n            label=\"Date\"\r\n            fullWidth\r\n            required\r\n            value={fields.date}\r\n            onChange={(e) => setFields(s => ({...s, date: e.target.value}))}\r\n            InputLabelProps={{shrink: true}}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <TextField\r\n            type=\"number\"\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Amount\"\r\n            required\r\n            value={isNaN(fields.baseAmount) ? '' : fields.baseAmount}\r\n            onChange={(e) => setFields(s => ({...s, baseAmount: Math.max(parseFloat(e.target.value), 0)}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            select\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Asset\"\r\n            required\r\n            value={fields.base}\r\n            onChange={(e) => setFields(s => ({...s, base: e.target.value}))}\r\n          >\r\n            {assets.map((a) => (\r\n              <MenuItem value={a.ticker} key={a.ticker}>{ a.ticker }</MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <TextField\r\n            type=\"number\"\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Total\"\r\n            required\r\n            value={isNaN(fields.quoteAmount) ? '' : fields.quoteAmount}\r\n            onChange={(e) => setFields(s => ({...s, quoteAmount: Math.max(parseFloat(e.target.value), 0)}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            select\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Quote Currency\"\r\n            required\r\n            value={fields.quote}\r\n            onChange={(e) => setFields(s => ({...s, quote: e.target.value}))}\r\n          >\r\n            {assets.map((a) => (\r\n              <MenuItem value={a.ticker} key={a.ticker}>{ a.ticker }</MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <TextField\r\n            type=\"number\"\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Price\"\r\n            required\r\n            value={isNaN(fields.price) ? '' : fields.price}\r\n            onChange={(e) => setFields(s => ({...s, price: Math.max(parseFloat(e.target.value), 0)}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          \r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <TextField\r\n            type=\"number\"\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Fee\"\r\n            value={isNaN(fields.fee) ? '' : fields.fee}\r\n            onChange={(e) => setFields(s => ({...s, fee: Math.max(parseFloat(e.target.value), 0)}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            select\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Fee Currency\"\r\n            value={fields.feeCurrency}\r\n            onChange={(e) => setFields(s => ({...s, feeCurrency: e.target.value as 'base' | 'quote'}))}\r\n          >\r\n            <MenuItem value={'base'}>{ `Base (${fields.base})` }</MenuItem>\r\n            <MenuItem value={'quote'}>{ `Quote (${fields.quote})` }</MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            multiline\r\n            fullWidth\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            label=\"Notes\"\r\n            value={fields.notes}\r\n            onChange={(e) => setFields(s => ({...s, notes: e.target.value}))}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </AddEditDialog>\r\n  );\r\n}\r\n\r\nexport default AddEditTransactionDialog;","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Box from '@material-ui/core/Box';\r\nimport AddEditDialog from '../../components/AddEditDialog';\r\nimport { addDefaultJournal, editJournalSettings, selectActiveAccountJournals } from './accountsSlice';\r\nimport { Journal, JournalType } from '../../models/account';\r\n\r\ninterface FormFields {\r\n  name: string,\r\n  type: JournalType,\r\n}\r\n\r\nconst initialFormFields: FormFields = {\r\n  name: '',\r\n  type: 'trading',\r\n};\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  onDialogClose?: () => void;\r\n  journal: number;\r\n}\r\n\r\n/**\r\n * React component. Add or change journal column dialog.\r\n * \r\n * Props:\r\n * - open: Dialog shows if true.\r\n * - onDialogClose: Function called when the dialog requests to be closed.\r\n * - journal: The index of the journal selected to edit. Set to index out of range (use a negative number) to add new journal.\r\n */\r\nfunction AddEditJournalDialog(props: Readonly<Props>) {\r\n  const { open, onDialogClose, journal: index } = props;\r\n  const [fields, setFields] = useState<FormFields>(initialFormFields);\r\n  const dispatch = useDispatch();\r\n  const journals = useSelector(selectActiveAccountJournals);\r\n  // journalIndex is set to -1 initially\r\n  const journal = journals[index] as Journal | undefined;\r\n\r\n  const handleReset = () => {\r\n    if (journal) {\r\n      setFields({\r\n        name: journal.name,\r\n        type: journal.type,\r\n      });\r\n    } else {\r\n      setFields(initialFormFields);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (journal) {\r\n      dispatch(editJournalSettings({index: index, name: fields.name, type: fields.type}));\r\n    } else {\r\n      dispatch(addDefaultJournal({name: fields.name, type: fields.type}));\r\n    }\r\n    onDialogClose?.();\r\n  };\r\n\r\n  return (\r\n    <AddEditDialog\r\n      objectName={'Journal'}\r\n      edit={journal !== undefined}\r\n      open={open}\r\n      onClose={onDialogClose}\r\n      onEnter={handleReset}\r\n      onReset={handleReset}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <Box>\r\n        <TextField\r\n          type=\"text\"\r\n          label=\"Journal Name\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          required\r\n          value={fields.name}\r\n          onChange={(e) => setFields(s => ({...s, name: e.target.value}))}\r\n        />\r\n      </Box>\r\n      <Box mt={2}>\r\n        <TextField\r\n          select\r\n          label=\"Type\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          required\r\n          value={fields.type}\r\n          onChange={(e) => setFields(s => ({...s, type: e.target.value as JournalType}))}\r\n        >\r\n          <MenuItem value=\"trading\">Trading</MenuItem>\r\n          <MenuItem value=\"income\">Income</MenuItem>\r\n          <MenuItem value=\"expense\">Expense</MenuItem>\r\n        </TextField>\r\n      </Box>\r\n    </AddEditDialog>\r\n  );\r\n}\r\n\r\nexport default AddEditJournalDialog;","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AddEditDialog from '../../components/AddEditDialog';\r\nimport { addJournalColumn, editJournalColumn, selectActiveAccountAssetsAll, selectActiveAccountJournals } from './accountsSlice';\r\nimport {\r\n  Journal,\r\n  JournalColumn,\r\n  JournalColumnRole,\r\n  JournalColumnType,\r\n  isDecimalColumn,\r\n  isExtraColumn,\r\n  isDecimalColumnDescription,\r\n  isJournalColumnType,\r\n  getJournalColumn,\r\n  journalColumnRoleDisplay,\r\n  Asset,\r\n} from '../../models/account';\r\nimport { Divider, Typography } from '@material-ui/core';\r\n\r\ninterface DecimalColumnSettingsProps {\r\n  price?: boolean;\r\n  disableDescription?: boolean;\r\n  description: string;\r\n  onDescriptionChange?: (newValue: string) => void;\r\n  precision: Record<string, number>;\r\n  onPrecisionChange?: (newValue: Record<string, number>) => void;\r\n  // ticker2 is the second ticker in the ticker pair (ticker/ticker2) for price columns\r\n  newPrecisionFields: {ticker: string, ticker2?: string, precision: number};\r\n  onNewPrecisionFieldsChange?: (newValue: {ticker: string, ticker2?: string, precision: number}) => void;\r\n  onNewPrecisionFieldsReset?: () => void;\r\n  assets?: Asset[];\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  removeButton: {\r\n    color: theme.palette.error.main,\r\n  },\r\n}));\r\n\r\nfunction DecimalColumnSettings(props: DecimalColumnSettingsProps) {\r\n  const classes = useStyles();\r\n  const {\r\n    price,\r\n    disableDescription,\r\n    description,\r\n    onDescriptionChange,\r\n    precision,\r\n    onPrecisionChange,\r\n    newPrecisionFields,\r\n    onNewPrecisionFieldsChange,\r\n    onNewPrecisionFieldsReset,\r\n    assets,\r\n  } = props;\r\n\r\n  const handleAddPrecision = () => {\r\n    if (price) {\r\n      if (newPrecisionFields.ticker && newPrecisionFields.ticker2 && !isNaN(newPrecisionFields.precision)) {\r\n        onPrecisionChange?.({...precision, [`${newPrecisionFields.ticker}/${newPrecisionFields.ticker2}`]: newPrecisionFields.precision});\r\n        onNewPrecisionFieldsReset?.();\r\n      }\r\n    } else {\r\n      if (newPrecisionFields.ticker && !isNaN(newPrecisionFields.precision)) {\r\n        onPrecisionChange?.({...precision, [newPrecisionFields.ticker]: newPrecisionFields.precision});\r\n        onNewPrecisionFieldsReset?.();\r\n      }\r\n    }\r\n    \r\n  };\r\n\r\n  const handleDeletePrecision = (ticker: string) => {\r\n    const { [ticker]: _, ...newPrecision } = precision;\r\n    onPrecisionChange?.(newPrecision);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12}>\r\n        <TextField\r\n          select\r\n          label=\"Description\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          required\r\n          disabled={disableDescription}\r\n          value={description}\r\n          onChange={(e) => onDescriptionChange?.(e.target.value)}\r\n        >\r\n          <MenuItem value=\"base\">Base</MenuItem>\r\n          <MenuItem value=\"quote\">Quote</MenuItem>\r\n          <MenuItem value=\"price\">Price</MenuItem>\r\n        </TextField>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"subtitle1\">Precision</Typography>\r\n        <Divider />\r\n      </Grid>\r\n      {Object.entries(precision).map(([t, p]) => [\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            type=\"text\"\r\n            label={price ? 'Asset Pair' : 'Asset'}\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            disabled\r\n            value={t}\r\n          />\r\n        </Grid>,\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            type=\"number\"\r\n            label=\"Precision\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={isNaN(p) ? '' : p}\r\n            onChange={(e) => onPrecisionChange?.({...precision, [t]: Math.max(parseInt(e.target.value), 0)})}\r\n          />\r\n        </Grid>,\r\n        <Grid item xs={2}>\r\n          <IconButton onClick={() => handleDeletePrecision(t)} className={classes.removeButton}>\r\n            <RemoveIcon />\r\n          </IconButton>\r\n        </Grid>,\r\n      ])}\r\n      <Grid item xs={price ? 3 : 6}>\r\n        <TextField\r\n          select\r\n          label={price ? 'Base' : 'Asset'}\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          required\r\n          value={newPrecisionFields.ticker}\r\n          onChange={(e) => onNewPrecisionFieldsChange?.({...newPrecisionFields, ticker: e.target.value})}\r\n        >\r\n          {assets?.map((a) => (\r\n            <MenuItem value={a.ticker} key={a.ticker}>{ a.ticker }</MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </Grid>\r\n      {price && (\r\n        <Grid item xs={3}>\r\n          <TextField\r\n            select\r\n            label=\"Quote\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={newPrecisionFields.ticker2 ?? ''}\r\n            onChange={(e) => onNewPrecisionFieldsChange?.({...newPrecisionFields, ticker2: e.target.value})}\r\n          >\r\n            {assets?.map((a) => (\r\n              <MenuItem value={a.ticker} key={a.ticker}>{ a.ticker }</MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n      )}\r\n      <Grid item xs={4}>\r\n        <TextField\r\n          type=\"number\"\r\n          label=\"Precision\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          required\r\n          value={isNaN(newPrecisionFields.precision) ? '' : newPrecisionFields.precision}\r\n          onChange={(e) => onNewPrecisionFieldsChange?.({...newPrecisionFields, precision: Math.max(parseInt(e.target.value), 0)})}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={2}>\r\n        <IconButton color=\"secondary\" onClick={handleAddPrecision}>\r\n          <AddIcon />\r\n        </IconButton>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\ninterface FormFields {\r\n  name: string;\r\n  type: string;\r\n  hide: boolean;\r\n  precision: Record<string, number>;\r\n  decimalColumnDescription: string;\r\n  showTime: boolean,\r\n}\r\n\r\nconst initialFormFields: Readonly<FormFields> = {\r\n  name: '',\r\n  type: 'text',\r\n  hide: false,\r\n  precision: {},\r\n  decimalColumnDescription: 'base',\r\n  showTime: false,\r\n};\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  onDialogClose?: () => void;\r\n  journal: number;\r\n  role?: JournalColumnRole | null;\r\n}\r\n\r\n/**\r\n * React component. Add or change journal column dialog.\r\n * \r\n * Props:\r\n * - open: Dialog shows if true.\r\n * - onDialogClose: Function called when the dialog requests to be closed.\r\n * - index: The index of the journal selected.\r\n * - role: The column role of the selected journal to edit. Set to nullish value to add a new column.\r\n */\r\nfunction AddEditJournalColumnDialog(props: Readonly<Props>) {\r\n  const { open, onDialogClose, journal: index, role } = props;\r\n  const [fields, setFields] = useState<FormFields>(initialFormFields);\r\n  const [newPrecisionFields, setNewPrecisionFields] = useState<{ticker: string, precision: number}>({ticker: '', precision: 2});\r\n  const dispatch = useDispatch();\r\n  const journals = useSelector(selectActiveAccountJournals);\r\n  const allAssets = useSelector(selectActiveAccountAssetsAll);\r\n  // journalIndex is set to -1 initially\r\n  const journal = journals[index] as Journal | undefined;\r\n  // column is the selected column if the props index and role are valid, else undefined\r\n  const column = (journal !== undefined && role !== null && role !== undefined) ? getJournalColumn(journal, role) : undefined;\r\n\r\n  const handleReset = () => { \r\n    if (column) {\r\n      setFields({\r\n        name: column.name,\r\n        type: column.type,\r\n        hide: column.hide,\r\n        precision: column.type === 'decimal' ? column.precision : initialFormFields.precision,\r\n        decimalColumnDescription: column.type === 'decimal' ? column.description : initialFormFields.decimalColumnDescription,\r\n        showTime: column.type === 'date' ? column.showTime : initialFormFields.showTime,\r\n      });\r\n    } else {\r\n      setFields(initialFormFields);\r\n    }\r\n    handleResetNewPrecisionFields();\r\n  };\r\n  \r\n  const handleResetNewPrecisionFields = () => {\r\n    setNewPrecisionFields({ticker: '', precision: NaN});\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // Core columns cannot change type\r\n    // Use default column type 'text' if type field is invalid\r\n    const newType: JournalColumnType = (column && typeof role === 'string')\r\n      ? column.type :\r\n      (isJournalColumnType(fields.type) ? fields.type : 'text');\r\n    // Construct the new column piece by piece\r\n    const partialColumn = {name: fields.name, hide: fields.hide};\r\n    switch (newType) {\r\n      case 'text':\r\n      case 'integer':\r\n      case 'boolean':\r\n      case 'asset':\r\n        addOrEditJournalColumn({...partialColumn, type: newType});\r\n        break;\r\n      case 'date':\r\n        addOrEditJournalColumn({\r\n          ...partialColumn,\r\n          type: newType,\r\n          showTime: fields.showTime,\r\n        });\r\n        break;\r\n      case 'decimal':\r\n        // Default description is 'base' if the date format field is invalid\r\n        addOrEditJournalColumn({\r\n          ...partialColumn,\r\n          type: newType,\r\n          precision: fields.precision,\r\n          // Description cannot change if it is a core column\r\n          description: (column !== undefined && isDecimalColumn(column)) ?\r\n            column.description :\r\n            (isDecimalColumnDescription(fields.decimalColumnDescription) ? fields.decimalColumnDescription : 'base'),\r\n        });\r\n        break;\r\n      default:\r\n        console.warn(`handleSubmit: Unreachable code: newType (${newType}) should be exhausted.`);\r\n    }\r\n    onDialogClose?.();\r\n  };\r\n\r\n  const addOrEditJournalColumn = (newColumn: JournalColumn) => {\r\n    if (column && role !== null && role !== undefined) {\r\n      dispatch(editJournalColumn({index: index, role: role, column: newColumn}));\r\n    } else {\r\n      if (isExtraColumn(newColumn)) {\r\n        dispatch(addJournalColumn({index: index, column: newColumn}));\r\n      } else {\r\n        console.warn(`addOrEditJournalColumn: Tried to add a new column that is not an ExtraColumn:\\n${JSON.stringify(newColumn, undefined, 2)}.`);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AddEditDialog\r\n      objectName={'Journal Column'}\r\n      edit={Boolean(column)}\r\n      open={open}\r\n      onClose={onDialogClose}\r\n      onEnter={handleReset}\r\n      onReset={handleReset}\r\n      onSubmit={handleSubmit}\r\n      contentMaxWidth=\"32rem\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            type=\"text\"\r\n            label=\"Role\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={journalColumnRoleDisplay(role ?? journal?.columns.extra.length ?? 0)}\r\n            disabled\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            type=\"text\"\r\n            label=\"Column Name\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={fields.name}\r\n            onChange={(e) => setFields(s => ({...s, name: e.target.value}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <TextField\r\n            select\r\n            label=\"Type\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            disabled={typeof role === 'string'}\r\n            value={fields.type}\r\n            onChange={(e) => setFields(s => ({...s, type: e.target.value}))}\r\n          >\r\n            <MenuItem value=\"text\">Text</MenuItem>\r\n            <MenuItem value=\"decimal\">Decimal</MenuItem>\r\n            <MenuItem value=\"integer\">Integer</MenuItem>\r\n            <MenuItem value=\"boolean\">Boolean</MenuItem>\r\n            {typeof role === 'string' && [\r\n              <MenuItem value=\"date\" key=\"date\">Date</MenuItem>,\r\n              <MenuItem value=\"asset\" key=\"asset\">Asset</MenuItem>,\r\n            ]}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <FormControlLabel\r\n            control={<Checkbox />}\r\n            checked={fields.hide}\r\n            onChange={(e, checked) => setFields(s => ({...s, hide: checked}))}\r\n            label=\"Hide\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        {fields.type === 'date' && (\r\n          <Grid item xs={12}>\r\n            <Box marginLeft=\"auto\" marginRight=\"auto\" width=\"fit-content\">\r\n              <FormControlLabel\r\n                control={<Checkbox />}\r\n                checked={fields.showTime}\r\n                onChange={(e, checked) => setFields(s => ({...s, showTime: checked}))}\r\n                label=\"Show Time\"\r\n                labelPlacement=\"end\"\r\n              />\r\n            </Box>\r\n          </Grid>\r\n        )}\r\n        {fields.type === 'decimal' && (\r\n          <DecimalColumnSettings\r\n            price={fields.decimalColumnDescription === 'price'}\r\n            disableDescription={typeof role === 'string'}\r\n            description={fields.decimalColumnDescription}\r\n            onDescriptionChange={newDescription => setFields(s => ({...s, decimalColumnDescription: newDescription}))}\r\n            precision={fields.precision}\r\n            onPrecisionChange={newPrecision => setFields(s => ({...s, precision: newPrecision}))}\r\n            newPrecisionFields={newPrecisionFields}\r\n            onNewPrecisionFieldsChange={newFields => setNewPrecisionFields(newFields)}\r\n            onNewPrecisionFieldsReset={handleResetNewPrecisionFields}\r\n            assets={allAssets}\r\n          />\r\n        )}\r\n      </Grid>\r\n    </AddEditDialog>\r\n  );\r\n}\r\n\r\nexport default AddEditJournalColumnDialog;","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { makeStyles, Theme } from '@material-ui/core/styles'; \r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport AddEditDialog from '../../components/AddEditDialog';\r\nimport { editJournalColumn, editJournalColumnOrder, selectActiveAccountJournals } from './accountsSlice';\r\nimport { getJournalColumn, Journal, JournalColumnRole, journalColumnRoleDisplay } from '../../models/account';\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  onDialogClose?: () => void;\r\n  journal: number;\r\n  displayRoleDefault?: boolean;\r\n  editHide?: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles<Theme, Props>((theme) => ({\r\n  listItem: {\r\n    paddingRight: props => props.editHide ? 100 : 50,\r\n  },\r\n}));\r\n\r\n/**\r\n * Edit journal column order dialog React function component.\r\n * \r\n * Props:\r\n * - open: Dialog shows if true.\r\n * - onDialogClose: Function called when the dialog requests to be closed.\r\n * - journal: The index of the journal of the column order to edit.\r\n * - displayRoleDefault: Use the column role as the identifier instead of the column name as the default. Default false.\r\n */\r\nfunction EditJournalColumnOrderDialog(props: Readonly<Props>) {\r\n  const classes = useStyles(props);\r\n  const { journal: journalIndex, onDialogClose, open, displayRoleDefault, editHide } = props;\r\n  const dispatch = useDispatch();\r\n  const journals = useSelector(selectActiveAccountJournals);\r\n  const journal = journals[journalIndex] as Journal | undefined;\r\n  // The actual column order in the global state\r\n  const columnOrder = journal?.columnOrder ?? [];\r\n  // The edit column order in the dialog. Confirmed when the \"edit\" button is clicked.\r\n  const [dialogColumnOrder, setDialogColumnOrder] = useState<JournalColumnRole[]>(columnOrder);\r\n  const [hiddenColumns, setHiddenColumns] = useState<JournalColumnRole[]>([]);\r\n  const [displayRole, setDisplayRole] = useState(displayRoleDefault ?? false);\r\n\r\n  const handleReset = () => {\r\n    setDialogColumnOrder(columnOrder);\r\n    if (journal !== undefined) {\r\n      const newHiddenColumns: JournalColumnRole[] = [];\r\n      columnOrder.forEach((role) => {\r\n        if (getJournalColumn(journal, role).hide) {\r\n          newHiddenColumns.push(role);\r\n        }\r\n      });\r\n      setHiddenColumns(newHiddenColumns);\r\n    } else {\r\n      setHiddenColumns([]);\r\n    }\r\n  };\r\n\r\n  const handleReorderColumn = (index: number, newIndex: number) => {\r\n    const newColumnOrder = [...dialogColumnOrder];\r\n    newColumnOrder.splice(newIndex, 0, newColumnOrder.splice(index, 1)[0]);\r\n    setDialogColumnOrder(newColumnOrder);\r\n  };\r\n\r\n  const handleToggleHide = (role: JournalColumnRole) => {\r\n    const hiddenIndex = hiddenColumns.indexOf(role);\r\n    const newHiddenColumns = [...hiddenColumns];\r\n    if (hiddenIndex === -1) {\r\n      newHiddenColumns.push(role);\r\n    } else {\r\n      newHiddenColumns.splice(hiddenIndex, 1);\r\n    }\r\n    setHiddenColumns(newHiddenColumns);\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    if (journal !== undefined) {\r\n      dispatch(editJournalColumnOrder({index: journalIndex, columnOrder: dialogColumnOrder}));\r\n      if (editHide) {\r\n        dialogColumnOrder.forEach(role => {\r\n          const oldColumn = getJournalColumn(journal, role);\r\n          const newHide = hiddenColumns.indexOf(role) !== -1;\r\n          dispatch(editJournalColumn({index: journalIndex, role: role, column: {...oldColumn, hide: newHide}}));\r\n        });\r\n      }\r\n    }\r\n    onDialogClose?.();\r\n  };\r\n\r\n  return (\r\n    <AddEditDialog\r\n      objectName={'Columns Layout'}\r\n      edit\r\n      open={open}\r\n      onClose={onDialogClose}\r\n      onEnter={handleReset}\r\n      onReset={handleReset}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <FormControlLabel\r\n        control={<Switch />}\r\n        checked={displayRole}\r\n        onChange={(e, checked) => setDisplayRole(checked)}\r\n        label={displayRole ? 'Role' : 'Name'}\r\n        labelPlacement=\"end\"\r\n      />\r\n      <List>\r\n        {dialogColumnOrder.map((role, i) =>\r\n          <ListItem dense disableGutters divider classes={{secondaryAction: classes.listItem}} key={role}>\r\n            <ListItemIcon>\r\n              <Tooltip title=\"Reorder column up\">\r\n                <IconButton\r\n                  disableRipple\r\n                  disabled={i === 0}\r\n                  onClick={() => handleReorderColumn(i, i - 1)}\r\n                  aria-label=\"Reorder column up\"\r\n                >\r\n                  <ArrowUpwardIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </ListItemIcon>\r\n            <ListItemText primary={displayRole ? journalColumnRoleDisplay(role) : getJournalColumn(journal!, role).name} />\r\n            <ListItemSecondaryAction>\r\n              {editHide && <Tooltip title=\"Show column\">\r\n                <Checkbox\r\n                  checked={hiddenColumns.indexOf(role) === -1}\r\n                  onChange={() => handleToggleHide(role)}\r\n                />\r\n              </Tooltip>}\r\n              <Tooltip title=\"Reorder column down\">\r\n                <IconButton\r\n                  edge=\"end\"\r\n                  disableRipple\r\n                  disabled={i === dialogColumnOrder.length - 1}\r\n                  onClick={() => handleReorderColumn(i, i + 1)}\r\n                  aria-label=\"Reorder column down\"\r\n                >\r\n                  <ArrowDownwardIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        )}\r\n      </List>\r\n    </AddEditDialog>\r\n  );\r\n}\r\n\r\nexport default EditJournalColumnOrderDialog;","\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Box from '@material-ui/core/Box';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport AddEditTransactionDialog from './AddEditTransactionDialog';\r\nimport AddEditJournalDialog from '../accounts/AddEditJournalDialog';\r\nimport AddEditJournalColumnDialog from '../accounts/AddEditJournalColumnDialog';\r\nimport EditJournalColumnOrderDialog from '../accounts/EditJournalColumnOrderDialog';\r\nimport { selectActiveAccountAssetsAll, selectActiveAccountJournals } from '../accounts/accountsSlice';\r\nimport {\r\n  getJournalColumn,\r\n  isRightAlignJournalColumnType,\r\n  transactionDataDisplay,\r\n  Journal,\r\n  JournalColumnRole,\r\n  Transaction,\r\n  Asset,\r\n} from '../../models/account';\r\n\r\ninterface JournalHeadersProps {\r\n  journal: Journal,\r\n  onSettingsClick?: (role: JournalColumnRole) => void,\r\n}\r\n\r\nconst useJournalHeadersStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: '1px solid rgba(224, 224, 224, 1)',\r\n      borderRight: '1px solid rgba(224, 224, 224, 1)',\r\n      '&:last-child': {\r\n        borderRight: 'none',\r\n      },\r\n    },\r\n  },\r\n  columnSettings: {\r\n    marginLeft: 'auto',\r\n  },\r\n}));\r\n\r\nfunction JournalHeaders(props: Readonly<JournalHeadersProps>) {\r\n  const classes = useJournalHeadersStyles();\r\n\r\n  return (\r\n    <TableRow className={classes.root}>\r\n        {props.journal.columnOrder.map((role) => {\r\n          const column = getJournalColumn(props.journal, role);\r\n          return !column.hide && <TableCell key={role}>\r\n            <Box display=\"flex\">\r\n              {column.name}\r\n              <IconButton\r\n                size=\"small\"\r\n                edge=\"end\"\r\n                onClick={() => props.onSettingsClick?.(role)}\r\n                className={classes.columnSettings}\r\n              >\r\n                <SettingsIcon fontSize=\"small\" style={{fontSize:'1rem'}} />\r\n              </IconButton>\r\n            </Box>\r\n          </TableCell>;\r\n        })}\r\n    </TableRow>\r\n  );\r\n}\r\n\r\ninterface JournalRowProps {\r\n  journal: Journal,\r\n  transaction: Transaction,\r\n  assets?: Asset[],\r\n}\r\n\r\nconst useJournalRowStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: '1px solid rgba(224, 224, 224, 1)',\r\n      borderRight: '1px solid rgba(224, 224, 224, 1)',\r\n      '&:last-child': {\r\n        borderRight: 'none',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nfunction JournalRow(props: Readonly<JournalRowProps>) {\r\n  const { journal, transaction, assets } = props;\r\n  const classes = useJournalRowStyles();\r\n\r\n  return (\r\n    <TableRow hover className={classes.root}>\r\n      {journal.columnOrder.map((role) => {\r\n        const column = getJournalColumn(journal, role);\r\n        return !column.hide && <TableCell\r\n          align={isRightAlignJournalColumnType(column.type) ? 'right' : undefined}\r\n          key={role}\r\n        >\r\n          { transactionDataDisplay(transaction, role, journal, assets) }\r\n        </TableCell>;\r\n      })}\r\n    </TableRow>\r\n  );\r\n}\r\n\r\ninterface JournalSheetProps {\r\n  journal: number,\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  toolbar: {\r\n    borderBottom: `1px solid ${theme.palette.divider}`,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  table: {\r\n    borderRadius: 0,\r\n    boxShadow: 'none',\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction JournalSheet(props: Readonly<JournalSheetProps>) {\r\n  const classes = useStyles();\r\n  const [menuAnchor, setMenuAnchor] = useState<Element | null>(null);\r\n  const [transactionDialogOpen, setTransactionDialogOpen] = useState(false);\r\n  const [selectedTransaction, setSelectedTransaction] = useState<Transaction | null>(null);\r\n  const [journalSettingsDialogOpen, setJournalSettingsDialogOpen] = useState(false);\r\n  const [journalColumnOrderDialogOpen, setJournalColumnOrderDialogOpen] = useState(false);\r\n  const [journalColumnDialogOpen, setJournalColumnDialogOpen] = useState(false);\r\n  const [selectedJournalColumn, setSelectedJournalColumn] = useState<JournalColumnRole | null>(null);\r\n  const assets = useSelector(selectActiveAccountAssetsAll);\r\n  const journals = useSelector(selectActiveAccountJournals);\r\n  const journal = journals[props.journal];\r\n\r\n  const openAddDialog = () => {\r\n    setSelectedTransaction(null);\r\n    setTransactionDialogOpen(true);\r\n  };\r\n\r\n  const openEditDialog = (tx: Transaction) => {\r\n    setSelectedTransaction(tx);\r\n    setTransactionDialogOpen(true);\r\n  };\r\n\r\n  const openJournalSettingsDialog = () => {\r\n    setJournalSettingsDialogOpen(true);\r\n    setMenuAnchor(null);\r\n  }\r\n\r\n  const openJournalColumnOrderDialog = () => {\r\n    setJournalColumnOrderDialogOpen(true);\r\n    setMenuAnchor(null);\r\n  };\r\n\r\n  const openJournalColumnDialog = (role: JournalColumnRole) => {\r\n    setSelectedJournalColumn(role);\r\n    setJournalColumnDialogOpen(true);\r\n  };\r\n\r\n  return (\r\n      <Box role=\"tabpanel\">\r\n        <Toolbar className={classes.toolbar}>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            { journal.name }\r\n          </Typography>\r\n          <IconButton onClick={(e) => setMenuAnchor(e.currentTarget)}>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n        <TableContainer component={Paper} className={classes.table}>\r\n          <Table\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <JournalHeaders journal={journal} onSettingsClick={openJournalColumnDialog} />\r\n            </TableHead>\r\n            <TableBody>\r\n              {journal.transactions.map((tx, index) => (\r\n                <JournalRow journal={journal} transaction={tx} assets={assets} key={index} />\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <Fab color=\"secondary\" className={classes.fab} onClick={openAddDialog}>\r\n          <AddIcon />\r\n        </Fab>\r\n        <AddEditTransactionDialog\r\n          journal={props.journal}\r\n          transaction={selectedTransaction}\r\n          open={transactionDialogOpen}\r\n          onDialogClose={() => setTransactionDialogOpen(false)}\r\n        />\r\n        <AddEditJournalDialog\r\n          journal={props.journal}\r\n          open={journalSettingsDialogOpen}\r\n          onDialogClose={() => setJournalSettingsDialogOpen(false)}\r\n        />\r\n        <AddEditJournalColumnDialog\r\n          journal={props.journal}\r\n          role={selectedJournalColumn}\r\n          open={journalColumnDialogOpen}\r\n          onDialogClose={() => setJournalColumnDialogOpen(false)}\r\n        />\r\n        <EditJournalColumnOrderDialog\r\n          journal={props.journal}\r\n          open={journalColumnOrderDialogOpen}\r\n          onDialogClose={() => setJournalColumnOrderDialogOpen(false)}\r\n          editHide\r\n        />\r\n        <Menu\r\n          anchorEl={menuAnchor}\r\n          open={menuAnchor !== null}\r\n          onClose={() => setMenuAnchor(null)}\r\n        >\r\n          <MenuItem onClick={openJournalSettingsDialog}>Settings</MenuItem>\r\n          <MenuItem onClick={openJournalColumnOrderDialog}>Columns</MenuItem>\r\n        </Menu>\r\n      </Box>\r\n  );\r\n}\r\n  \r\nexport default JournalSheet;","import Typography from '@material-ui/core/Typography';\r\n\r\nfunction AddJournalTab() {\r\n  return (\r\n    <div role=\"tabpanel\">\r\n      <Typography variant=\"h3\">Add Journal</Typography>\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default AddJournalTab;","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport JournalSheet from './JournalSheet';\r\nimport AddJournalTab from './AddJournalTab';\r\nimport { selectActiveAccountJournals } from '../accounts/accountsSlice';\r\n\r\nfunction Journals() {\r\n  const [activeTab, setActiveTab] = useState<number>(0);\r\n  const journals = useSelector(selectActiveAccountJournals);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={activeTab} onChange={(e, v) => setActiveTab(v)} aria-label=\"Journals tab\">\r\n          {journals.map((journal, index) =>\r\n            <Tab label={journal.name} key={index} aria-label={`${journal.name} tab`} />\r\n          )}\r\n          <Tab icon={<AddIcon />} />\r\n        </Tabs>\r\n      </AppBar>\r\n      {journals.map((journal, index) =>\r\n        (activeTab === index) && <JournalSheet journal={index} key={index} />\r\n      )}\r\n      { activeTab === journals.length && <AddJournalTab /> }\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Journals;","\r\n\r\nfunction CapitalChanges(props) {\r\n  return (\r\n    <p>Capital Changes</p>\r\n  );\r\n}\r\n  \r\nexport default CapitalChanges;","\r\n\r\nfunction AssetStatements(props) {\r\n    return (\r\n      <p>Asset Statements</p>\r\n    );\r\n  }\r\n    \r\n  export default AssetStatements;","import { useState } from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport AddEditDialog from '../../components/AddEditDialog';\r\nimport { Asset } from \"../../models/account\";\r\n\r\nexport interface FormFields {\r\n  name: string,\r\n  ticker: string,\r\n  precision: number,\r\n  pricePrecision: number,\r\n  isCurrency: boolean;\r\n  symbol: string;\r\n}\r\n\r\nconst initialFormFields: FormFields = {\r\n  name: '',\r\n  ticker: '',\r\n  precision: 2,\r\n  pricePrecision: 2,\r\n  isCurrency: false,\r\n  symbol: '',\r\n};\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  onDialogClose?: () => void;\r\n  asset?: Asset | null;\r\n  onSubmit?: (fields: FormFields) => void;\r\n}\r\n\r\n/**\r\n * Add or change asset dialog React function component.\r\n * \r\n * Props:\r\n * - open: Dialog shows if true.\r\n * - onDialogClose: Function called when the dialog requests to be closed.\r\n * - asset: Asset object to edit, null if add new asset.\r\n * - onSubmit: Function called when the add/edit button is pressed.\r\n */\r\nfunction AddEditAssetDialog(props: Readonly<Props>) {\r\n  const { open, asset, onDialogClose, onSubmit } = props;\r\n  const [fields, setFields] = useState(initialFormFields);\r\n\r\n  const handleReset = () => {\r\n    if (asset) {\r\n      setFields({\r\n        name: asset.name,\r\n        ticker: asset.ticker,\r\n        precision: asset.precision,\r\n        pricePrecision: asset.pricePrecision,\r\n        isCurrency: asset.isCurrency,\r\n        symbol: asset.symbol ?? '',\r\n      });\r\n    } else {\r\n      setFields(initialFormFields);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AddEditDialog\r\n      objectName={'Asset'}\r\n      edit={Boolean(asset)}\r\n      open={open}\r\n      onClose={onDialogClose}\r\n      onEnter={handleReset}\r\n      onReset={handleReset}\r\n      onSubmit={() => onSubmit?.(fields)}\r\n      contentMaxWidth=\"30rem\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            type=\"text\"\r\n            label=\"Asset Name\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={fields.name}\r\n            onChange={(e) => setFields(s => ({...s, name: e.target.value}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <TextField\r\n            type=\"text\"\r\n            label=\"Ticker\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={fields.ticker}\r\n            onChange={(e) => setFields(s => ({...s, ticker: e.target.value}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <TextField\r\n            type=\"text\"\r\n            label=\"Symbol\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            value={fields.symbol}\r\n            onChange={(e) => setFields(s => ({...s, symbol: e.target.value}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <FormControlLabel\r\n            control={<Checkbox />}\r\n            checked={fields.isCurrency}\r\n            onChange={(e, checked) => setFields(s => ({...s, isCurrency: checked}))}\r\n            label=\"Currency\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            type=\"number\"\r\n            label=\"Precision\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={fields.precision}\r\n            onChange={(e) => setFields(s => ({...s, precision: parseInt(e.target.value)}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            type=\"number\"\r\n            label=\"Price Precision\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={fields.pricePrecision}\r\n            onChange={(e) => setFields(s => ({...s, pricePrecision: parseInt(e.target.value)}))}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </AddEditDialog>\r\n  );\r\n}\r\n\r\nexport default AddEditAssetDialog;","import clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\ninterface Props {\r\n  className?: string;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n    paddingLeft: theme.spacing(4),\r\n    paddingRight: theme.spacing(4),\r\n  },\r\n}));\r\n\r\n/**\r\n * React component. A visual wrapper for a settings section, put contents as children.\r\n */\r\nfunction SettingsSection(props: Props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper component=\"section\" elevation={0} variant=\"outlined\" className={clsx(classes.root, props.className)}>\r\n      { props.children }\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default SettingsSection;","import { PropTypes } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Variant } from '@material-ui/core/styles/createTypography';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\ninterface Props {\r\n  title: string;\r\n  icon: JSX.Element;\r\n  variant?: Variant;\r\n  gutterBottom?: boolean;\r\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\r\n  buttonColor?: PropTypes.Color;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    marginLeft: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(0.5),\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n/**\r\n * A React component. A heading with an icon button on the right.\r\n * \r\n * Props:\r\n * - title: The title.\r\n * - variant: The variant for the Typography component. Default \"h6\".\r\n * - gutterBottom: Add margin to the Typography component.\r\n * - icon: The icon component.\r\n * - buttonColor: The color of the IconButton component.\r\n * - onClick: Callback when the icon button is clicked.\r\n */\r\nfunction IconButtonHeading({variant = 'h6', ...props}: Props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Typography variant={variant} gutterBottom={props.gutterBottom}>\r\n      { props.title }\r\n      <IconButton size=\"small\" onClick={props.onClick} color={props.buttonColor} className={classes.button}>\r\n        { props.icon }\r\n      </IconButton>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default IconButtonHeading;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddEditAssetDialog, { FormFields } from './AddEditAssetDialog';\r\nimport SettingsSection from '../../components/SettingsSection';\r\nimport IconButtonHeading from '../../components/IconButtonHeading';\r\nimport { changeAccountingCurrency, selectActiveAccountAccountingCurrency } from './accountsSlice';\r\n\r\nfunction AccountMainSettings() {\r\n  const [accountingCurrencyDialogOpen, setAccountingCurrencyDialogOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const accountingCurrency = useSelector(selectActiveAccountAccountingCurrency);\r\n\r\n  const handleChangeAccountingCurrency = (fields: FormFields) => {\r\n    dispatch(changeAccountingCurrency({currency: fields}));\r\n    setAccountingCurrencyDialogOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SettingsSection>\r\n        <IconButtonHeading\r\n          variant=\"h6\"\r\n          gutterBottom\r\n          title={'Accounting Currency'}\r\n          icon={<EditIcon fontSize=\"small\" />}\r\n          onClick={() => setAccountingCurrencyDialogOpen(true)}\r\n        />\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell align=\"center\">Ticker</TableCell>\r\n                <TableCell align=\"center\">Precision</TableCell>\r\n                <TableCell align=\"center\">Price Precision</TableCell>\r\n                <TableCell align=\"center\">Currency</TableCell>\r\n                <TableCell align=\"center\">Symbol</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell>{ accountingCurrency?.name }</TableCell>\r\n                <TableCell align=\"center\">{ accountingCurrency?.ticker }</TableCell>\r\n                <TableCell align=\"center\">{ accountingCurrency?.precision }</TableCell>\r\n                <TableCell align=\"center\">{ accountingCurrency?.pricePrecision }</TableCell>\r\n                <TableCell align=\"center\">{ accountingCurrency?.isCurrency ? 'Yes' : 'No' }</TableCell>\r\n                <TableCell align=\"center\">{ accountingCurrency?.symbol }</TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </SettingsSection>\r\n      <AddEditAssetDialog\r\n        open={accountingCurrencyDialogOpen}\r\n        onDialogClose={() => setAccountingCurrencyDialogOpen(false)}\r\n        asset={accountingCurrency}\r\n        onSubmit={handleChangeAccountingCurrency}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AccountMainSettings;","import { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\ninterface Props {\r\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\r\n  disabled?: boolean;\r\n  buttonSize?: 'small' | 'medium';\r\n  iconSize?: 'small' | 'inherit' | 'default' | 'large';\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    color: theme.palette.error.main,\r\n  },\r\n}));\r\n\r\nfunction DeleteButton(props: Props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <IconButton\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n      size={props.buttonSize}\r\n      className={classes.root}\r\n      aria-label=\"Delete\"\r\n    >\r\n      <DeleteIcon fontSize={props.iconSize} />\r\n    </IconButton>\r\n  );\r\n}\r\n\r\nexport default DeleteButton;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SettingsSection from '../../components/SettingsSection';\r\nimport IconButtonHeading from '../../components/IconButtonHeading';\r\nimport DeleteButton from '../../components/DeleteButton';\r\nimport AddEditAssetDialog, { FormFields } from './AddEditAssetDialog';\r\nimport { addAsset, editAsset, deleteAsset, selectActiveAccountAssets } from './accountsSlice';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tableRow: {\r\n    cursor: 'pointer',\r\n  },\r\n}));\r\n\r\nfunction AccountAssetsSettings() {\r\n  const classes = useStyles();\r\n  const [addEditAssetDialogOpen, setAddEditAssetDialogOpen] = useState(false);\r\n  // Index of the Asset to edit when the edit asset button is clicked, set to -1 to add new asset\r\n  const [selectedAsset, setSelectedAsset] = useState(-1);\r\n  const dispatch = useDispatch();\r\n  const assets = useSelector(selectActiveAccountAssets);\r\n\r\n  const openAddAssetDialog = () => {\r\n    setSelectedAsset(-1);\r\n    setAddEditAssetDialogOpen(true);\r\n  };\r\n\r\n  const openEditAssetDialog = (index: number) => {\r\n    setSelectedAsset(index);\r\n    setAddEditAssetDialogOpen(true);\r\n  }\r\n\r\n  const handleAddEditAsset = (fields: FormFields) => {\r\n    if (selectedAsset < 0) {\r\n      dispatch(addAsset({asset: fields}));\r\n    } else {\r\n      dispatch(editAsset({index: selectedAsset, asset: fields}));\r\n    }\r\n    setAddEditAssetDialogOpen(false);\r\n  };\r\n\r\n  const handleDeleteAsset = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, index: number) => {\r\n    dispatch(deleteAsset({index: index}));\r\n    e.stopPropagation();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SettingsSection>\r\n        <IconButtonHeading\r\n          variant=\"h6\"\r\n          gutterBottom\r\n          title={'Assets'}\r\n          icon={<AddIcon fontSize=\"small\" />}\r\n          onClick={openAddAssetDialog}\r\n        />\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell align=\"center\">Ticker</TableCell>\r\n                <TableCell align=\"center\">Precision</TableCell>\r\n                <TableCell align=\"center\">Price Precision</TableCell>\r\n                <TableCell align=\"center\">Currency</TableCell>\r\n                <TableCell align=\"center\">Symbol</TableCell>\r\n                <TableCell align=\"center\"></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {assets.map((a, i) =>\r\n                <TableRow hover className={classes.tableRow} onClick={() => openEditAssetDialog(i)} key={i}>\r\n                  <TableCell>{ a.name }</TableCell>\r\n                  <TableCell align=\"center\">{ a.ticker }</TableCell>\r\n                  <TableCell align=\"center\">{ a.precision }</TableCell>\r\n                  <TableCell align=\"center\">{ a.pricePrecision }</TableCell>\r\n                  <TableCell align=\"center\">{ a.isCurrency ? 'Yes' : 'No' }</TableCell>\r\n                  <TableCell align=\"center\">{ a.symbol }</TableCell>\r\n                  <TableCell align=\"center\" size=\"small\">\r\n                    <DeleteButton onClick={e => handleDeleteAsset(e, i)} />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </SettingsSection>\r\n      <AddEditAssetDialog\r\n        open={addEditAssetDialogOpen}\r\n        onDialogClose={() => setAddEditAssetDialogOpen(false)}\r\n        asset={assets[selectedAsset]}\r\n        onSubmit={handleAddEditAsset}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AccountAssetsSettings;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Box from '@material-ui/core/Box';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport AddEditJournalDialog from './AddEditJournalDialog';\r\nimport AddEditJournalColumnDialog from './AddEditJournalColumnDialog';\r\nimport EditJournalColumnOrderDialog from './EditJournalColumnOrderDialog';\r\nimport SettingsSection from '../../components/SettingsSection';\r\nimport IconButtonHeading from '../../components/IconButtonHeading';\r\nimport DeleteButton from '../../components/DeleteButton';\r\nimport { deleteJournal, deleteJournalColumn, selectActiveAccountJournals } from './accountsSlice';\r\nimport { Journal, JournalColumn, JournalColumnRole, journalColumnRoleDisplay } from '../../models/account';\r\n\r\ninterface JournalColumnRowProps {\r\n  role: JournalColumnRole;\r\n  journalIndex: number;\r\n  journalColumn: JournalColumn;\r\n  onClick?: React.MouseEventHandler<HTMLTableRowElement>;\r\n}\r\n\r\nconst useJournalColumnRowStyles = makeStyles(theme => ({\r\n  root: {\r\n    cursor: 'pointer',\r\n  },\r\n}));\r\n\r\nfunction JournalColumnRow(props: JournalColumnRowProps) {\r\n  const classes = useJournalColumnRowStyles();\r\n  const { role, journalIndex, journalColumn, onClick } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDeleteColumn = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    if (typeof role === 'number') {\r\n      dispatch(deleteJournalColumn({journalIndex: journalIndex, columnIndex: role}));\r\n    }\r\n    e.stopPropagation();\r\n  };\r\n\r\n  return (\r\n    <TableRow hover onClick={onClick} className={classes.root}>\r\n      <TableCell>{ journalColumnRoleDisplay(role) }</TableCell>\r\n      <TableCell>{ journalColumn.name }</TableCell>\r\n      <TableCell>{ journalColumn.type }</TableCell>\r\n      <TableCell align=\"center\">\r\n        {journalColumn.type === 'decimal' && (\r\n          Object.keys(journalColumn.precision).length === 0 ?\r\n            'Default' :\r\n            `${Object.keys(journalColumn.precision).length} mapping(s)`\r\n        )}\r\n      </TableCell>\r\n      <TableCell align=\"center\">{ journalColumn.type === 'date' && (journalColumn.showTime ? 'Yes' : 'No') }</TableCell>\r\n      <TableCell align=\"center\">{ journalColumn.hide ? 'Yes' : 'No' }</TableCell>\r\n      <TableCell align=\"center\">\r\n        <DeleteButton\r\n          buttonSize=\"small\"\r\n          iconSize=\"small\"\r\n          disabled={typeof role !== 'number'}\r\n          onClick={handleDeleteColumn}\r\n        />\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n\r\ninterface JournalRowProps {\r\n  index: number;\r\n  journal: Journal;\r\n  onClick?: React.MouseEventHandler<HTMLTableRowElement>;\r\n  onAddColumn?: React.MouseEventHandler<HTMLButtonElement>;\r\n  onEditColumn?: (role: JournalColumnRole) => void;\r\n  onEditColumnOrder?: React.MouseEventHandler<HTMLButtonElement>;\r\n}\r\n\r\nconst useJournalRowStyles = makeStyles(theme => ({\r\n  mainRow: {\r\n    cursor: 'pointer',\r\n    '& > *': {                // select all children\r\n      borderBottom: 'none',   // remove the bottom border of the TableCell children\r\n    },\r\n  },\r\n  collapsibleCell: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n  columnOrderChip: {\r\n    marginRight: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\n/**\r\n * React component.\r\n * \r\n * Props:\r\n * - journal: The journal object of the row.\r\n * - index: The index of the journal in the account.\r\n * - onAddColumn: Callback when requested to add a new column.\r\n * - onEditColumn: Callback when requested to edit a column. Signature is (role).\r\n * - onEditColumnOrder: Callback when requested to edit the column order.\r\n * - onClick: Callback when the row is clicked.\r\n */\r\nfunction JournalRow(props: JournalRowProps) {\r\n  const classes = useJournalRowStyles();\r\n  const { journal, index, onAddColumn, onEditColumn, onEditColumnOrder, onClick } = props;\r\n  const [open, setOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const expandRow = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    setOpen(s => !s);\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const handleDeleteJournal = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    dispatch(deleteJournal({index: index}));\r\n    e.stopPropagation();\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow hover onClick={onClick} className={classes.mainRow}>\r\n        <TableCell>{journal.name}</TableCell>\r\n        <TableCell align=\"center\">{journal.type}</TableCell>\r\n        <TableCell align=\"center\" size=\"small\">\r\n          <IconButton aria-label=\"Expand row\" onClick={expandRow}>\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell align=\"center\" size=\"small\">\r\n          <DeleteButton onClick={handleDeleteJournal} />\r\n        </TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell colSpan={4} className={classes.collapsibleCell}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <IconButtonHeading\r\n                variant=\"h6\"\r\n                title={'Columns'}\r\n                icon={<AddIcon fontSize=\"small\" />}\r\n                onClick={onAddColumn}\r\n              />\r\n              <Table size=\"small\" aria-label=\"Journal columns\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Role</TableCell>\r\n                    <TableCell>Name</TableCell>\r\n                    <TableCell>Type</TableCell>\r\n                    <TableCell align=\"center\">Precision</TableCell>\r\n                    <TableCell align=\"center\">Show Time</TableCell>\r\n                    <TableCell align=\"center\">Hide</TableCell>\r\n                    <TableCell align=\"center\"></TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {Object.entries(journal.columns).map(([role, column]: [string, JournalColumn]) =>\r\n                    role !== 'extra' && <JournalColumnRow\r\n                      role={role as JournalColumnRole}\r\n                      journalIndex={index}\r\n                      journalColumn={column}\r\n                      onClick={() => onEditColumn?.(role as JournalColumnRole)}\r\n                      key={role}\r\n                    />\r\n                  )}\r\n                  {journal.columns.extra.map((column, colIndex: number) =>\r\n                    <JournalColumnRow\r\n                      role={colIndex}\r\n                      journalIndex={index}\r\n                      journalColumn={column}\r\n                      onClick={() => onEditColumn?.(colIndex)}\r\n                      key={colIndex}\r\n                    />\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n              <Box mt={1}>\r\n                <IconButtonHeading\r\n                  variant=\"h6\"\r\n                  title={'Column Order'}\r\n                  icon={<EditIcon fontSize=\"small\" />}\r\n                  onClick={onEditColumnOrder}\r\n                />\r\n                <Box display=\"flex\" flexWrap=\"wrap\">\r\n                  {journal.columnOrder.map(c =>\r\n                    <Chip label={journalColumnRoleDisplay(c)} className={classes.columnOrderChip} key={c} />\r\n                  )}\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n/**\r\n * See https://material-ui.com/components/tables/#collapsible-table.\r\n */\r\nfunction AccountJournalsSettings() {\r\n  const [addEditJournalDialogOpen, setAddEditJournalDialogOpen] = useState(false);\r\n  const [addEditJournalColumnDialogOpen, setAddEditJournalColumnDialogOpen] = useState(false);\r\n  const [editJournalColumnOrderDialogOpen, setEditJournalColumnOrderDialogOpen] = useState(false);\r\n  // Index of the Journal to edit when editing a journal setting. Set to -1 to add new journal.\r\n  const [selectedJournal, setSelectedJournal] = useState(-1);\r\n  // The \"role\" of the Journal Column to edit. Set to null to add new journal column.\r\n  const [selectedJournalColumn, setSelectedJournalColumn] = useState<JournalColumnRole | null>(null);\r\n  const journals = useSelector(selectActiveAccountJournals);\r\n\r\n  const openAddJournalDialog = () => {\r\n    setSelectedJournal(-1);\r\n    setAddEditJournalDialogOpen(true);\r\n  };\r\n\r\n  const openEditJournalDialog = (index: number) => {\r\n    setSelectedJournal(index);\r\n    setAddEditJournalDialogOpen(true);\r\n  };\r\n\r\n  const openAddColumnDialog = (index: number) => {\r\n    setSelectedJournal(index);\r\n    setSelectedJournalColumn(null);\r\n    setAddEditJournalColumnDialogOpen(true);\r\n  };\r\n\r\n  const openEditColumnDialog = (index: number, role: JournalColumnRole) => {\r\n    setSelectedJournal(index);\r\n    setSelectedJournalColumn(role);\r\n    setAddEditJournalColumnDialogOpen(true);\r\n  };\r\n\r\n  const openEditColumnOrderDialog = (index: number) => {\r\n    setSelectedJournal(index);\r\n    setEditJournalColumnOrderDialogOpen(true);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SettingsSection>\r\n        <IconButtonHeading\r\n          variant=\"h6\"\r\n          title={'Journals'}\r\n          icon={<AddIcon fontSize=\"small\" />}\r\n          onClick={openAddJournalDialog}\r\n        />\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell align=\"center\">Type</TableCell>\r\n                <TableCell align=\"center\">Columns</TableCell>\r\n                <TableCell align=\"center\"></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {journals.map((j, i) =>\r\n                <JournalRow\r\n                  journal={j}\r\n                  index={i}\r\n                  onClick={() => openEditJournalDialog(i)}\r\n                  onAddColumn={() => openAddColumnDialog(i)}\r\n                  onEditColumn={role => openEditColumnDialog(i, role)}\r\n                  onEditColumnOrder={() => openEditColumnOrderDialog(i)}\r\n                  key={i}\r\n                />\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </SettingsSection>\r\n      <AddEditJournalDialog\r\n        open={addEditJournalDialogOpen}\r\n        onDialogClose={() => setAddEditJournalDialogOpen(false)}\r\n        journal={selectedJournal}\r\n      />\r\n      <AddEditJournalColumnDialog\r\n        open={addEditJournalColumnDialogOpen}\r\n        onDialogClose={() => setAddEditJournalColumnDialogOpen(false)}\r\n        journal={selectedJournal}\r\n        role={selectedJournalColumn}\r\n      />\r\n      <EditJournalColumnOrderDialog\r\n        open={editJournalColumnOrderDialogOpen}\r\n        onDialogClose={() => setEditJournalColumnOrderDialogOpen(false)}\r\n        journal={selectedJournal}\r\n        displayRoleDefault\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AccountJournalsSettings;","import Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AccountMainSettings from './AccountMainSettings';\r\nimport AccountAssetsSettings from './AccountAssetsSettings';\r\nimport AccountJournalsSettings from './AccountJournalsSettings';\r\n\r\nfunction AccountSettings() {\r\n  return (\r\n    <Container>\r\n      <Box my={2}>\r\n        <Typography variant=\"h4\">Account Settings</Typography>\r\n      </Box>\r\n      <Box my={2}>\r\n        <AccountMainSettings />\r\n      </Box>\r\n      <Box my={2}>\r\n        <AccountAssetsSettings />\r\n      </Box>\r\n      <Box my={2}>\r\n        <AccountJournalsSettings />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AccountSettings;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TopAppBar from './features/navigation/TopAppBar';\r\nimport SideDrawer from './features/navigation/SideDrawer';\r\nimport Journals from './features/journals/Journals';\r\nimport { addDefaultAccount } from './features/accounts/accountsSlice';\r\nimport CapitalChanges from './features/capital-changes/CapitalChanges';\r\nimport AssetStatements from './features/asset-statements/AssetStatements';\r\nimport AccountSettings from './features/accounts/AccountSettings';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      drawerOpen: false,\r\n    };\r\n\r\n    this.openDrawer = this.openDrawer.bind(this);\r\n    this.closeDrawer = this.closeDrawer.bind(this);\r\n  }\r\n\r\n  openDrawer() {\r\n    this.setState({drawerOpen: true});\r\n  }\r\n\r\n  closeDrawer() {\r\n    this.setState({drawerOpen: false});\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Init with test data\r\n    this.props.dispatch(addDefaultAccount('Coinbase'));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Box display=\"flex\">\r\n        <TopAppBar\r\n          onMenuClick={this.openDrawer}\r\n          drawerOpen={this.state.drawerOpen}\r\n        />\r\n        <aside>\r\n          <SideDrawer open={this.state.drawerOpen} onClose={this.closeDrawer} />\r\n        </aside>\r\n        <Box component=\"main\" flexGrow={1}>\r\n          {/* Spacing with (height = top app bar height) so content is not clipped by the fixed app bar */}\r\n          <Toolbar />\r\n          <Switch>\r\n            <Route path=\"/journals\">\r\n              <Journals />\r\n            </Route>\r\n            <Route path=\"/capital-changes\">\r\n              <CapitalChanges />\r\n            </Route>\r\n            <Route path=\"/asset-statements\">\r\n              <AssetStatements />\r\n            </Route>\r\n            <Route path=\"/account-settings\">\r\n              <AccountSettings />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Journals />\r\n            </Route>\r\n          </Switch>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(App);","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport type { RootState } from '../../app/store';\r\n\r\ninterface State {\r\n  user: string;\r\n}\r\n\r\nconst initialState: State = {\r\n  user: 'New User',\r\n}\r\n\r\nexport const navigationSlice = createSlice({\r\n  name: 'navigation',\r\n  initialState: initialState,\r\n  reducers: {\r\n    changeUser: (state, action: PayloadAction<string>) => {\r\n      state.user = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// Actions\r\nexport const { changeUser } = navigationSlice.actions;\r\n\r\n// Selectors\r\nexport const selectUser = (state: RootState) => state.navigation.user;\r\n\r\nexport default navigationSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport navigationReducer from '../features/navigation/navigationSlice';\r\nimport accountsReducer from '../features/accounts/accountsSlice';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    navigation: navigationReducer,\r\n    accounts: accountsReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n// TODO: change to Browser router, deploy on another site.\r\n// import { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CssBaseline />\r\n    <Provider store={store}>\r\n      {/* Use HashRouter only for GitHub Pages */}\r\n      {/* <Router basename={process.env.PUBLIC_URL}> */}\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}