{"version":3,"sources":["models/Account.js","features/accounts/accountsSlice.js","constants.js","features/navigation/TopAppBar.js","features/navigation/SideDrawer.js","components/AddEditDialog.js","features/journals/AddEditTransactionDialog.js","features/journals/TransactionSheet.js","features/journals/AddTransactionTypeForm.js","features/journals/Journals.js","features/capital-changes/CapitalChanges.js","features/asset-statements/AssetStatements.js","features/accounts/AddEditAssetDialog.js","components/SettingsSection.js","components/IconButtonHeading.js","features/accounts/AccountMainSettings.js","features/accounts/AccountAssetsSettings.js","features/accounts/AddEditJournalDialog.js","features/accounts/AddEditJournalColumnDialog.js","features/accounts/EditJournalColumnOrderDialog.js","features/accounts/AccountJournalsSettings.js","features/accounts/AccountSettings.js","App.js","features/navigation/navigationSlice.js","app/store.js","reportWebVitals.js","index.js"],"names":["defaultColumnOrder","defaultAccountSettings","accountingCurrency","asset","accountSettings","defaultAssets","defaultJournals","journal","transaction","tradingColumns","expenseColumns","ticker","name","precision","pricePrecision","isCurrency","symbol","date","base","baseAmount","quote","quoteAmount","feeBase","feeQuote","notes","misc","journalColumnSet","price","extra","dateTimeFormat","journalColumn","undefined","incomeColumns","type","hide","transactions","columns","columnOrder","tradingJournal","accountsSlice","createSlice","initialState","accounts","activeAccount","reducers","changeAccount","state","action","accountIndex","parseInt","payload","Math","max","addAccount","push","console","warn","addDefaultAccount","String","settings","assets","journals","account","addTransaction","changeAccountingCurrency","currency","addAsset","editAsset","index","addJournal","newJournal","incomeJournal","expenseJournal","editJournal","journalIndex","addJournalColumn","column","editJournalColumn","columnRole","slice","split","editJournalColumnOrder","actions","selectAccounts","selectActiveAccountIndex","selectActiveAccount","length","selectActiveAccountName","selectActiveAccountJournals","drawerWidth","useStyles","makeStyles","theme","root","menuButton","marginRight","spacing","display","props","drawerOpen","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarDrawerOpen","marginLeft","width","enteringScreen","TopAppBar","classes","useState","menuAnchor","setMenuAnchor","dispatch","useDispatch","useSelector","activeAccountIndex","activeAccountName","handleChangeAccount","e","Fragment","AppBar","position","className","clsx","Toolbar","IconButton","onClick","onMenuClick","color","aria-label","Typography","variant","currentTarget","aria-haspopup","Menu","anchorEl","open","Boolean","onClose","map","a","MenuItem","selected","toolbar","alignItems","justifyContent","padding","mixins","whiteSpace","drawerClose","overflowX","breakpoints","up","SideDrawer","path","useLocation","pathname","Drawer","anchor","paper","Divider","List","component","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","ListSubheader","inset","disableSticky","content","maxWidth","contentMaxWidth","AddEditDialog","Dialog","onEnter","DialogTitle","edit","objectName","DialogContent","dividers","children","DialogActions","Button","onReset","onSubmit","getCurrentLocalDateTime","currentDateTime","Date","getTimezoneOffset","toISOString","AddEditTransactionDialog","trade","fee","feeCurrency","fields","setFields","resetForm","onDialogClose","preventDefault","Grid","container","item","xs","TextField","size","label","required","value","onChange","s","target","InputLabelProps","shrink","fullWidth","select","multiline","borderRadius","boxShadow","fab","bottom","right","TransactionSheet","dialogOpen","setDialogOpen","dialogEdit","setDialogEdit","active","role","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","tx","align","Fab","AddTransactionTypeForm","Journals","React","activeTab","setActiveTab","Tabs","v","Tab","icon","CapitalChanges","AssetStatements","AddEditAssetDialog","handleReset","onFieldsChange","FormControlLabel","control","Checkbox","checked","labelPlacement","paddingTop","paddingBottom","paddingLeft","paddingRight","SettingsSection","elevation","marginBottom","IconButtonHeading","gutterBottom","title","buttonColor","AccountMainSettings","accountingCurrencyDialogOpen","setAccountingCurrencyDialogOpen","accountingCurrencyFields","setaccountingCurrencyFields","fontSize","tableRow","cursor","AccountAssetsSettings","addEditAssetDialogOpen","setAddEditAssetDialogOpen","selectedAsset","setSelectedAsset","addEditAssetFields","setAddEditAssetFields","i","hover","AddEditJournalDialog","Box","mt","AddEditJournalColumnDialog","disabled","EditJournalColumnOrderDialog","dialogColumnOrder","setDialogColumnOrder","handleReorderColumn","newIndex","newColumnOrder","splice","c","dense","disableGutters","divider","ListItemSecondaryAction","edge","useJournalColumnRowStyles","JournalColumnRow","useJournalRowStyles","mainRow","borderBottom","collapsibleCell","columnOrderChip","JournalRow","onAddColumn","onEditColumn","onEditColumnOrder","setOpen","stopPropagation","colSpan","Collapse","in","timeout","unmountOnExit","margin","Object","entries","pair","col","flexWrap","Chip","AccountJournalsSettings","addEditJournalDialogOpen","setAddEditJournalDialogOpen","addEditJournalColumnDialogOpen","setAddEditJournalColumnDialogOpen","editJournalColumnOrderDialogOpen","setEditJournalColumnOrderDialogOpen","selectedJournal","setSelectedJournal","selectedJournalColumn","setSelectedJournalColumn","j","openEditColumnDialog","AccountSettings","Container","my","App","openDrawer","bind","closeDrawer","this","setState","Component","withStyles","flexGrow","connect","navigationSlice","user","changeUser","page","configureStore","reducer","navigation","navigationReducer","accountsReducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CssBaseline","store","document","getElementById"],"mappings":"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","file":"static/js/main.2a7d5c4c.chunk.js","sourcesContent":["const defaultColumnOrder = ['date', 'base', 'baseAmount', 'quote', 'quoteAmount', 'price', 'feeBase', 'feeQuote', 'notes'];\r\nconst defaultAccountSettings = accountSettings(\r\n  asset('USD', 'United States Dollar', 2, 4, true, '$'),\r\n);\r\nconst defaultAssets = [\r\n  asset('BTC', 'Bitcoin', 8, 2, true, '₿'),\r\n];\r\nconst defaultJournals = [\r\n  journal(\r\n    'Trading',\r\n    'trading',\r\n    [\r\n      transaction('01/01/2021', 'BTC', 1, 'USD', 50000, 0, 20, 'First transaction'),\r\n      transaction('02/01/2021', 'BTC', 0.5, 'USD', 25000, 0, 10, 'Second transaction'),\r\n    ],\r\n    tradingColumns(),\r\n    defaultColumnOrder,\r\n  ),\r\n  journal(\r\n    'Misc fees',\r\n    'expense',\r\n    [],\r\n    expenseColumns(),\r\n    defaultColumnOrder,\r\n  ),\r\n];\r\n\r\n/**\r\n * Account settings.\r\n * @param {Object} accountingCurrency The accounting currency of the account.\r\n * @returns An object with the given members.\r\n */\r\nexport function accountSettings(accountingCurrency = asset('USD', 'United States Dollar', '$', 2, 4)) {\r\n  return {accountingCurrency};\r\n}\r\n\r\n/**\r\n * Asset settings.\r\n * @param {String} ticker Ticker of the asset, e.g. BTC. This is the unique identifier of an asset.\r\n * @param {String} name Name of the asset, e.g. Bitcoin.\r\n * @param {Number} precision The precision used to record amounts.\r\n * @param {Number} pricePrecision The default precision used to show prices.\r\n * @param {Boolean} isCurrency true if the asset is a currency.\r\n * @param {String} symbol Symbol of the asset, e.g. ₿.\r\n * @returns An object with the given members.\r\n */\r\nexport function asset(ticker, name, precision = 2, pricePrecision = 2, isCurrency = false, symbol = '') {\r\n  return {ticker, name, precision, pricePrecision, isCurrency, symbol};\r\n}\r\n\r\n/**\r\n * A transaction (trade, income or expense).\\\r\n * An income transaction has positive base and quote amounts.\\\r\n * An expense transaction has negative base and no quote amount.\\\r\n * A trade has opposite base and quote amount signs.\r\n * @param {Date} date Date of the transaction.\r\n * @param {String} base Base currency/asset.\r\n * @param {Number} baseAmount Amount of base changed, i.e. amount.\r\n * @param {String} quote Quote currency/asset.\r\n * @param {Number} quoteAmount Amount of quote changed, i.e. total.\r\n * @param {Number} feeBase Fee in base currency.\r\n * @param {Number} feeQuote Fee in quote currency.\r\n * @param {String} notes User written notes.\r\n * @param {Object[]} misc Extra properties, e.g. [{name: 'Exchange', type: 'string', value: 'NYSE'}].\r\n * @returns An object with the given members.\r\n */\r\nexport function transaction(\r\n  date,\r\n  base = 'USD',\r\n  baseAmount = 0,\r\n  quote = 'USD',\r\n  quoteAmount = 0,\r\n  feeBase = 0,\r\n  feeQuote = 0,\r\n  notes = '',\r\n  misc = []\r\n) {\r\n  return {date, base, baseAmount, quote, quoteAmount, feeBase, feeQuote, notes, misc};\r\n}\r\n\r\n/**\r\n * A set of journal columns.\r\n * @param {*} date Date journal column.\r\n * @param {*} base Base journal column.\r\n * @param {*} baseAmount Base amount journal column.\r\n * @param {*} quote Quote journal column.\r\n * @param {*} quoteAmount Quote amount journal column.\r\n * @param {*} price Price journal column.\r\n * @param {*} feeBase Fee in base curreny journal column.\r\n * @param {*} feeQuote Fee in quote curreny journal column.\r\n * @param {*} notes Notes journal column.\r\n * @param {*} extra Extra journal columns.\r\n * @returns An object with the given members.\r\n */\r\nexport function journalColumnSet(date, base, baseAmount, quote, quoteAmount, price, feeBase, feeQuote, notes, extra = []) {\r\n  return {\r\n    date, base, baseAmount, quote, quoteAmount, price, feeBase, feeQuote, notes, extra,\r\n  };\r\n}\r\n\r\nexport function tradingColumns(dateTimeFormat = 'date') {\r\n  return journalColumnSet(\r\n    journalColumn('Date', 'date', false, undefined, dateTimeFormat),\r\n    journalColumn('Asset', 'text', false),\r\n    journalColumn('Amount', 'decimal', false, 8),\r\n    journalColumn('Quote', 'text', true),\r\n    journalColumn('Total', 'decimal', false, 2),\r\n    journalColumn('Price', 'decimal', false, 2),\r\n    journalColumn('Fee (Base)', 'decimal', true, 8),\r\n    journalColumn('Fee', 'decimal', false, 2),\r\n    journalColumn('Notes', 'text', false),\r\n  );\r\n}\r\n\r\nexport function incomeColumns(dateTimeFormat = 'date') {\r\n  return journalColumnSet(\r\n    journalColumn('Date', 'date', false, undefined, dateTimeFormat),\r\n    journalColumn('Asset', 'text', false),\r\n    journalColumn('Amount', 'decimal', false, 2),\r\n    journalColumn('Quote', 'text', true),\r\n    journalColumn('Total', 'decimal', false, 2),\r\n    journalColumn('Price', 'decimal', false, 2),\r\n    journalColumn('Fee (Base)', 'decimal', true, 8),\r\n    journalColumn('Fee', 'decimal', true, 2),\r\n    journalColumn('Notes', 'text', false),\r\n  );\r\n}\r\n\r\nexport function expenseColumns(dateTimeFormat = 'date') {\r\n  return journalColumnSet(\r\n    journalColumn('Date', 'date', false, undefined, dateTimeFormat),\r\n    journalColumn('Asset', 'text', false),\r\n    journalColumn('Amount', 'decimal', false, 2),\r\n    journalColumn('Quote', 'text', true),\r\n    journalColumn('Total', 'decimal', false, 2),\r\n    journalColumn('Price', 'decimal', false, 2),\r\n    journalColumn('Fee (Base)', 'decimal', true, 8),\r\n    journalColumn('Fee', 'decimal', true, 2),\r\n    journalColumn('Notes', 'text', false),\r\n  );\r\n}\r\n\r\n/**\r\n * Journal column settings.\r\n * @param {String} name Name of the column.\r\n * @param {String} type Type of column, one of: 'date', 'text', 'decimal', 'integer'.\r\n * @param {Boolean} hide Hide the column if true.\r\n * @param {Number} precision Precision of the column if the type is 'decimal'.\r\n * @param {String} dateTimeFormat Date time format if the type is 'date', one of: 'date', 'datetime'.\r\n * @returns An object with the given members.\r\n */\r\nexport function journalColumn(name, type, hide = false, precision = 2, dateTimeFormat = 'date') {\r\n  return {name, type, hide, precision, dateTimeFormat};\r\n}\r\n\r\n/**\r\n * A journal for an account.\r\n * @param {String} name Name of the journal.\r\n * @param {String} type Type of the journal, one of: 'trading', 'income', 'expense'.\r\n * @param {Object[]} transactions List of transactions.\r\n * @param {Object} columns Mapping of columns and their settings.\r\n * @param {String[]} columnOrder The shown order of the columns.\r\n * @returns An object with the given members.\r\n */\r\nexport function journal(name, type = 'trading', transactions = [], columns = {}, columnOrder = defaultColumnOrder) {\r\n  return {name, type, transactions, columns, columnOrder};\r\n}\r\n\r\nexport function tradingJournal(name, transactions = [], columnOrder = defaultColumnOrder) {\r\n  return journal(name, 'trading', transactions, tradingColumns(), columnOrder);\r\n}\r\n\r\nexport function incomeJournal(name, transactions = [], columnOrder = defaultColumnOrder) {\r\n  return journal(name, 'income', transactions, incomeColumns(), columnOrder);\r\n}\r\n\r\nexport function expenseJournal(name, transactions = [], columnOrder = defaultColumnOrder) {\r\n  return journal(name, 'expense', transactions, expenseColumns(), columnOrder);\r\n}\r\n\r\n/**\r\n * A trading account.\r\n * @param {String} name Name of the account.\r\n * @param {Object} settings Account settings.\r\n * @param {Object[]} assets Managed assets of the account.\r\n * @param {Object[]} journals List of Transaction journals.\r\n * @returns An object with the given members.\r\n */\r\nexport function account(name, settings = defaultAccountSettings, assets = defaultAssets, journals = defaultJournals,) {\r\n  return {name, settings, assets, journals};\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\nimport { account, tradingJournal, incomeJournal, expenseJournal } from '../../models/Account';\r\n\r\nexport const accountsSlice = createSlice({\r\n  name: 'transactions',\r\n  initialState: {\r\n    accounts: [],       // Array of accounts\r\n    activeAccount: 0,   // Integer\r\n  },\r\n  reducers: {\r\n    /**\r\n     * Change the active account (-1 for all accounts). Receives an index from the payload. Invalid values\r\n     * are evaluated as 0. Negative numbers are evaluated as -1 (all accounts).\r\n     */\r\n    // TODO rename to switchAccount\r\n    changeAccount: (state, action) => {\r\n      const accountIndex = parseInt(action.payload);\r\n      state.activeAccount = accountIndex ? Math.max(accountIndex, -1) : 0;\r\n    },\r\n    addAccount: (state, action) => {\r\n      if (action.payload) {\r\n        state.accounts.push(action.payload);\r\n      } else {\r\n        console.warn(`Attempted to add invalid account: ${action.payload}`);\r\n      }\r\n    },\r\n    addDefaultAccount: (state, action) => {\r\n      const name = action.payload ? String(action.payload) : 'New Account';\r\n      state.accounts.push(account(name));\r\n    },\r\n    addTransaction: (state, action) => {\r\n      // Takes payload: {account: activeAccountIndex, transaction: Tx, journal: journalIndex}\r\n      const account = state.accounts[action.payload.account || state.activeAccount];\r\n      const journal = action.payload.journal;\r\n      const transaction = action.payload.transaction;\r\n      account.journals[journal].transactions.push(transaction);\r\n    },\r\n    /**\r\n     * Changes the accounting currency. Receives payload {account: activeAccountIndex, currency: asset}.\r\n     * Ignores invalid values for currency.\r\n     */\r\n    changeAccountingCurrency: (state, action) => {\r\n      if (action.payload && 'currency' in action.payload) {\r\n        // Updates the active account if no account provided\r\n        const account = state.accounts[action.payload.account || state.activeAccount];\r\n        // TODO: input validation\r\n        account.settings.accountingCurrency = action.payload.currency;\r\n      } else {\r\n        console.warn(`changeAccountingCurrency: 'currency' not in payload`);\r\n      }\r\n    },\r\n    addAsset: (state, action) => {\r\n      if (action.payload && 'asset' in action.payload) {\r\n        // Updates the active account if no account provided\r\n        const account = state.accounts[action.payload.account || state.activeAccount];\r\n        // TODO: input validation\r\n        account.assets.push(action.payload.asset);\r\n      } else {\r\n        console.warn(`addAsset: 'asset' not in payload`);\r\n      }\r\n    },\r\n    editAsset: (state, action) => {\r\n      if (action.payload && 'asset' in action.payload && 'index' in action.payload) {\r\n        // Updates the active account if no account provided\r\n        const account = state.accounts[action.payload.account || state.activeAccount];\r\n        // TODO: input validation\r\n        account.assets[action.payload.index] = action.payload.asset;\r\n      } else {\r\n        console.warn(`editAsset: 'asset' or 'index' not in payload`);\r\n      }\r\n    },\r\n    addJournal: (state, action) => {\r\n      // Payload: {account: int?, journal: Journal (except column settings)}\r\n      // Updates the active account if no account provided\r\n      const account = state.accounts[action.payload.account || state.activeAccount];\r\n      let newJournal;\r\n      switch (action.payload.journal.type) {\r\n        case 'trading':\r\n          newJournal = {...tradingJournal(), ...action.payload.journal};\r\n          break;\r\n        case 'income':\r\n          newJournal = {...incomeJournal(), ...action.payload.journal};\r\n          break;\r\n        case 'expense':\r\n          newJournal = {...expenseJournal(), ...action.payload.journal};\r\n          break;\r\n        default:\r\n          console.warn(`addJournal: Invalid journal type: ${action.payload.journal.type}`);\r\n          newJournal = {...tradingJournal(), ...action.payload.journal};\r\n      }\r\n      account.journals.push(newJournal);\r\n    },\r\n    editJournal: (state, action) => {\r\n      // Payload: {account: int?, journalIndex: int, journal: Journal (except column settings)}\r\n      // Updates the active account if no account provided\r\n      const account = state.accounts[action.payload.account || state.activeAccount];\r\n      let journal = account.journals[action.payload.journalIndex];\r\n      account.journals[action.payload.journalIndex] = {...journal, ...action.payload.journal};\r\n    },\r\n    addJournalColumn: (state, action) => {\r\n      // Payload: {account: int?, journalIndex: int, column: Column}\r\n      // Updates the active account if no account provided\r\n      const account = state.accounts[action.payload.account || state.activeAccount];\r\n      account.journals[action.payload.journalIndex].columns.extra.push(action.payload.column);\r\n    },\r\n    editJournalColumn: (state, action) => {\r\n      // Payload: {account: int?, journalIndex: int, columnRole: String, column: Column}\r\n      // Updates the active account if no account provided\r\n      const { journalIndex, columnRole, column } = action.payload;\r\n      const account = state.accounts[action.payload.account || state.activeAccount];\r\n      if (columnRole.slice(0, 5) === 'extra') {\r\n        // It is an extra column\r\n        account.journals[journalIndex].columns.extra[parseInt(columnRole.split('-')[1])] = column;\r\n      } else {\r\n        // Core column\r\n        account.journals[journalIndex].columns[columnRole] = column;\r\n      }\r\n    },\r\n    editJournalColumnOrder: (state, action) => {\r\n      // Payload: {account: int?, journalIndex: int, columnOrder: String[]}\r\n      if (action.payload && 'journalIndex' in action.payload && 'columnOrder' in action.payload) {\r\n        // Updates the active account if no account provided\r\n        const account = state.accounts[action.payload.account || state.activeAccount];\r\n        account.journals[action.payload.journalIndex].columnOrder = action.payload.columnOrder;\r\n      } else {\r\n        console.warn(`editJournalColumnOrder: 'journalIndex' or 'columnOrder' not in payload`);\r\n      }\r\n    },\r\n  }\r\n});\r\n\r\n// Actions\r\nexport const {\r\n  changeAccount,\r\n  addAccount,\r\n  addDefaultAccount,\r\n  addTransaction,\r\n  changeAccountingCurrency,\r\n  addAsset,\r\n  editAsset,\r\n  addJournal,\r\n  editJournal,\r\n  addJournalColumn,\r\n  editJournalColumn,\r\n  editJournalColumnOrder,\r\n} = accountsSlice.actions;\r\n\r\n// Selectors\r\n// TODO consider selector errors\r\nexport const selectAccounts = state => state.accounts.accounts;\r\nexport const selectActiveAccountIndex = state => state.accounts.activeAccount;\r\nexport const selectActiveAccount = state => {\r\n  const accounts = selectAccounts(state);\r\n  const activeAccount = selectActiveAccountIndex(state);\r\n  return activeAccount < accounts.length ? accounts[activeAccount] : null;\r\n}\r\nexport const selectActiveAccountName = state => {\r\n  const activeAccount = selectActiveAccount(state);\r\n  return activeAccount ? activeAccount.name : 'No account selected';\r\n}\r\nexport const selectActiveAccountAccountingCurrency = state => {\r\n  const activeAccount = selectActiveAccount(state);\r\n  return activeAccount ? activeAccount.settings.accountingCurrency : null;\r\n}\r\nexport const selectActiveAccountAssets = state => {\r\n  const activeAccount = selectActiveAccount(state);\r\n  return activeAccount ? activeAccount.assets : [];\r\n}\r\nexport const selectActiveAccountJournals = state => {\r\n  const activeAccount = selectActiveAccount(state);\r\n  return activeAccount ? activeAccount.journals : [];\r\n}\r\n\r\nexport default accountsSlice.reducer;","export const drawerWidth = '15rem';","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ArrowDropDownCircleIcon from '@material-ui/icons/ArrowDropDownCircle';\r\nimport { selectAccounts, selectActiveAccountIndex, selectActiveAccountName, changeAccount } from '../accounts/accountsSlice';\r\nimport { drawerWidth } from '../../constants';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    display: props => props.drawerOpen ? 'none' : 'initial'\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarDrawerOpen: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth})`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  }\r\n}));\r\n\r\nfunction TopAppBar(props) {\r\n  const classes = useStyles(props);\r\n  // Controls the showing of the \"change account\" menu\r\n  const [menuAnchor, setMenuAnchor] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const accounts = useSelector(selectAccounts);\r\n  const activeAccountIndex = useSelector(selectActiveAccountIndex);\r\n  const activeAccountName = useSelector(selectActiveAccountName);\r\n\r\n  const handleChangeAccount = (index) => (e) => {\r\n    dispatch(changeAccount(index));\r\n    setMenuAnchor(null);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarDrawerOpen]: props.drawerOpen\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            onClick={props.onMenuClick}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">{ activeAccountName }</Typography>\r\n          <IconButton\r\n            onClick={(e) => setMenuAnchor(e.currentTarget)}\r\n            color=\"inherit\"\r\n            aria-label=\"Change account\"\r\n            aria-haspopup=\"true\"\r\n          >\r\n            <ArrowDropDownCircleIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Menu\r\n        anchorEl={menuAnchor}\r\n        open={Boolean(menuAnchor)}\r\n        onClose={() => setMenuAnchor(null)}\r\n      >\r\n        {accounts.map((a, index) => (\r\n          <MenuItem onClick={handleChangeAccount(index)} selected={activeAccountIndex} key={index}>\r\n            { a.name }\r\n          </MenuItem>\r\n        ))}\r\n        <MenuItem>All Accounts</MenuItem>\r\n        <MenuItem>Create New Account</MenuItem>\r\n      </Menu>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TopAppBar;","import { Link, useLocation } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport BookIcon from '@material-ui/icons/Book';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport { drawerWidth } from '../../constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    \r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // Have the same height as the top app bar\r\n    ...theme.mixins.toolbar\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    whiteSpace: 'nowrap',   // Prevent text wrapping when closing the drawer\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerClose: {\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7),\r\n    // Have extra space for the scrollbar if needed\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  }\r\n}));\r\n\r\n/**\r\n * See\r\n * - https://material-ui.com/components/drawers/#mini-variant-drawer\r\n * - https://material-ui.com/api/drawer/\r\n * - https://github.com/mui-org/material-ui/blob/master/docs/src/pages/getting-started/templates/dashboard/Dashboard.js\r\n * - https://material-ui.com/getting-started/templates/dashboard/\r\n */\r\nfunction SideDrawer(props) {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const path = location.pathname;\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      anchor=\"left\"\r\n      classes={{\r\n        paper: clsx({\r\n          [classes.drawerOpen]: props.open,\r\n          [classes.drawerClose]: !props.open\r\n        })\r\n      }}\r\n      className={clsx(classes.drawer, {\r\n        [classes.drawerOpen]: props.open,\r\n        [classes.drawerClose]: !props.open\r\n      })}\r\n    >\r\n      <div className={classes.toolbar}>\r\n        <IconButton onClick={props.onClose}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List component=\"nav\" aria-label=\"Journals\">\r\n        <ListItem\r\n          button\r\n          component={Link}\r\n          to={'/journals'}\r\n          selected={path === '/journals' || path === '/'}\r\n        >\r\n          <ListItemIcon>\r\n            <CreateIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Journals\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          component={Link}\r\n          to={'/capital-changes'}\r\n          selected={path === '/capital-changes'}\r\n        >\r\n          <ListItemIcon>\r\n            <CreateIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Capital changes\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          component={Link}\r\n          to={'/asset-statements'}\r\n          selected={path === '/asset-statements'}\r\n        >\r\n          <ListItemIcon>\r\n            <BookIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Asset Statements\" />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List component=\"nav\" aria-label=\"Financials\">\r\n        <ListSubheader inset disableSticky={true}>Financials</ListSubheader>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <AssignmentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Monthly\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <AssignmentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Quarterly\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <AssignmentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Biyearly\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <AssignmentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Yearly\" />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List component=\"nav\" aria-label=\"Account settings\">\r\n        <ListItem\r\n          button\r\n          component={Link}\r\n          to={'/account-settings'}\r\n          selected={path === '/account-settings'}\r\n        >\r\n          <ListItemIcon>\r\n            <SettingsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Account settings\" />\r\n        </ListItem>\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default SideDrawer;","import { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  content: props => ({\r\n    maxWidth: props.contentMaxWidth,\r\n  }),\r\n}));\r\n\r\n/**\r\n * A dialog to add or edit an object.\r\n * \r\n * Props:\r\n * - objectName: Name of the object to add or edit. Appears in the title.\r\n * - edit: true for edit mode, false for add mode (affects text).\r\n * - open: Dialog shows if true.\r\n * - onClose - Function called when the dialog requests to be closed (cancel button or click away).\r\n * - onEnter - Function called before the dialog is opened.\r\n * - onReset - Function called when the \"reset\" button is clicked.\r\n * - onSubmit - Function called when the \"Add/Edit\" button is clicked.\r\n * - dividers - Display the DialogContent dividers if true.\r\n * - contentMaxWidth - The maximum width of the dialog content.\r\n */\r\nfunction AddEditDialog(props) {\r\n  const classes = useStyles(props);\r\n  return (\r\n    <Dialog open={props.open} onClose={props.onClose} onEnter={props.onEnter}>\r\n      <DialogTitle>{ `${props.edit ? 'Edit' : 'Add'} ${props.objectName || 'Item'}` }</DialogTitle>\r\n      <DialogContent dividers={Boolean(props.dividers)} className={classes.content}>\r\n        { props.children }\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.onClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={props.onReset} color=\"primary\">\r\n          Reset\r\n        </Button>\r\n        <Button onClick={props.onSubmit} color=\"primary\">\r\n          { props.edit ? 'Edit' : 'Add' }\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default AddEditDialog;","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport AddEditDialog from '../../components/AddEditDialog';\r\nimport { addTransaction, selectActiveAccount } from '../accounts/accountsSlice';\r\nimport { transaction } from '../../models/Account';\r\n\r\n/**\r\n * @returns The current local date and time in \"yyyy-mm-ddThh:mm:ss\" format.\r\n */\r\nfunction getCurrentLocalDateTime() {\r\n  const currentDateTime = new Date();\r\n  return new Date(currentDateTime - currentDateTime.getTimezoneOffset() * 60 * 1000).toISOString().slice(0, 19);\r\n}\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n\r\n//   },\r\n// }));\r\n\r\nfunction AddEditTransactionDialog(props) {\r\n  // const classes = useStyles();\r\n  const [fields, setFields] = useState({\r\n    date: '',\r\n    base: '',\r\n    quote: '',\r\n    trade: '',\r\n    baseAmount: '',\r\n    quoteAmount: '',\r\n    price: '',\r\n    fee: '',\r\n    feeCurrency: '',\r\n    notes: '',\r\n  });\r\n  const dispatch = useDispatch();\r\n  const account = useSelector(selectActiveAccount);\r\n\r\n  const resetForm = () => {\r\n    setFields({\r\n      date: getCurrentLocalDateTime(),\r\n      base: '',\r\n      quote: account ? account.settings.accountingCurrency.ticker : '',\r\n      trade: 'buy',\r\n      baseAmount: '',\r\n      quoteAmount: '',\r\n      price: 0,\r\n      fee: 0,\r\n      feeCurrency: 'quote',\r\n      notes: '',\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // TODO input validation\r\n    dispatch(addTransaction({\r\n      journal: props.index,\r\n      transaction: transaction(\r\n        fields.date,\r\n        fields.base,\r\n        fields.baseAmount,\r\n        fields.quote,\r\n        fields.quoteAmount,\r\n        0,\r\n        fields.fee,\r\n        fields.notes,\r\n      ),\r\n    }));\r\n    props.onDialogClose();\r\n  };\r\n  const handleDialogOpen = () => {\r\n    // Init form fields according to add or edit mode\r\n    if (props.edit) {\r\n      \r\n    } else {\r\n      resetForm();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AddEditDialog\r\n      objectName={'Transaction'}\r\n      edit={Boolean(props.edit)}\r\n      open={props.open}\r\n      onClose={props.onDialogClose}\r\n      onEnter={handleDialogOpen}\r\n      onReset={resetForm}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            type=\"datetime-local\"\r\n            size=\"small\"\r\n            label=\"Date\"\r\n            required\r\n            value={fields.date}\r\n            onChange={(e) => setFields(s => ({...s, date: e.target.value}))}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <TextField\r\n            type=\"number\"\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Amount\"\r\n            required\r\n            value={fields.baseAmount}\r\n            onChange={(e) => setFields(s => ({...s, baseAmount: e.target.value}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            select\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Asset\"\r\n            required\r\n            value={fields.base}\r\n            onChange={(e) => setFields(s => ({...s, base: e.target.value}))}\r\n          >\r\n            <MenuItem value={'USD'}>{ 'USD' }</MenuItem>\r\n            <MenuItem value={'BTC'}>{ 'BTC' }</MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <TextField\r\n            type=\"number\"\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Total\"\r\n            required\r\n            value={fields.quoteAmount}\r\n            onChange={(e) => setFields(s => ({...s, quoteAmount: e.target.value}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            select\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Quote Currency\"\r\n            required\r\n            value={fields.quote}\r\n            onChange={(e) => setFields(s => ({...s, quote: e.target.value}))}\r\n          >\r\n            <MenuItem value={'USD'}>{ 'USD' }</MenuItem>\r\n            <MenuItem value={'BTC'}>{ 'BTC' }</MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <TextField\r\n            type=\"number\"\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Price\"\r\n            required\r\n            value={fields.price}\r\n            onChange={(e) => setFields(s => ({...s, price: e.target.value}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            select\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Trade Type\"\r\n            required\r\n            value={fields.trade}\r\n            onChange={(e) => setFields(s => ({...s, trade: e.target.value}))}\r\n          >\r\n            <MenuItem value={'buy'}>{ 'Buy' }</MenuItem>\r\n            <MenuItem value={'sell'}>{ 'Sell' }</MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <TextField\r\n            type=\"number\"\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Fee\"\r\n            value={fields.fee}\r\n            onChange={(e) => setFields(s => ({...s, fee: e.target.value}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            select\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Fee Currency\"\r\n            value={fields.feeCurrency}\r\n            onChange={(e) => setFields(s => ({...s, feeCurrency: e.target.value}))}\r\n          >\r\n            <MenuItem value={'base'}>{ 'Base' }</MenuItem>\r\n            <MenuItem value={'quote'}>{ 'Quote' }</MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            multiline\r\n            fullWidth\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            label=\"Notes\"\r\n            value={fields.notes}\r\n            onChange={(e) => setFields(s => ({...s, notes: e.target.value}))}\r\n          >\r\n            <MenuItem value={'base'}>{ 'Base' }</MenuItem>\r\n            <MenuItem value={'quote'}>{ 'Quote' }</MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n      </Grid>\r\n    </AddEditDialog>\r\n  );\r\n}\r\n\r\nexport default AddEditTransactionDialog;","\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AddEditTransactionDialog from './AddEditTransactionDialog';\r\nimport { selectActiveAccount } from '../accounts/accountsSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    borderRadius: 0,\r\n    boxShadow: 'none',\r\n  },\r\n\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction TransactionSheet(props) {\r\n  const classes = useStyles();\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [dialogEdit, setDialogEdit] = useState(false);\r\n  // const account = useSelector(selectActiveAccountObject);\r\n\r\n  const openAddDialog = () => {\r\n    setDialogEdit(false);\r\n    setDialogOpen(true);\r\n  };\r\n  const openEditDialog = (tx) => {\r\n    setDialogEdit(true);\r\n    setDialogOpen(true);\r\n  };\r\n\r\n  return props.active && (\r\n    <div role=\"tabpanel\">\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table\r\n          size={'small'}\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>{ props.journal.columns.date.name }</TableCell>\r\n              <TableCell>{ props.journal.columns.base.name }</TableCell>\r\n              <TableCell>{ props.journal.columns.quote.name }</TableCell>\r\n              <TableCell>{ props.journal.columns.baseAmount.name }</TableCell>\r\n              <TableCell>{ props.journal.columns.quoteAmount.name }</TableCell>\r\n              <TableCell>{ props.journal.columns.price.name }</TableCell>\r\n              <TableCell>{ props.journal.columns.notes.name }</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {props.journal.transactions.map((tx, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell align=\"right\">{tx.date}</TableCell>\r\n                <TableCell align=\"right\">{tx.base}</TableCell>\r\n                <TableCell align=\"right\">{tx.quote}</TableCell>\r\n                <TableCell align=\"right\">{tx.baseAmount}</TableCell>\r\n                <TableCell align=\"right\">{tx.quoteAmount}</TableCell>\r\n                <TableCell align=\"right\">{tx.quoteAmount / tx.baseAmount}</TableCell>\r\n                <TableCell>{tx.notes}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Fab color=\"secondary\" className={classes.fab} onClick={() => openAddDialog()}>\r\n        <AddIcon />\r\n      </Fab>\r\n      <AddEditTransactionDialog\r\n        journal={props.journal}\r\n        index={props.index}\r\n        open={dialogOpen}\r\n        edit={dialogEdit}\r\n        onDialogClose={() => setDialogOpen(false)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default TransactionSheet;","import Typography from '@material-ui/core/Typography';\r\n\r\nfunction AddTransactionTypeForm(props) {\r\n\r\n  return props.active && (\r\n    <div role=\"tabpanel\">\r\n      <Typography variant=\"h3\">Add Transaction Type</Typography>\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default AddTransactionTypeForm;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TransactionSheet from './TransactionSheet';\r\nimport AddTransactionTypeForm from './AddTransactionTypeForm';\r\nimport { selectActiveAccount } from '../accounts/accountsSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // flexGrow: 1,\r\n    // backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nfunction Journals(props) {\r\n  const classes = useStyles();\r\n  const account = useSelector(selectActiveAccount);\r\n  const dispatch = useDispatch();\r\n  const journals = account ? account.journals : [];\r\n  const [activeTab, setActiveTab] = React.useState(0);\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={activeTab} onChange={(e, v) => setActiveTab(v)} aria-label=\"Journals tab\">\r\n          {/* TODO update key */}\r\n          {/* TODO aria labels */}\r\n          {journals.map((journal, index) =>\r\n            <Tab label={journal['name']} key={index} />\r\n          )}\r\n          <Tab icon={<AddIcon />} />\r\n        </Tabs>\r\n      </AppBar>\r\n      {/* TODO update key */}\r\n      {journals.map((journal, index) =>\r\n        <TransactionSheet journal={journal} index={index} active={activeTab === index} key={index} />\r\n      )}\r\n      <AddTransactionTypeForm\r\n        index={journals.length}\r\n        active={activeTab === journals.length}\r\n        key={journals.length}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Journals;","\r\n\r\nfunction CapitalChanges(props) {\r\n  return (\r\n    <p>Capital Changes</p>\r\n  );\r\n}\r\n  \r\nexport default CapitalChanges;","\r\n\r\nfunction AssetStatements(props) {\r\n    return (\r\n      <p>Asset Statements</p>\r\n    );\r\n  }\r\n    \r\n  export default AssetStatements;","import Grid from \"@material-ui/core/Grid\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport AddEditDialog from '../../components/AddEditDialog';\r\n\r\n/**\r\n * Add or change asset dialog React function component.\r\n * \r\n * Props:\r\n * - open: Dialog shows if true.\r\n * - onDialogClose: Function called when the dialog requests to be closed.\r\n * - edit: Asset object to edit, null if add new asset.\r\n * - fields: Value of the fields in this dialog: name, ticker, precision, pricePrecision, isCurrency, symbol.\r\n *           Received an object with members: {name, ticker, precision, pricePrecision, isCurrency, symbol}.\r\n * - onFieldsChange: Callback when the value of the fields change, use this to change the state of the parent component.\r\n *                  Function receives the new fields object.\r\n * - onSubmit: Function called when the add/edit button is pressed.\r\n */\r\nfunction AddEditAssetDialog(props) {\r\n  const handleReset = () => {\r\n    if (props.onFieldsChange) {\r\n      props.onFieldsChange({\r\n        name: '',\r\n        ticker: '',\r\n        precision: 2,\r\n        pricePrecision: 2,\r\n        isCurrency: false,\r\n        symbol: '',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    if (props.edit) {\r\n      if (props.onFieldsChange) {\r\n        props.onFieldsChange({\r\n          name: props.edit.name,\r\n          ticker: props.edit.ticker,\r\n          precision: props.edit.precision,\r\n          pricePrecision: props.edit.pricePrecision,\r\n          isCurrency: props.edit.isCurrency,\r\n          symbol: props.edit.symbol,\r\n        });\r\n      }\r\n    } else {\r\n      handleReset();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AddEditDialog\r\n      objectName={'Asset'}\r\n      edit={Boolean(props.edit)}\r\n      open={props.open}\r\n      onClose={props.onDialogClose}\r\n      onEnter={handleDialogOpen}\r\n      onReset={handleReset}\r\n      onSubmit={props.onSubmit}\r\n      contentMaxWidth=\"30rem\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            type=\"text\"\r\n            label=\"Asset Name\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={props.fields.name}\r\n            onChange={(e) => props.onFieldsChange({...props.fields, name: e.target.value})}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <TextField\r\n            type=\"text\"\r\n            label=\"Ticker\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={props.fields.ticker}\r\n            onChange={(e) => props.onFieldsChange({...props.fields, ticker: e.target.value})}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <TextField\r\n            type=\"text\"\r\n            label=\"Symbol\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            value={props.fields.symbol}\r\n            onChange={(e) => props.onFieldsChange({...props.fields, symbol: e.target.value})}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <FormControlLabel\r\n            control={<Checkbox />}\r\n            checked={props.fields.isCurrency}\r\n            onChange={(e) => props.onFieldsChange({...props.fields, isCurrency: e.target.checked})}\r\n            label=\"Currency\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            type=\"number\"\r\n            label=\"Precision\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={props.fields.precision}\r\n            onChange={(e) => props.onFieldsChange({...props.fields, precision: e.target.value})}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            type=\"number\"\r\n            label=\"Price Precision\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={props.fields.pricePrecision}\r\n            onChange={(e) => props.onFieldsChange({...props.fields, pricePrecision: e.target.value})}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </AddEditDialog>\r\n  );\r\n}\r\n\r\nexport default AddEditAssetDialog;","import clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n    paddingLeft: theme.spacing(4),\r\n    paddingRight: theme.spacing(4),\r\n  },\r\n}));\r\n\r\n/**\r\n * React component. A visual wrapper for a settings section, put contents as children.\r\n */\r\nfunction SettingsSection(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper component=\"section\" elevation={0} variant=\"outlined\" className={clsx(classes.root, props.className)}>\r\n      { props.children }\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default SettingsSection;","import { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    marginLeft: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(0.5),\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n/**\r\n * A React component. A heading with an icon button on the right.\r\n * \r\n * Props:\r\n * - title: The title.\r\n * - variant: The variant for the Typography component. Default \"h6\".\r\n * - gutterBottom: Add margin to the Typography component.\r\n * - icon: The icon component.\r\n * - buttonColor: The color of the IconButton component.\r\n * - onClick: Callback when the icon button is clicked.\r\n */\r\nfunction IconButtonHeading(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Typography variant={props.variant || 'h6'} gutterBottom={Boolean(props.gutterBottom)}>\r\n      { props.title }\r\n      <IconButton size=\"small\" onClick={props.onClick} color={props.buttonColor} className={classes.button}>\r\n        { props.icon }\r\n      </IconButton>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default IconButtonHeading;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddEditAssetDialog from './AddEditAssetDialog';\r\nimport SettingsSection from '../../components/SettingsSection';\r\nimport IconButtonHeading from '../../components/IconButtonHeading';\r\nimport { changeAccountingCurrency, selectActiveAccount } from './accountsSlice';\r\n\r\nfunction AccountMainSettings(props) {\r\n  const [accountingCurrencyDialogOpen, setAccountingCurrencyDialogOpen] = useState(false);\r\n  const [accountingCurrencyFields, setaccountingCurrencyFields] = useState({\r\n    name: '',\r\n    ticker: '',\r\n    precision: '',\r\n    pricePrecision: '',\r\n    isCurrency: false,\r\n    symbol: '',\r\n  });\r\n  const dispatch = useDispatch();\r\n  const account = useSelector(selectActiveAccount);\r\n  const accountingCurrency = account.settings.accountingCurrency;\r\n\r\n  const handleChangeAccountingCurrency = () => {\r\n    dispatch(changeAccountingCurrency({currency: {...accountingCurrencyFields}}));\r\n    setAccountingCurrencyDialogOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SettingsSection>\r\n        <IconButtonHeading\r\n          variant=\"h6\"\r\n          gutterBottom\r\n          title={'Accounting Currency'}\r\n          icon={<EditIcon fontSize=\"small\" />}\r\n          onClick={() => setAccountingCurrencyDialogOpen(true)}\r\n        />\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell align=\"center\">Ticker</TableCell>\r\n                <TableCell align=\"center\">Precision</TableCell>\r\n                <TableCell align=\"center\">Price Precision</TableCell>\r\n                <TableCell align=\"center\">Currency</TableCell>\r\n                <TableCell align=\"center\">Symbol</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell>{ accountingCurrency.name }</TableCell>\r\n                <TableCell align=\"center\">{ accountingCurrency.ticker }</TableCell>\r\n                <TableCell align=\"center\">{ accountingCurrency.precision }</TableCell>\r\n                <TableCell align=\"center\">{ accountingCurrency.pricePrecision }</TableCell>\r\n                <TableCell align=\"center\">{ accountingCurrency.isCurrency ? 'Yes' : 'No' }</TableCell>\r\n                <TableCell align=\"center\">{ accountingCurrency.symbol }</TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </SettingsSection>\r\n      <AddEditAssetDialog\r\n        open={accountingCurrencyDialogOpen}\r\n        onDialogClose={() => setAccountingCurrencyDialogOpen(false)}\r\n        edit={accountingCurrency}\r\n        fields={accountingCurrencyFields}\r\n        onFieldsChange={fields => setaccountingCurrencyFields(fields)}\r\n        onSubmit={handleChangeAccountingCurrency}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AccountMainSettings;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SettingsSection from '../../components/SettingsSection';\r\nimport IconButtonHeading from '../../components/IconButtonHeading';\r\nimport AddEditAssetDialog from './AddEditAssetDialog';\r\nimport { addAsset, editAsset, selectActiveAccount } from './accountsSlice';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n\r\n  },\r\n  tableRow: {\r\n    cursor: 'pointer',\r\n  },\r\n}));\r\n\r\nfunction AccountAssetsSettings(props) {\r\n  const classes = useStyles();\r\n  const [addEditAssetDialogOpen, setAddEditAssetDialogOpen] = useState(false);\r\n  // Index of the Asset to edit when the edit asset button is clicked, set to -1 to add new asset\r\n  const [selectedAsset, setSelectedAsset] = useState(-1);\r\n  const [addEditAssetFields, setAddEditAssetFields] = useState({\r\n    name: '',\r\n    ticker: '',\r\n    precision: '',\r\n    pricePrecision: '',\r\n    isCurrency: false,\r\n    symbol: '',\r\n  });\r\n  const dispatch = useDispatch();\r\n  const account = useSelector(selectActiveAccount);\r\n  const assets = account.assets;\r\n\r\n  const openAddAssetDialog = () => {\r\n    setSelectedAsset(-1);\r\n    setAddEditAssetDialogOpen(true);\r\n  };\r\n\r\n  const openEditAssetDialog = (index) => () => {\r\n    setSelectedAsset(index);\r\n    setAddEditAssetDialogOpen(true);\r\n  }\r\n\r\n  const handleAddEditAsset = () => {\r\n    if (selectedAsset < 0) {\r\n      // Add\r\n      dispatch(addAsset({asset: {...addEditAssetFields}}));\r\n    } else {\r\n      // Edit\r\n      dispatch(editAsset({asset: {...addEditAssetFields}, index: selectedAsset}));\r\n    }\r\n    setAddEditAssetDialogOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SettingsSection>\r\n        <IconButtonHeading\r\n          variant=\"h6\"\r\n          gutterBottom\r\n          title={'Assets'}\r\n          icon={<AddIcon fontSize=\"small\" />}\r\n          onClick={openAddAssetDialog}\r\n        />\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell align=\"center\">Ticker</TableCell>\r\n                <TableCell align=\"center\">Precision</TableCell>\r\n                <TableCell align=\"center\">Price Precision</TableCell>\r\n                <TableCell align=\"center\">Currency</TableCell>\r\n                <TableCell align=\"center\">Symbol</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {assets.map((a, i) =>\r\n                <TableRow key={i} hover className={classes.tableRow} onClick={openEditAssetDialog(i)}>\r\n                  <TableCell>{ a.name }</TableCell>\r\n                  <TableCell align=\"center\">{ a.ticker }</TableCell>\r\n                  <TableCell align=\"center\">{ a.precision }</TableCell>\r\n                  <TableCell align=\"center\">{ a.pricePrecision }</TableCell>\r\n                  <TableCell align=\"center\">{ a.isCurrency ? 'Yes' : 'No' }</TableCell>\r\n                  <TableCell align=\"center\">{ a.symbol }</TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </SettingsSection>\r\n      <AddEditAssetDialog\r\n        open={addEditAssetDialogOpen}\r\n        onDialogClose={() => setAddEditAssetDialogOpen(false)}\r\n        edit={selectedAsset === -1 ? null : assets[selectedAsset]}\r\n        fields={addEditAssetFields}\r\n        onFieldsChange={fields => setAddEditAssetFields(fields)}\r\n        onSubmit={handleAddEditAsset}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AccountAssetsSettings;","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Box from '@material-ui/core/Box';\r\nimport AddEditDialog from '../../components/AddEditDialog';\r\nimport { addJournal, editJournal, selectActiveAccountJournals } from './accountsSlice';\r\n\r\n/**\r\n * React component. Add or change journal column dialog.\r\n * \r\n * Props:\r\n * - open: Dialog shows if true.\r\n * - onDialogClose: Function called when the dialog requests to be closed.\r\n * - journalIndex: The index of the journal selected.\r\n */\r\nfunction AddEditJournalDialog(props) {\r\n  const { open, onDialogClose, journalIndex } = props;\r\n  const [fields, setFields] = useState({\r\n    name: '',\r\n    type: '',\r\n  });\r\n  const dispatch = useDispatch();\r\n  const journals = useSelector(selectActiveAccountJournals);\r\n  // journalIndex is set to -1 initially\r\n  const journal = journalIndex >= 0 ? journals[journalIndex] : null;\r\n\r\n  const handleReset = () => {\r\n    setFields({\r\n      name: '',\r\n      type: 'trading',\r\n    });\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    if (journalIndex >= 0) {\r\n      // Edit mode\r\n      setFields({\r\n        name: journal.name,\r\n        type: journal.type,\r\n      });\r\n    } else {\r\n      handleReset();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (journalIndex >= 0) {\r\n      dispatch(editJournal({journalIndex: journalIndex, journal: {...fields}}));\r\n    } else {\r\n      dispatch(addJournal({journal: {...fields}}));\r\n    }\r\n    onDialogClose();\r\n  };\r\n\r\n  return (\r\n    <AddEditDialog\r\n      objectName={'Journal'}\r\n      edit={journalIndex >= 0}\r\n      open={open}\r\n      onClose={onDialogClose}\r\n      onEnter={handleDialogOpen}\r\n      onReset={handleReset}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <Box>\r\n        <TextField\r\n          type=\"text\"\r\n          label=\"Journal Name\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          required\r\n          value={fields.name}\r\n          onChange={(e) => setFields(s => ({...s, name: e.target.value}))}\r\n        />\r\n      </Box>\r\n      <Box mt={2}>\r\n        <TextField\r\n          select\r\n          label=\"Type\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          required\r\n          value={fields.type}\r\n          onChange={(e) => setFields(s => ({...s, type: e.target.value}))}\r\n        >\r\n          <MenuItem value=\"trading\">Trading</MenuItem>\r\n          <MenuItem value=\"income\">Income</MenuItem>\r\n          <MenuItem value=\"expense\">Expense</MenuItem>\r\n        </TextField>\r\n      </Box>\r\n    </AddEditDialog>\r\n  );\r\n}\r\n\r\nexport default AddEditJournalDialog;","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddEditDialog from '../../components/AddEditDialog';\r\nimport { addJournalColumn, editJournalColumn, selectActiveAccountJournals } from './accountsSlice';\r\n\r\n/**\r\n * React component. Add or change journal column dialog.\r\n * \r\n * Props:\r\n * - open: Dialog shows if true.\r\n * - onDialogClose: Function called when the dialog requests to be closed.\r\n * - journalIndex: The index of the journal selected.\r\n * - columnRole: The role column of the selected journal to edit. Set to falsy value to add a new column.\r\n */\r\nfunction AddEditJournalColumnDialog(props) {\r\n  const { open, onDialogClose, journalIndex, columnRole } = props;\r\n  const [fields, setFields] = useState({\r\n    role: '',\r\n    name: '',\r\n    type: '',\r\n    hide: false,\r\n    precision: '',\r\n    dateTimeFormat: '',\r\n  });\r\n  const dispatch = useDispatch();\r\n  const journals = useSelector(selectActiveAccountJournals);\r\n  // journalIndex is set to -1 initially\r\n  const journal = journalIndex >= 0 ? journals[journalIndex] : null;\r\n\r\n  const handleReset = () => {\r\n    setFields({\r\n      role: columnRole || `extra-${journal.columns.extra.length}`,\r\n      name: '',\r\n      type: 'text',\r\n      hide: false,\r\n      precision: '',\r\n      dateTimeFormat: 'date',\r\n    });\r\n  };\r\n\r\n  const handleDialogOpen = () => {\r\n    if (columnRole) {\r\n      // Get the column with the given role. If it is an extra column, the column exists in journal.columns.extra[index].\r\n      const column = columnRole.slice(0, 5) === 'extra' ?\r\n                     journal.columns.extra[parseInt(columnRole.split('-')[1])] :\r\n                     journal.columns[columnRole];\r\n      setFields({\r\n        role: columnRole,\r\n        name: column.name,\r\n        type: column.type,\r\n        hide: column.hide,\r\n        precision: column.precision,\r\n        dateTimeFormat: column.dateTimeFormat,\r\n      });\r\n    } else {\r\n      handleReset();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    const  {role, ...column } = fields;\r\n    if (columnRole) {\r\n      dispatch(editJournalColumn({journalIndex: journalIndex, columnRole: columnRole, column: column}));\r\n    } else {\r\n      dispatch(addJournalColumn({journalIndex: journalIndex, column: column}));\r\n    }\r\n    onDialogClose();\r\n  };\r\n\r\n  return (\r\n    <AddEditDialog\r\n      objectName={'Journal Column'}\r\n      edit={Boolean(columnRole)}\r\n      open={open}\r\n      onClose={onDialogClose}\r\n      onEnter={handleDialogOpen}\r\n      onReset={handleReset}\r\n      onSubmit={handleSubmit}\r\n      contentMaxWidth=\"30rem\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            type=\"text\"\r\n            label=\"Role\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={fields.role}\r\n            disabled\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            type=\"text\"\r\n            label=\"Column Name\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={fields.name}\r\n            onChange={(e) => setFields(s => ({...s, name: e.target.value}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <TextField\r\n            select\r\n            label=\"Type\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={fields.type}\r\n            onChange={(e) => setFields(s => ({...s, type: e.target.value}))}\r\n          >\r\n            <MenuItem value=\"text\">Text</MenuItem>\r\n            <MenuItem value=\"decimal\">Decimal</MenuItem>\r\n            <MenuItem value=\"integer\">Integer</MenuItem>\r\n            <MenuItem value=\"date\">Date</MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <FormControlLabel\r\n            control={<Checkbox />}\r\n            checked={fields.hide}\r\n            onChange={(e) => setFields(s => ({...s, hide: e.target.checked}))}\r\n            label=\"Hide\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            type=\"number\"\r\n            label=\"Precision\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required={fields.type === 'decimal'}\r\n            disabled={fields.type !== 'decimal'}\r\n            value={fields.precision}\r\n            onChange={(e) => setFields(s => ({...s, precision: e.target.value}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            select\r\n            label=\"Date Time Format\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required={fields.type === 'date'}\r\n            disabled={fields.type !== 'date'}\r\n            value={fields.dateTimeFormat}\r\n            onChange={(e) => setFields(s => ({...s, dateTimeFormat: e.target.value}))}\r\n          >\r\n            <MenuItem value=\"date\">Date</MenuItem>\r\n            <MenuItem value=\"datetime\">Date & Time</MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n      </Grid>\r\n    </AddEditDialog>\r\n  );\r\n}\r\n\r\nexport default AddEditJournalColumnDialog;","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport AddEditDialog from '../../components/AddEditDialog';\r\nimport { editJournalColumnOrder, selectActiveAccountJournals } from './accountsSlice';\r\n\r\n/**\r\n * Edit journal column order dialog React function component.\r\n * \r\n * Props:\r\n * - open: Dialog shows if true.\r\n * - onDialogClose: Function called when the dialog requests to be closed.\r\n * - journalIndex: The index of the journal of the column order to edit.\r\n */\r\nfunction EditJournalColumnOrderDialog(props) {\r\n  const { journalIndex, onDialogClose, open } = props;\r\n  const dispatch = useDispatch();\r\n  const journals = useSelector(selectActiveAccountJournals);\r\n  // The actual column order in the global state\r\n  const columnOrder = journalIndex >= 0 ? journals[journalIndex].columnOrder : [];\r\n  // The edit column order in the dialog. Confirmed when the \"edit\" button is clicked.\r\n  const [dialogColumnOrder, setDialogColumnOrder] = useState([]);\r\n\r\n  const handleReset = () => {\r\n    setDialogColumnOrder(columnOrder);\r\n  };\r\n\r\n  const handleReorderColumn = (index, newIndex) => {\r\n    const newColumnOrder = [...dialogColumnOrder];\r\n    newColumnOrder.splice(newIndex, 0, newColumnOrder.splice(index, 1)[0]);\r\n    setDialogColumnOrder(newColumnOrder);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    dispatch(editJournalColumnOrder({journalIndex: journalIndex, columnOrder: dialogColumnOrder}));\r\n    onDialogClose();\r\n  };\r\n\r\n  return (\r\n    <AddEditDialog\r\n      objectName={'Column Order'}\r\n      edit={true}\r\n      open={open}\r\n      onClose={onDialogClose}\r\n      onEnter={handleReset}\r\n      onReset={handleReset}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <List>\r\n        {dialogColumnOrder.map((c, i) =>\r\n          <ListItem dense disableGutters divider key={c}>\r\n            <ListItemIcon>\r\n              <IconButton disabled={i === 0} onClick={() => handleReorderColumn(i, i - 1)}>\r\n                <ArrowUpwardIcon />\r\n              </IconButton>\r\n            </ListItemIcon>\r\n            <ListItemText primary={c} />\r\n            <ListItemSecondaryAction>\r\n              <IconButton edge=\"end\" disabled={i === dialogColumnOrder.length - 1} onClick={() => handleReorderColumn(i, i + 1)}>\r\n                <ArrowDownwardIcon />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        )}\r\n      </List>\r\n    </AddEditDialog>\r\n  );\r\n}\r\n\r\nexport default EditJournalColumnOrderDialog;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Box from '@material-ui/core/Box';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport AddEditJournalDialog from './AddEditJournalDialog';\r\nimport AddEditJournalColumnDialog from './AddEditJournalColumnDialog';\r\nimport EditJournalColumnOrderDialog from './EditJournalColumnOrderDialog';\r\nimport SettingsSection from '../../components/SettingsSection';\r\nimport IconButtonHeading from '../../components/IconButtonHeading';\r\nimport { selectActiveAccount } from './accountsSlice';\r\n\r\nconst useJournalColumnRowStyles = makeStyles(theme => ({\r\n  root: {\r\n    cursor: 'pointer',\r\n  },\r\n}));\r\n\r\nfunction JournalColumnRow(props) {\r\n  const classes = useJournalColumnRowStyles();\r\n  const { role, journalColumn, onClick } = props;\r\n  return (\r\n    <TableRow hover onClick={onClick} className={classes.root}>\r\n      <TableCell>{ role }</TableCell>\r\n      <TableCell>{ journalColumn.name }</TableCell>\r\n      <TableCell>{ journalColumn.type }</TableCell>\r\n      <TableCell>{ journalColumn.type === 'decimal' && journalColumn.precision }</TableCell>\r\n      <TableCell>{ journalColumn.type === 'date' && journalColumn.dateTimeFormat }</TableCell>\r\n      <TableCell>{ journalColumn.hide ? 'Yes' : 'No' }</TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nconst useJournalRowStyles = makeStyles(theme => ({\r\n  mainRow: {\r\n    cursor: 'pointer',\r\n    '& > *': {    // select all children\r\n      borderBottom: 'none',   // remove the bottom border of the TableCell children\r\n    },\r\n  },\r\n  collapsibleCell: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n  columnOrderChip: {\r\n    marginRight: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\n/**\r\n * React component.\r\n * \r\n * Props:\r\n * - journal: The journal object of the row.\r\n * - index: The index of the journal in the account.\r\n * - onAddColumn: Callback when requested to add a new column.\r\n * - onEditColumn: Callback when requested to edit a column. Signature is (role).\r\n * - onEditColumnOrder: Callback when requested to edit the column order.\r\n * - onClick: Callback when the row is clicked.\r\n */\r\nfunction JournalRow(props) {\r\n  const classes = useJournalRowStyles();\r\n  const { journal, index, onAddColumn, onEditColumn, onEditColumnOrder, onClick } = props;\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const expandRow = (e) => {\r\n    setOpen(s => !s);\r\n    e.stopPropagation();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow hover onClick={onClick} className={classes.mainRow}>\r\n        <TableCell>{journal.name}</TableCell>\r\n        <TableCell align=\"center\">{journal.type}</TableCell>\r\n        <TableCell align=\"center\">\r\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={expandRow}>\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell colSpan={3} className={classes.collapsibleCell}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <IconButtonHeading\r\n                variant=\"h6\"\r\n                title={'Columns'}\r\n                icon={<AddIcon fontSize=\"small\" />}\r\n                onClick={onAddColumn}\r\n              />\r\n              <Table size=\"small\" aria-label=\"Journal columns\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Role</TableCell>\r\n                    <TableCell>Name</TableCell>\r\n                    <TableCell>Type</TableCell>\r\n                    <TableCell>Precision</TableCell>\r\n                    <TableCell>Date Format</TableCell>\r\n                    <TableCell>Hide</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {/* pair = [role, column] */}\r\n                  {Object.entries(journal.columns).map(pair =>\r\n                    pair[0] !== 'extra' && <JournalColumnRow\r\n                      role={pair[0]}\r\n                      journalColumn={pair[1]}\r\n                      onClick={() => onEditColumn(pair[0])}\r\n                      key={pair[0]}\r\n                    />\r\n                  )}\r\n                  {journal.columns.extra.map((col, i) =>\r\n                    <JournalColumnRow\r\n                      role={`extra-${i}`}\r\n                      journalColumn={col}\r\n                      onClick={() => onEditColumn(`extra-${i}`)}\r\n                      key={i}\r\n                    />\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n              <Box mt={1}>\r\n                <IconButtonHeading\r\n                  variant=\"h6\"\r\n                  title={'Column Order'}\r\n                  icon={<EditIcon fontSize=\"small\" />}\r\n                  onClick={onEditColumnOrder}\r\n                />\r\n                <Box display=\"flex\" flexWrap=\"wrap\">\r\n                  {journal.columnOrder.map(c =>\r\n                    <Chip label={c} className={classes.columnOrderChip} />\r\n                  )}\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tableRow: {\r\n    cursor: 'pointer',\r\n  },\r\n}));\r\n\r\n/**\r\n * See https://material-ui.com/components/tables/#collapsible-table.\r\n */\r\nfunction AccountJournalsSettings(props) {\r\n  const classes = useStyles();\r\n  const [addEditJournalDialogOpen, setAddEditJournalDialogOpen] = useState(false);\r\n  const [addEditJournalColumnDialogOpen, setAddEditJournalColumnDialogOpen] = useState(false);\r\n  const [editJournalColumnOrderDialogOpen, setEditJournalColumnOrderDialogOpen] = useState(false);\r\n  // Index of the Journal to edit when editing a journal setting. Set to -1 to add new journal.\r\n  const [selectedJournal, setSelectedJournal] = useState(-1);\r\n  // The \"role\" of the Journal Column to edit. Set to null to add new journal column.\r\n  const [selectedJournalColumn, setSelectedJournalColumn] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const account = useSelector(selectActiveAccount);\r\n  const journals = account.journals;\r\n\r\n  const openAddJournalDialog = () => {\r\n    setSelectedJournal(-1);\r\n    setAddEditJournalDialogOpen(true);\r\n  };\r\n\r\n  const openEditJournalDialog = (index) => {\r\n    setSelectedJournal(index);\r\n    setAddEditJournalDialogOpen(true);\r\n  };\r\n\r\n  const openAddColumnDialog = (index) => {\r\n    setSelectedJournal(index);\r\n    setSelectedJournalColumn(null);\r\n    setAddEditJournalColumnDialogOpen(true);\r\n  };\r\n\r\n  const openEditColumnDialog = (index, role) => {\r\n    setSelectedJournal(index);\r\n    setSelectedJournalColumn(role);\r\n    setAddEditJournalColumnDialogOpen(true);\r\n  };\r\n\r\n  const openEditColumnOrderDialog = (index) => {\r\n    setSelectedJournal(index);\r\n    setEditJournalColumnOrderDialogOpen(true);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SettingsSection>\r\n        <IconButtonHeading\r\n          variant=\"h6\"\r\n          title={'Journals'}\r\n          icon={<AddIcon fontSize=\"small\" />}\r\n          onClick={openAddJournalDialog}\r\n        />\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell align=\"center\">Type</TableCell>\r\n                <TableCell align=\"center\">Columns</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {journals.map((j, i) =>\r\n                <JournalRow\r\n                  journal={j}\r\n                  index={i}\r\n                  onClick={() => openEditJournalDialog(i)}\r\n                  onAddColumn={() => openAddColumnDialog(i)}\r\n                  onEditColumn={role => openEditColumnDialog(i, role)}\r\n                  onEditColumnOrder={() => openEditColumnOrderDialog(i)}\r\n                  key={i}\r\n                />\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </SettingsSection>\r\n      <AddEditJournalDialog\r\n        open={addEditJournalDialogOpen}\r\n        onDialogClose={() => setAddEditJournalDialogOpen(false)}\r\n        journalIndex={selectedJournal}\r\n      />\r\n      <AddEditJournalColumnDialog\r\n        open={addEditJournalColumnDialogOpen}\r\n        onDialogClose={() => setAddEditJournalColumnDialogOpen(false)}\r\n        journalIndex={selectedJournal}\r\n        columnRole={selectedJournalColumn}\r\n      />\r\n      <EditJournalColumnOrderDialog\r\n        open={editJournalColumnOrderDialogOpen}\r\n        onDialogClose={() => setEditJournalColumnOrderDialogOpen(false)}\r\n        journalIndex={selectedJournal}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AccountJournalsSettings;","import { Fragment } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AccountMainSettings from './AccountMainSettings';\r\nimport AccountAssetsSettings from './AccountAssetsSettings';\r\nimport AccountJournalsSettings from './AccountJournalsSettings';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n\r\n  },\r\n}));\r\n\r\nfunction AccountSettings(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Fragment>\r\n      <Container className={classes.root}>\r\n        <Box my={2}>\r\n          <Typography variant=\"h4\">Account Settings</Typography>\r\n        </Box>\r\n        <Box my={2}>\r\n          <AccountMainSettings />\r\n        </Box>\r\n        <Box my={2}>\r\n          <AccountAssetsSettings />\r\n        </Box>\r\n        <Box my={2}>\r\n          <AccountJournalsSettings />\r\n        </Box>\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default AccountSettings;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TopAppBar from './features/navigation/TopAppBar';\r\nimport SideDrawer from './features/navigation/SideDrawer';\r\nimport Journals from './features/journals/Journals';\r\nimport { addDefaultAccount } from './features/accounts/accountsSlice';\r\nimport CapitalChanges from './features/capital-changes/CapitalChanges';\r\nimport AssetStatements from './features/asset-statements/AssetStatements';\r\nimport AccountSettings from './features/accounts/AccountSettings';\r\n\r\nconst styles = {\r\n  root: {\r\n    // Allow content to grow\r\n    display: 'flex',\r\n  },\r\n  content: {\r\n    // Let content grow horizontally\r\n    flexGrow: 1,\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      drawerOpen: false,\r\n    };\r\n\r\n    this.openDrawer = this.openDrawer.bind(this);\r\n    this.closeDrawer = this.closeDrawer.bind(this);\r\n  }\r\n\r\n  openDrawer() {\r\n    this.setState({drawerOpen: true});\r\n  }\r\n\r\n  closeDrawer() {\r\n    this.setState({drawerOpen: false});\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Init with test data\r\n    this.props.dispatch(addDefaultAccount('Coinbase'));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.props.classes.root}>\r\n          <TopAppBar\r\n            onMenuClick={this.openDrawer}\r\n            drawerOpen={this.state.drawerOpen}\r\n          />\r\n          <aside>\r\n            <SideDrawer open={this.state.drawerOpen} onClose={this.closeDrawer} />\r\n          </aside>\r\n          <main className={this.props.classes.content}>\r\n            {/* Spacing with (height = top app bar height) so content is not clipped by the fixed app bar */}\r\n            <Toolbar />\r\n            <Switch>\r\n              <Route path=\"/journals\">\r\n                <Journals />\r\n              </Route>\r\n              <Route path=\"/capital-changes\">\r\n                <CapitalChanges />\r\n              </Route>\r\n              <Route path=\"/asset-statements\">\r\n                <AssetStatements />\r\n              </Route>\r\n              <Route path=\"/account-settings\">\r\n                <AccountSettings />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <Journals />\r\n              </Route>\r\n            </Switch>\r\n          </main>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(connect()(App));","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const navigationSlice = createSlice({\r\n  name: 'navigation',\r\n  initialState: {\r\n    user: 'New User',       // String or null\r\n  },\r\n  reducers: {\r\n    changeUser: (state, action) => {\r\n      state.page = action.payload ? String(action.payload) : null;\r\n    },\r\n  }\r\n});\r\n\r\n// Actions\r\nexport const { changeUser } = navigationSlice.actions;\r\n\r\n// Selectors\r\nexport const selectUser = state => state.navigation.user;\r\n\r\nexport default navigationSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport navigationReducer from '../features/navigation/navigationSlice';\r\nimport accountsReducer from '../features/accounts/accountsSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    navigation: navigationReducer,\r\n    accounts: accountsReducer,\r\n  },\r\n});","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n// TODO: change to Browser router, deploy on another site.\r\n// import { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CssBaseline />\r\n    <Provider store={store}>\r\n      {/* Use HashRouter only for GitHub Pages */}\r\n      {/* <Router basename={process.env.PUBLIC_URL}> */}\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}