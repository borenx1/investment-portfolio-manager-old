{"version":3,"sources":["models/accountFunctions.ts","models/account.ts","features/accounts/accountsSlice.ts","constants.js","features/navigation/TopAppBar.tsx","features/navigation/SideDrawer.js","components/AddEditDialog.tsx","features/journals/AddEditTransactionDialog.js","features/accounts/AddEditJournalColumnDialog.tsx","features/journals/JournalSheet.tsx","features/journals/AddTransactionTypeForm.js","features/journals/Journals.tsx","features/capital-changes/CapitalChanges.js","features/asset-statements/AssetStatements.js","features/accounts/AddEditAssetDialog.tsx","components/SettingsSection.tsx","components/IconButtonHeading.tsx","features/accounts/AccountMainSettings.tsx","components/DeleteButton.tsx","features/accounts/AccountAssetsSettings.tsx","features/accounts/AddEditJournalDialog.tsx","features/accounts/EditJournalColumnOrderDialog.tsx","features/accounts/AccountJournalsSettings.tsx","features/accounts/AccountSettings.tsx","App.js","features/navigation/navigationSlice.ts","app/store.ts","reportWebVitals.js","index.js"],"names":["journalColumnRoleDisplay","role","undefined","toFixed","isDateColumnFormat","obj","indexOf","isAssetColumn","column","type","isTextColumn","isDecimalColumnDescription","isDecimalColumn","isBaseAmountColumn","description","isQuoteAmountColumn","isExtraColumn","isIntegerColumn","isBooleanColumn","defaultColumnOrder","defaultAccountSettings","accountingCurrency","ticker","name","precision","pricePrecision","isCurrency","symbol","defaultAssets","defaultJournals","createTradingJournal","date","base","baseAmount","quote","quoteAmount","feeBase","feeQuote","notes","extra","createExpenseJournal","createTradingColumns","dateColumnFormat","format","hide","price","createIncomeColumns","createExpenseColumns","createDefaultJournal","columnOrder","transactions","columns","createIncomeJournal","accountsSlice","createSlice","initialState","accounts","activeAccount","reducers","switchAccount","state","action","accountIndex","payload","Math","max","addAccount","push","addDefaultAccount","settings","assets","journals","createDefaultAccount","addTransaction","account","journal","transaction","changeAccountingCurrency","currency","addAsset","asset","editAsset","index","console","warn","length","deleteAsset","splice","addJournal","addDefaultJournal","editJournalSettings","deleteJournal","addJournalColumn","extraColumnsLength","editJournalColumn","isDateColumn","isPriceColumn","deleteJournalColumn","journalIndex","columnIndex","deletedColIndex","i","colIndex","editJournalColumnOrder","actions","selectAccounts","selectActiveAccountIndex","selectActiveAccount","selectActiveAccountName","selectActiveAccountAccountingCurrency","selectActiveAccountAssets","selectActiveAccountJournals","drawerWidth","useStyles","makeStyles","theme","root","menuButton","marginRight","spacing","display","props","drawerOpen","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarDrawerOpen","marginLeft","width","enteringScreen","TopAppBar","classes","useState","menuAnchor","setMenuAnchor","dispatch","useDispatch","useSelector","activeAccountIndex","activeAccountName","Fragment","AppBar","position","className","clsx","Toolbar","IconButton","onClick","onMenuClick","color","aria-label","Typography","variant","e","currentTarget","aria-haspopup","Menu","anchorEl","open","Boolean","onClose","map","a","MenuItem","handleSwitchAccount","selected","toolbar","alignItems","justifyContent","padding","mixins","whiteSpace","drawerClose","overflowX","breakpoints","up","SideDrawer","path","useLocation","pathname","Drawer","anchor","paper","Divider","List","component","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","ListSubheader","inset","disableSticky","content","maxWidth","contentMaxWidth","AddEditDialog","objectName","Dialog","onEnter","DialogTitle","edit","DialogContent","dividers","children","DialogActions","Button","onReset","onSubmit","getCurrentLocalDateTime","currentDateTime","Date","getTimezoneOffset","toISOString","slice","AddEditTransactionDialog","trade","fee","feeCurrency","fields","setFields","resetForm","onDialogClose","preventDefault","Grid","container","item","xs","TextField","size","label","required","value","onChange","s","target","InputLabelProps","shrink","fullWidth","select","multiline","initialFormFields","decimalColumnDescription","dateFormat","AddEditJournalColumnDialog","handleReset","addOrEditJournalColumn","newColumn","JSON","stringify","newType","partialColumn","disabled","FormControlLabel","control","Checkbox","checked","labelPlacement","useJournalHeadersStyles","borderBottom","borderRight","columnSettings","JournalHeaders","TableRow","TableCell","Box","edge","onSettingsClick","fontSize","style","useJournalRowStyles","JournalRow","hover","data","borderRadius","boxShadow","fab","bottom","right","JournalSheet","transactionDialogOpen","setTransactionDialogOpen","selectedTransaction","setSelectedTransaction","journalColumnDialogOpen","setJournalColumnDialogOpen","selectedJournalColumn","setSelectedJournalColumn","TableContainer","Paper","Table","stickyHeader","TableHead","TableBody","tx","Fab","AddTransactionTypeForm","active","Journals","activeTab","setActiveTab","Tabs","v","Tab","icon","CapitalChanges","AssetStatements","AddEditAssetDialog","parseInt","paddingTop","paddingBottom","paddingLeft","paddingRight","SettingsSection","elevation","marginBottom","IconButtonHeading","gutterBottom","title","buttonColor","AccountMainSettings","accountingCurrencyDialogOpen","setAccountingCurrencyDialogOpen","align","palette","error","main","DeleteButton","buttonSize","iconSize","tableRow","cursor","AccountAssetsSettings","addEditAssetDialogOpen","setAddEditAssetDialogOpen","selectedAsset","setSelectedAsset","stopPropagation","handleDeleteAsset","AddEditJournalDialog","mt","EditJournalColumnOrderDialog","dialogColumnOrder","setDialogColumnOrder","handleReorderColumn","newIndex","newColumnOrder","dense","disableGutters","divider","ListItemSecondaryAction","useJournalColumnRowStyles","JournalColumnRow","journalColumn","Object","keys","mainRow","collapsibleCell","columnOrderChip","onAddColumn","onEditColumn","onEditColumnOrder","setOpen","colSpan","Collapse","in","timeout","unmountOnExit","margin","entries","flexWrap","c","Chip","AccountJournalsSettings","addEditJournalDialogOpen","setAddEditJournalDialogOpen","addEditJournalColumnDialogOpen","setAddEditJournalColumnDialogOpen","editJournalColumnOrderDialogOpen","setEditJournalColumnOrderDialogOpen","selectedJournal","setSelectedJournal","j","openEditColumnDialog","AccountSettings","Container","my","App","openDrawer","bind","closeDrawer","this","setState","React","Component","withStyles","flexGrow","connect","navigationSlice","user","changeUser","store","configureStore","reducer","navigation","navigationReducer","accountsReducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.301534cd.chunk.js","sourcesContent":["import { JournalColumnRole } from \"./account\";\r\n\r\nexport function journalColumnRoleDisplay(role: JournalColumnRole | undefined | null) {\r\n  switch (role) {\r\n    case undefined:\r\n    case null:\r\n      return role;\r\n    case 'date':\r\n      return 'Date';\r\n    case 'base':\r\n      return 'Base';\r\n    case 'baseAmount':\r\n      return 'Base amount';\r\n    case 'quote':\r\n      return 'Quote';\r\n    case 'quoteAmount':\r\n      return 'Quote amount';\r\n    case 'price':\r\n      return 'Price';\r\n    case 'feeBase':\r\n      return 'Base fee';\r\n    case 'feeQuote':\r\n      return 'Quote fee';\r\n    case 'notes':\r\n      return 'Notes';\r\n    default:\r\n      return `Extra (${(role + 1).toFixed()})`;\r\n  }\r\n}","export * from './accountFunctions';\r\n\r\n/**\r\n * A trading account.\r\n * @param name Name of the account.\r\n * @param settings The account settings.\r\n * @param assets Managed assets of the account.\r\n * @param journals List of journals to manage transactions.\r\n */\r\nexport interface Account {\r\n  name: string;\r\n  settings: AccountSettings;\r\n  assets: Asset[];\r\n  journals: Journal[];\r\n}\r\n/**\r\n * Account settings.\r\n * @param accountingCurrency The accounting currency of the account.\r\n */\r\nexport interface AccountSettings {\r\n  accountingCurrency: Asset;\r\n}\r\n\r\n/**\r\n * Asset settings.\r\n * @param ticker Ticker of the asset, e.g. BTC. This is the unique identifier of an asset.\r\n * @param name Name of the asset, e.g. Bitcoin.\r\n * @param precision The precision used to record amounts.\r\n * @param pricePrecision The default precision used to show prices.\r\n * @param isCurrency true if the asset is a currency.\r\n * @param symbol Optional. Symbol of the asset, e.g. '₿'.\r\n */\r\nexport interface Asset {\r\n  // TODO: Ticker only letters, numbers and period (.)\r\n  ticker: string;\r\n  name: string;\r\n  precision: number;\r\n  pricePrecision: number;\r\n  isCurrency: boolean;\r\n  symbol?: string;\r\n}\r\n\r\nexport type JournalType = 'trading' | 'income' | 'expense';\r\nexport function isJournalType(obj: any): obj is JournalType {\r\n  return typeof obj === 'string' && ['trading', 'income', 'expense'].indexOf(obj) !== -1;\r\n}\r\n/**\r\n * A journal for an account.\r\n * @param name Name of the journal.\r\n * @param type Type of the journal, one of: 'trading', 'income', 'expense'.\r\n * @param columns Mapping of columns and their settings.\r\n * @param columnOrder The order of the columns show in the journal.\r\n * @param transactions List of transactions.\r\n * @returns An object with the given members.\r\n */\r\nexport interface Journal {\r\n  name: string;\r\n  type: JournalType;\r\n  columns: JournalColumnSet;\r\n  columnOrder: JournalColumnRole[];\r\n  transactions: Transaction[];\r\n}\r\n/**\r\n * A set of journal columns.\r\n * @param date Date journal column.\r\n * @param base Base journal column.\r\n * @param baseAmount Base amount journal column.\r\n * @param quote Quote journal column.\r\n * @param quoteAmount Quote amount journal column.\r\n * @param price Price journal column.\r\n * @param feeBase Fee in base curreny journal column.\r\n * @param feeQuote Fee in quote curreny journal column.\r\n * @param notes Notes journal column.\r\n * @param extra Extra journal columns.\r\n */\r\nexport interface JournalColumnSet {\r\n  date: DateColumn;\r\n  base: AssetColumn;\r\n  baseAmount: BaseAmountColumn;\r\n  quote: AssetColumn;\r\n  quoteAmount: QuoteAmountColumn;\r\n  price: PriceColumn;\r\n  feeBase: BaseAmountColumn;\r\n  feeQuote: QuoteAmountColumn;\r\n  notes: TextColumn;\r\n  extra: ExtraColumn[];\r\n}\r\n/**\r\n * Used to select Columns from JournalColumnSet. A string value is for the key of a core column,\r\n * a number value is the index of an extra column.\r\n */\r\nexport type JournalColumnRole = Exclude<keyof JournalColumnSet, 'extra'> | number;\r\nexport function isJournalColumnRole(obj: any): obj is JournalColumnRole {\r\n  const type = typeof obj;\r\n  return type === 'number' || (type === 'string' &&\r\n    ['date', 'base', 'baseAmount', 'quote', 'quoteAmount', 'price', 'feeBase', 'feeQuote', 'notes'].indexOf(obj) !== -1);\r\n}\r\n/** Base Journal Column interface to extend from. */\r\ninterface BaseJournalColumn {\r\n  name: string;\r\n  hide: boolean;\r\n}\r\nexport type DateColumnFormat = 'date' | 'datetime';\r\nexport function isDateColumnFormat(obj: any): obj is DateColumnFormat {\r\n  return typeof obj === 'string' && ['date', 'datetime'].indexOf(obj) !== -1;\r\n}\r\nexport interface DateColumn extends BaseJournalColumn {\r\n  type: 'date';\r\n  format: DateColumnFormat;\r\n}\r\nexport function isDateColumn(column: JournalColumn | BaseJournalColumn): column is DateColumn {\r\n  return 'type' in column && column.type === 'date' && column.format !== undefined;\r\n}\r\nexport interface AssetColumn extends BaseJournalColumn {\r\n  type: 'asset';\r\n}\r\nexport function isAssetColumn(column: JournalColumn | BaseJournalColumn): column is AssetColumn {\r\n  return 'type' in column && column.type === 'asset';\r\n}\r\nexport interface TextColumn extends BaseJournalColumn {\r\n  type: 'text';\r\n}\r\nexport function isTextColumn(column: JournalColumn | BaseJournalColumn): column is TextColumn {\r\n  return 'type' in column && column.type === 'text';\r\n}\r\nexport interface IntegerColumn extends BaseJournalColumn {\r\n  type: 'integer';\r\n}\r\nexport function isIntegerColumn(column: JournalColumn | BaseJournalColumn): column is IntegerColumn {\r\n  return 'type' in column && column.type === 'integer';\r\n}\r\nexport type DecimalColumnDescription = 'base' | 'quote' | 'price';\r\nexport function isDecimalColumnDescription(obj: any): obj is DecimalColumnDescription {\r\n  return typeof obj === 'string' && ['base', 'quote', 'price'].indexOf(obj) !== -1;\r\n}\r\n/**\r\n * @param precision The precision shown of the column. Shows the default asset precision if not set.\r\n * @param description Used to set the default precision depending on if its an asset amount or price. No\r\n * default precision used if not set.\r\n */\r\nexport interface DecimalColumn extends BaseJournalColumn {\r\n  type: 'decimal';\r\n  // Key can be an asset ticker, e.g. USD, or an asset pair, e.g. BTC/USD.\r\n  precision: Record<string, number>;\r\n  // precision: Record<string, number>;\r\n  description: DecimalColumnDescription;\r\n}\r\nexport function isDecimalColumn(column: JournalColumn | BaseJournalColumn): column is DecimalColumn {\r\n  return 'type' in column && column.type === 'decimal' && 'precision' in column && 'description' in column;\r\n}\r\ninterface BaseAmountColumn extends DecimalColumn {\r\n  description: 'base';\r\n}\r\nexport function isBaseAmountColumn(column: JournalColumn | BaseJournalColumn): column is BaseAmountColumn {\r\n  return isDecimalColumn(column) && column.description === 'base';\r\n}\r\ninterface QuoteAmountColumn extends DecimalColumn {\r\n  description: 'quote';\r\n}\r\nexport function isQuoteAmountColumn(column: JournalColumn | BaseJournalColumn): column is QuoteAmountColumn {\r\n  return isDecimalColumn(column) && column.description === 'quote';\r\n}\r\ninterface PriceColumn extends DecimalColumn {\r\n  description: 'price';\r\n}\r\nexport function isPriceColumn(column: JournalColumn | BaseJournalColumn): column is PriceColumn {\r\n  return isDecimalColumn(column) && column.description === 'price';\r\n}\r\nexport interface BooleanColumn extends BaseJournalColumn {\r\n  type: 'boolean';\r\n}\r\nexport function isBooleanColumn(column: JournalColumn | BaseJournalColumn): column is BooleanColumn {\r\n  return 'type' in column && column.type === 'boolean';\r\n}\r\n/** Journal Columns that the user can create. */\r\nexport type ExtraColumn = TextColumn | IntegerColumn | DecimalColumn | BooleanColumn;\r\nexport function isExtraColumn(column: JournalColumn | BaseJournalColumn): column is ExtraColumn {\r\n  return isTextColumn(column) || isIntegerColumn(column) || isDecimalColumn(column) || isBooleanColumn(column);\r\n}\r\nexport type ExtraColumnType = ExtraColumn['type'];\r\nexport function isExtraColumnType(obj: any): obj is ExtraColumnType {\r\n  return typeof obj === 'string' && ['text', 'integer', 'decimal', 'boolean'].indexOf(obj) !== -1;\r\n}\r\n/** All Journal Column types */\r\nexport type JournalColumn = ExtraColumn | DateColumn | AssetColumn;\r\nexport type JournalColumnType = JournalColumn['type'];\r\nexport function isJournalColumnType(obj: any): obj is JournalColumnType {\r\n  return typeof obj === 'string' && ['date', 'asset', 'text', 'integer', 'decimal', 'boolean'].indexOf(obj) !== -1;\r\n}\r\n/**\r\n * A transaction (trade, income or expense).\\\r\n * An income transaction has positive base and quote amounts.\\\r\n * An expense transaction has negative base and no quote amount.\\\r\n * A trade has opposite base and quote amount signs.\r\n * @param date Date of the transaction.\r\n * @param base Ticker of the base currency/asset.\r\n * @param baseAmount Amount of base changed, i.e. amount.\r\n * @param quote Ticker of the quote currency/asset.\r\n * @param quoteAmount Amount of quote changed, i.e. total.\r\n * @param feeBase Fee in base currency.\r\n * @param feeQuote Fee in quote currency.\r\n * @param notes User written notes.\r\n * @param extra Extra properties, e.g. `{exchange: 'NYSE'}`.\r\n */\r\n export interface Transaction {\r\n  date: string;\r\n  base: string;\r\n  baseAmount: number;\r\n  quote: string;\r\n  quoteAmount: number;\r\n  feeBase: number;\r\n  feeQuote: number;\r\n  notes: string;\r\n  extra: {[key: string]: (string | number | boolean)};\r\n}\r\n\r\nconst defaultColumnOrder: JournalColumnRole[] = ['date', 'base', 'baseAmount', 'quote', 'quoteAmount', 'price', 'feeBase', 'feeQuote', 'notes'];\r\nconst defaultAccountSettings: AccountSettings = {\r\n  accountingCurrency: {\r\n    ticker: 'USD',\r\n    name: 'United States Dollar',\r\n    precision: 2,\r\n    pricePrecision: 4,\r\n    isCurrency: true,\r\n    symbol: '$',\r\n  },\r\n};\r\nconst defaultAssets: Asset[] = [\r\n  {ticker: 'BTC', name: 'Bitcoin', precision: 8, pricePrecision: 2, isCurrency: true, symbol: '₿'},\r\n];\r\nconst defaultJournals: Journal[] = [\r\n  createTradingJournal('Trading', undefined, [\r\n    {\r\n      date: '01/01/2021',\r\n      base: 'BTC',\r\n      baseAmount: 1,\r\n      quote: 'USD',\r\n      quoteAmount: 50000,\r\n      feeBase: 0,\r\n      feeQuote: 20,\r\n      notes: 'First transaction',\r\n      extra: {}\r\n    },\r\n    {\r\n      date: '02/01/2021',\r\n      base: 'BTC',\r\n      baseAmount: 0.5,\r\n      quote: 'USD',\r\n      quoteAmount: 20000,\r\n      feeBase: 0,\r\n      feeQuote: 8,\r\n      notes: 'Second transaction',\r\n      extra: {}\r\n    },\r\n  ]),\r\n  createExpenseJournal('Misc fees'),\r\n];\r\n\r\nexport function createTradingColumns(dateColumnFormat: DateColumnFormat = 'date'): JournalColumnSet {\r\n  return {\r\n    date: {name: 'Date', format: dateColumnFormat, type: 'date', hide: false},\r\n    base: {name: 'Asset', type: 'asset', hide: false},\r\n    baseAmount: {name: 'Amount', type: 'decimal', description: 'base', precision: {}, hide: false},\r\n    quote: {name: 'Quote', type: 'asset', hide: true},\r\n    quoteAmount: {name: 'Total', type: 'decimal', description: 'quote', precision: {}, hide: false},\r\n    price: {name: 'Price', type: 'decimal', description: 'price', precision: {}, hide: false},\r\n    feeBase: {name: 'Fee (Base)', type: 'decimal', description: 'base', precision: {}, hide: true},\r\n    feeQuote: {name: 'Fee', type: 'decimal', description: 'quote', precision: {}, hide: false},\r\n    notes: {name: 'Notes', type: 'text', hide: false},\r\n    extra: [],\r\n  };\r\n}\r\n\r\nexport function createIncomeColumns(dateColumnFormat: DateColumnFormat = 'date'): JournalColumnSet {\r\n  return {\r\n    date: {name: 'Date', format: dateColumnFormat, type: 'date', hide: false},\r\n    base: {name: 'Asset', type: 'asset', hide: false},\r\n    baseAmount: {name: 'Amount', type: 'decimal', description: 'base', precision: {}, hide: false},\r\n    quote: {name: 'Quote', type: 'asset', hide: true},\r\n    quoteAmount: {name: 'Total', type: 'decimal', description: 'quote', precision: {}, hide: false},\r\n    price: {name: 'Price', type: 'decimal', description: 'price', precision: {}, hide: false},\r\n    feeBase: {name: 'Fee (Base)', type: 'decimal', description: 'base', precision: {}, hide: true},\r\n    feeQuote: {name: 'Fee', type: 'decimal', description: 'quote', precision: {}, hide: true},\r\n    notes: {name: 'Notes', type: 'text', hide: false},\r\n    extra: [],\r\n  };\r\n}\r\n\r\nexport function createExpenseColumns(dateColumnFormat: DateColumnFormat = 'date'): JournalColumnSet {\r\n  return {\r\n    date: {name: 'Date', format: dateColumnFormat, type: 'date', hide: false},\r\n    base: {name: 'Asset', type: 'asset', hide: false},\r\n    baseAmount: {name: 'Amount', type: 'decimal', description: 'base', precision: {}, hide: false},\r\n    quote: {name: 'Quote', type: 'asset', hide: true},\r\n    quoteAmount: {name: 'Total', type: 'decimal', description: 'quote', precision: {}, hide: false},\r\n    price: {name: 'Price', type: 'decimal', description: 'price', precision: {}, hide: false},\r\n    feeBase: {name: 'Fee (Base)', type: 'decimal', description: 'base', precision: {}, hide: true},\r\n    feeQuote: {name: 'Fee', type: 'decimal', description: 'quote', precision: {}, hide: true},\r\n    notes: {name: 'Notes', type: 'text', hide: false},\r\n    extra: [],\r\n  };\r\n}\r\n\r\nexport function createDefaultJournal(name: string, type: JournalType): Journal {\r\n  switch (type) {\r\n    case 'trading':\r\n      return createTradingJournal(name);\r\n    case 'income':\r\n      return createIncomeJournal(name);\r\n    case 'expense':\r\n      return createExpenseJournal(name);\r\n  }\r\n}\r\n\r\nexport function createTradingJournal(name: string, columnOrder: JournalColumnRole[] = defaultColumnOrder, transactions: Transaction[] = []): Journal {\r\n  return {\r\n    name: name,\r\n    type: 'trading',\r\n    columns: createTradingColumns(),\r\n    columnOrder: columnOrder,\r\n    transactions: transactions,\r\n  };\r\n}\r\n\r\nexport function createIncomeJournal(name: string, columnOrder: JournalColumnRole[] = defaultColumnOrder, transactions: Transaction[] = []): Journal {\r\n  return {\r\n    name: name,\r\n    type: 'income',\r\n    columns: createIncomeColumns(),\r\n    columnOrder: columnOrder,\r\n    transactions: transactions,\r\n  };\r\n}\r\n\r\nexport function createExpenseJournal(name: string, columnOrder: JournalColumnRole[] = defaultColumnOrder, transactions: Transaction[] = []): Journal {\r\n  return {\r\n    name: name,\r\n    type: 'expense',\r\n    columns: createExpenseColumns(),\r\n    columnOrder: columnOrder,\r\n    transactions: transactions,\r\n  };\r\n}\r\n\r\nexport function createDefaultAccount(name: string, settings = defaultAccountSettings, assets = defaultAssets, journals = defaultJournals): Account {\r\n  return {\r\n    name,\r\n    settings,\r\n    assets,\r\n    journals,\r\n  };\r\n}","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport type { RootState } from '../../app/store';\r\nimport {\r\n  Account,\r\n  Asset,\r\n  Journal,\r\n  JournalType,\r\n  JournalColumnRole,\r\n  JournalColumn,\r\n  ExtraColumn,\r\n  createDefaultAccount,\r\n  createDefaultJournal,\r\n  isDateColumn,\r\n  isAssetColumn,\r\n  isBaseAmountColumn,\r\n  isQuoteAmountColumn,\r\n  isPriceColumn,\r\n  isTextColumn,\r\n  isExtraColumn,\r\n} from '../../models/account';\r\n\r\ninterface State {\r\n  readonly accounts: Account[],\r\n  readonly activeAccount: number,\r\n}\r\n\r\nconst initialState: State = {\r\n  accounts: [],\r\n  activeAccount: 0,\r\n};\r\n\r\nexport const accountsSlice = createSlice({\r\n  name: 'transactions',\r\n  initialState: initialState,\r\n  reducers: {\r\n    /**\r\n     * Change the active account (-1 for all accounts). Negative numbers are evaluated as -1 (all accounts).\r\n     */\r\n    switchAccount: (state, action: PayloadAction<number>) => {\r\n      const accountIndex = action.payload;\r\n      state.activeAccount = Math.max(accountIndex, -1);\r\n    },\r\n    addAccount: (state, action: PayloadAction<Account>) => {\r\n      state.accounts.push(action.payload);\r\n    },\r\n    addDefaultAccount: (state, action: PayloadAction<string>) => {\r\n      const name = action.payload || 'New Account';\r\n      state.accounts.push(createDefaultAccount(name));\r\n    },\r\n    addTransaction: (state, action) => {\r\n      // Takes payload: {account: activeAccountIndex, transaction: Tx, journal: journalIndex}\r\n      const account = state.accounts[action.payload.account || state.activeAccount];\r\n      const journal = action.payload.journal;\r\n      const transaction = action.payload.transaction;\r\n      account.journals[journal].transactions.push(transaction);\r\n    },\r\n    changeAccountingCurrency: (state, action: PayloadAction<{account?: number, currency: Asset}>) => {\r\n      const { account: accountIndex, currency } = action.payload;\r\n      // Updates the active account if no account provided\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      account.settings.accountingCurrency = currency;\r\n    },\r\n    addAsset: (state, action: PayloadAction<{account?: number, asset: Asset}>) => {\r\n      const { account: accountIndex, asset } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      account.assets.push(asset);\r\n    },\r\n    editAsset: (state, action: PayloadAction<{account?: number, index: number, asset: Asset}>) => {\r\n      const { account: accountIndex, index, asset } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      // Only edit if the index is valid\r\n      if (account.assets[index] !== undefined) {\r\n        account.assets[index] = asset;\r\n      } else {\r\n        console.warn(`editAsset: Invalid index ${index} of assets array of length ${account.assets.length}.`);\r\n      }\r\n    },\r\n    deleteAsset: (state, action: PayloadAction<{account?: number, index: number}>) => {\r\n      const { account: accountIndex, index } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      account.assets.splice(index, 1);\r\n    },\r\n    addJournal: (state, action: PayloadAction<{account?: number, journal: Journal}>) => {\r\n      // Payload: {account: int?, journal: Journal (except column settings)}\r\n      const { account: accountIndex, journal } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      account.journals.push(journal);\r\n    },\r\n    addDefaultJournal: (state, action: PayloadAction<{account?: number, name: string, type: JournalType}>) => {\r\n      const { account: accountIndex, name, type } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      account.journals.push(createDefaultJournal(name, type));\r\n    },\r\n    editJournalSettings: (state, action: PayloadAction<{account?: number, index: number, name: string, type: JournalType}>) => {\r\n      const { account: accountIndex, index, name, type } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      if (account.journals[index] !== undefined) {\r\n        const journal = account.journals[index];\r\n        account.journals[index] = {...journal, name: name, type: type};\r\n      } else {\r\n        console.warn(`editJournalSettings: Invalid index ${index} of journals array of length ${account.journals.length}.`);\r\n      }\r\n    },\r\n    deleteJournal: (state, action: PayloadAction<{account?: number, index: number}>) => {\r\n      const { account: accountIndex, index } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      account.journals.splice(index, 1);\r\n    },\r\n    addJournalColumn: (state, action: PayloadAction<{account?: number, index: number, column: ExtraColumn}>) => {\r\n      const { account: accountIndex, index, column } = action.payload;\r\n      // Updates the active account if no account provided\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      account.journals[index].columns.extra.push(column);\r\n      // Add column to the end of column order\r\n      const extraColumnsLength = account.journals[index].columns.extra.length;\r\n      account.journals[index].columnOrder.push(extraColumnsLength - 1);\r\n    },\r\n    editJournalColumn: (state, action: PayloadAction<{account?: number, index: number, role: JournalColumnRole, column: JournalColumn}>) => {\r\n      const { account: accountIndex, index, role, column } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      if (typeof role === 'string') {\r\n        // Core column\r\n        if (role === 'date' && isDateColumn(column)) {\r\n          account.journals[index].columns[role] = column;\r\n        } else if (role === 'base' && isAssetColumn(column)) {\r\n          account.journals[index].columns[role] = column;\r\n        } else if (role === 'baseAmount' && isBaseAmountColumn(column)) {\r\n          account.journals[index].columns[role] = column;\r\n        } else if (role === 'quote' && isAssetColumn(column)) {\r\n          account.journals[index].columns[role] = column;\r\n        } else if (role === 'quoteAmount' && isQuoteAmountColumn(column)) {\r\n          account.journals[index].columns[role] = column;\r\n        } else if (role === 'price' && isPriceColumn(column)) {\r\n          account.journals[index].columns[role] = column;\r\n        } else if (role === 'feeBase' && isBaseAmountColumn(column)) {\r\n          account.journals[index].columns[role] = column;\r\n        } else if (role === 'feeQuote' && isQuoteAmountColumn(column)) {\r\n          account.journals[index].columns[role] = column;\r\n        } else if (role === 'notes' && isTextColumn(column)) {\r\n          account.journals[index].columns[role] = column;\r\n        } else {\r\n          console.warn(`editJournalColumn: Column does not match core column role: ${role}.`);\r\n        }\r\n      } else {    // Implicit typeof column === 'number'\r\n        if (isExtraColumn(column)) {\r\n          account.journals[index].columns.extra[role] = column;\r\n        } else {\r\n          console.warn(`editJournalColumn: Column is not an ExtraColumn for role: ${role}.`);\r\n        }\r\n      }\r\n    },\r\n    deleteJournalColumn: (state, action: PayloadAction<{account?: number, journalIndex: number, columnIndex: number}>) => {\r\n      const { account: accountIndex, journalIndex, columnIndex } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      if (columnIndex >= 0 && columnIndex < account.journals[journalIndex]?.columns.extra.length) {\r\n        account.journals[journalIndex].columns.extra.splice(columnIndex, 1);\r\n        // Delete column from column order. The numberic JournalColumnRoles cascade down to preserve the column order after deletion.\r\n        const extraColumnsLength = account.journals[journalIndex].columns.extra.length;\r\n        const deletedColIndex = account.journals[journalIndex].columnOrder.indexOf(columnIndex);\r\n        if (deletedColIndex !== -1) {\r\n          account.journals[journalIndex].columnOrder.splice(deletedColIndex, 1);\r\n        }\r\n        for (let i = columnIndex + 1; i <= extraColumnsLength; i++) {\r\n          const colIndex = account.journals[journalIndex].columnOrder.indexOf(i);\r\n          if (colIndex !== -1) {\r\n            account.journals[journalIndex].columnOrder[colIndex] = i - 1;\r\n          }\r\n        }\r\n      } else {\r\n        console.warn(`deleteJournalColumn: Invalid column selectors journalIndex: ${journalIndex} and columnIndex: ${columnIndex}.`);\r\n      }\r\n    },\r\n    editJournalColumnOrder: (state, action: PayloadAction<{account?: number, index: number, columnOrder: JournalColumnRole[]}>) => {\r\n      const { account: accountIndex, index, columnOrder } = action.payload;\r\n      const account = state.accounts[accountIndex ?? state.activeAccount];\r\n      if (account.journals[index] !== undefined) {\r\n        account.journals[index].columnOrder = columnOrder;\r\n      } else {\r\n        console.warn(`editJournalColumnOrder: Invalid index ${index} for column order of length: ${account.journals.length}.`);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\n// Actions\r\nexport const {\r\n  switchAccount,\r\n  addAccount,\r\n  addDefaultAccount,\r\n  addTransaction,\r\n  changeAccountingCurrency,\r\n  addAsset,\r\n  editAsset,\r\n  deleteAsset,\r\n  addJournal,\r\n  addDefaultJournal,\r\n  editJournalSettings,\r\n  deleteJournal,\r\n  addJournalColumn,\r\n  editJournalColumn,\r\n  deleteJournalColumn,\r\n  editJournalColumnOrder,\r\n} = accountsSlice.actions;\r\n\r\n// Selectors\r\n// TODO consider selector errors\r\nexport const selectAccounts = (state: RootState) => state.accounts.accounts;\r\nexport const selectActiveAccountIndex = (state: RootState) => state.accounts.activeAccount;\r\nexport const selectActiveAccount = (state: RootState) => {\r\n  const accounts = selectAccounts(state);\r\n  const activeAccount = selectActiveAccountIndex(state);\r\n  return activeAccount < accounts.length ? accounts[activeAccount] : null;\r\n}\r\nexport const selectActiveAccountName = (state: RootState) => {\r\n  const activeAccount = selectActiveAccount(state);\r\n  return activeAccount ? activeAccount.name : 'No account selected';\r\n}\r\nexport const selectActiveAccountAccountingCurrency = (state: RootState) => {\r\n  const activeAccount = selectActiveAccount(state);\r\n  return activeAccount ? activeAccount.settings.accountingCurrency : null;\r\n}\r\nexport const selectActiveAccountAssets = (state: RootState) => {\r\n  const activeAccount = selectActiveAccount(state);\r\n  return activeAccount ? activeAccount.assets : [];\r\n}\r\nexport const selectActiveAccountJournals = (state: RootState) => {\r\n  const activeAccount = selectActiveAccount(state);\r\n  return activeAccount ? activeAccount.journals : [];\r\n}\r\n\r\nexport default accountsSlice.reducer;","export const drawerWidth = '15rem';","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport clsx from 'clsx'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ArrowDropDownCircleIcon from '@material-ui/icons/ArrowDropDownCircle';\r\nimport { selectAccounts, selectActiveAccountIndex, selectActiveAccountName, switchAccount } from '../accounts/accountsSlice';\r\nimport { drawerWidth } from '../../constants';\r\n\r\ninterface Props {\r\n  readonly drawerOpen: boolean;\r\n  readonly onMenuClick?: React.MouseEventHandler<HTMLButtonElement>;\r\n}\r\n\r\nconst useStyles = makeStyles<Theme, Props>(theme => ({\r\n  root: {\r\n\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    display: props => props.drawerOpen ? 'none' : 'initial'\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarDrawerOpen: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth})`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  }\r\n}));\r\n\r\nfunction TopAppBar(props: Props) {\r\n  const classes = useStyles(props);\r\n  // Controls the showing of the \"change account\" menu\r\n  const [menuAnchor, setMenuAnchor] = useState<Element | null>(null);\r\n  const dispatch = useDispatch();\r\n  const accounts = useSelector(selectAccounts);\r\n  const activeAccountIndex = useSelector(selectActiveAccountIndex);\r\n  const activeAccountName = useSelector(selectActiveAccountName);\r\n\r\n  const handleSwitchAccount = (index: number) => {\r\n    dispatch(switchAccount(index));\r\n    setMenuAnchor(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarDrawerOpen]: props.drawerOpen\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            onClick={props.onMenuClick}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            className={classes.menuButton}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">{ activeAccountName }</Typography>\r\n          <IconButton\r\n            onClick={(e) => setMenuAnchor(e.currentTarget)}\r\n            color=\"inherit\"\r\n            aria-label=\"Change account\"\r\n            aria-haspopup=\"true\"\r\n          >\r\n            <ArrowDropDownCircleIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Menu\r\n        anchorEl={menuAnchor}\r\n        open={Boolean(menuAnchor)}\r\n        onClose={() => setMenuAnchor(null)}\r\n      >\r\n        {accounts.map((a, index) => (\r\n          <MenuItem onClick={() => handleSwitchAccount(index)} selected={activeAccountIndex === index} key={index}>\r\n            { a.name }\r\n          </MenuItem>\r\n        ))}\r\n        <MenuItem>All Accounts</MenuItem>\r\n        <MenuItem>Create New Account</MenuItem>\r\n      </Menu>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TopAppBar;","import { Link, useLocation } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport BookIcon from '@material-ui/icons/Book';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport { drawerWidth } from '../../constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    \r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // Have the same height as the top app bar\r\n    ...theme.mixins.toolbar\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    whiteSpace: 'nowrap',   // Prevent text wrapping when closing the drawer\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerClose: {\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7),\r\n    // Have extra space for the scrollbar if needed\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  }\r\n}));\r\n\r\n/**\r\n * See\r\n * - https://material-ui.com/components/drawers/#mini-variant-drawer\r\n * - https://material-ui.com/api/drawer/\r\n * - https://github.com/mui-org/material-ui/blob/master/docs/src/pages/getting-started/templates/dashboard/Dashboard.js\r\n * - https://material-ui.com/getting-started/templates/dashboard/\r\n */\r\nfunction SideDrawer(props) {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const path = location.pathname;\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      anchor=\"left\"\r\n      classes={{\r\n        paper: clsx({\r\n          [classes.drawerOpen]: props.open,\r\n          [classes.drawerClose]: !props.open\r\n        })\r\n      }}\r\n      className={clsx(classes.drawer, {\r\n        [classes.drawerOpen]: props.open,\r\n        [classes.drawerClose]: !props.open\r\n      })}\r\n    >\r\n      <div className={classes.toolbar}>\r\n        <IconButton onClick={props.onClose}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List component=\"nav\" aria-label=\"Journals\">\r\n        <ListItem\r\n          button\r\n          component={Link}\r\n          to={'/journals'}\r\n          selected={path === '/journals' || path === '/'}\r\n        >\r\n          <ListItemIcon>\r\n            <CreateIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Journals\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          component={Link}\r\n          to={'/capital-changes'}\r\n          selected={path === '/capital-changes'}\r\n        >\r\n          <ListItemIcon>\r\n            <CreateIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Capital changes\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          component={Link}\r\n          to={'/asset-statements'}\r\n          selected={path === '/asset-statements'}\r\n        >\r\n          <ListItemIcon>\r\n            <BookIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Asset Statements\" />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List component=\"nav\" aria-label=\"Financials\">\r\n        <ListSubheader inset disableSticky={true}>Financials</ListSubheader>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <AssignmentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Monthly\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <AssignmentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Quarterly\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <AssignmentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Biyearly\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <AssignmentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Yearly\" />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List component=\"nav\" aria-label=\"Account settings\">\r\n        <ListItem\r\n          button\r\n          component={Link}\r\n          to={'/account-settings'}\r\n          selected={path === '/account-settings'}\r\n        >\r\n          <ListItemIcon>\r\n            <SettingsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Account settings\" />\r\n        </ListItem>\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default SideDrawer;","import { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\ninterface Props {\r\n  objectName?: string;\r\n  edit?: boolean;\r\n  open: boolean;\r\n  onClose?: React.MouseEventHandler<HTMLButtonElement>;\r\n  onReset?: React.MouseEventHandler<HTMLButtonElement>;\r\n  onSubmit?: React.MouseEventHandler<HTMLButtonElement>;\r\n  onEnter?: (node: HTMLElement, isAppearing: boolean) => void;\r\n  dividers?: boolean;\r\n  children?: React.ReactNode;\r\n  contentMaxWidth?: string;\r\n}\r\n\r\nconst useStyles = makeStyles<Theme, Props>(theme => ({\r\n  content: props => ({\r\n    maxWidth: props.contentMaxWidth,\r\n  }),\r\n}));\r\n\r\n/**\r\n * A dialog to add or edit an object.\r\n * \r\n * Props:\r\n * - objectName: Name of the object to add or edit. Appears in the title.\r\n * - edit: true for edit mode, false for add mode (affects text).\r\n * - open: Dialog shows if true.\r\n * - onClose - Function called when the dialog requests to be closed (cancel button or click away).\r\n * - onEnter - Function called before the dialog is opened.\r\n * - onReset - Function called when the \"reset\" button is clicked.\r\n * - onSubmit - Function called when the \"Add/Edit\" button is clicked.\r\n * - dividers - Display the DialogContent dividers if true.\r\n * - contentMaxWidth - The maximum width of the dialog content.\r\n */\r\nfunction AddEditDialog({objectName = 'Item', ...props}: Props) {\r\n  const classes = useStyles(props);\r\n  return (\r\n    <Dialog open={props.open} onClose={props.onClose} onEnter={props.onEnter}>\r\n      <DialogTitle>{ `${props.edit ? 'Edit' : 'Add'} ${objectName}` }</DialogTitle>\r\n      <DialogContent dividers={props.dividers} className={classes.content}>\r\n        { props.children }\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.onClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={props.onReset} color=\"primary\">\r\n          Reset\r\n        </Button>\r\n        <Button onClick={props.onSubmit} color=\"primary\">\r\n          { props.edit ? 'Edit' : 'Add' }\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default AddEditDialog;","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport AddEditDialog from '../../components/AddEditDialog';\r\nimport { addTransaction, selectActiveAccount } from '../accounts/accountsSlice';\r\nimport { Transaction } from '../../models/account';\r\n\r\n/**\r\n * @returns The current local date and time in \"yyyy-mm-ddThh:mm:ss\" format.\r\n */\r\nfunction getCurrentLocalDateTime() {\r\n  const currentDateTime = new Date();\r\n  return new Date(currentDateTime - currentDateTime.getTimezoneOffset() * 60 * 1000).toISOString().slice(0, 19);\r\n}\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n\r\n//   },\r\n// }));\r\n\r\nfunction AddEditTransactionDialog(props) {\r\n  // const classes = useStyles();\r\n  const [fields, setFields] = useState({\r\n    date: '',\r\n    base: '',\r\n    quote: '',\r\n    trade: '',\r\n    baseAmount: '',\r\n    quoteAmount: '',\r\n    price: '',\r\n    fee: '',\r\n    feeCurrency: '',\r\n    notes: '',\r\n  });\r\n  const dispatch = useDispatch();\r\n  const account = useSelector(selectActiveAccount);\r\n\r\n  const resetForm = () => {\r\n    setFields({\r\n      date: getCurrentLocalDateTime(),\r\n      base: '',\r\n      quote: account ? account.settings.accountingCurrency.ticker : '',\r\n      trade: 'buy',\r\n      baseAmount: '',\r\n      quoteAmount: '',\r\n      price: 0,\r\n      fee: 0,\r\n      feeCurrency: 'quote',\r\n      notes: '',\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // TODO input validation\r\n    dispatch(addTransaction({\r\n      journal: props.index,\r\n      transaction: {\r\n        date: fields.date,\r\n        base: fields.base,\r\n        baseAmount: fields.baseAmount,\r\n        quote: fields.quote,\r\n        quoteAmount: fields.quoteAmount,\r\n        feeBase: 0,\r\n        feeQuote: fields.fee,\r\n        notes: fields.notes,\r\n      },\r\n    }));\r\n    props.onDialogClose();\r\n  };\r\n  const handleDialogOpen = () => {\r\n    // Init form fields according to add or edit mode\r\n    if (props.edit) {\r\n      \r\n    } else {\r\n      resetForm();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AddEditDialog\r\n      objectName={'Transaction'}\r\n      edit={Boolean(props.edit)}\r\n      open={props.open}\r\n      onClose={props.onDialogClose}\r\n      onEnter={handleDialogOpen}\r\n      onReset={resetForm}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            type=\"datetime-local\"\r\n            size=\"small\"\r\n            label=\"Date\"\r\n            required\r\n            value={fields.date}\r\n            onChange={(e) => setFields(s => ({...s, date: e.target.value}))}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <TextField\r\n            type=\"number\"\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Amount\"\r\n            required\r\n            value={fields.baseAmount}\r\n            onChange={(e) => setFields(s => ({...s, baseAmount: e.target.value}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            select\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Asset\"\r\n            required\r\n            value={fields.base}\r\n            onChange={(e) => setFields(s => ({...s, base: e.target.value}))}\r\n          >\r\n            <MenuItem value={'USD'}>{ 'USD' }</MenuItem>\r\n            <MenuItem value={'BTC'}>{ 'BTC' }</MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <TextField\r\n            type=\"number\"\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Total\"\r\n            required\r\n            value={fields.quoteAmount}\r\n            onChange={(e) => setFields(s => ({...s, quoteAmount: e.target.value}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            select\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Quote Currency\"\r\n            required\r\n            value={fields.quote}\r\n            onChange={(e) => setFields(s => ({...s, quote: e.target.value}))}\r\n          >\r\n            <MenuItem value={'USD'}>{ 'USD' }</MenuItem>\r\n            <MenuItem value={'BTC'}>{ 'BTC' }</MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <TextField\r\n            type=\"number\"\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Price\"\r\n            required\r\n            value={fields.price}\r\n            onChange={(e) => setFields(s => ({...s, price: e.target.value}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            select\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Trade Type\"\r\n            required\r\n            value={fields.trade}\r\n            onChange={(e) => setFields(s => ({...s, trade: e.target.value}))}\r\n          >\r\n            <MenuItem value={'buy'}>{ 'Buy' }</MenuItem>\r\n            <MenuItem value={'sell'}>{ 'Sell' }</MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <TextField\r\n            type=\"number\"\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Fee\"\r\n            value={fields.fee}\r\n            onChange={(e) => setFields(s => ({...s, fee: e.target.value}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <TextField\r\n            select\r\n            fullWidth\r\n            size=\"small\"\r\n            label=\"Fee Currency\"\r\n            value={fields.feeCurrency}\r\n            onChange={(e) => setFields(s => ({...s, feeCurrency: e.target.value}))}\r\n          >\r\n            <MenuItem value={'base'}>{ 'Base' }</MenuItem>\r\n            <MenuItem value={'quote'}>{ 'Quote' }</MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            multiline\r\n            fullWidth\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            label=\"Notes\"\r\n            value={fields.notes}\r\n            onChange={(e) => setFields(s => ({...s, notes: e.target.value}))}\r\n          >\r\n            <MenuItem value={'base'}>{ 'Base' }</MenuItem>\r\n            <MenuItem value={'quote'}>{ 'Quote' }</MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n      </Grid>\r\n    </AddEditDialog>\r\n  );\r\n}\r\n\r\nexport default AddEditTransactionDialog;","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddEditDialog from '../../components/AddEditDialog';\r\nimport { addJournalColumn, editJournalColumn, selectActiveAccountJournals } from './accountsSlice';\r\nimport {\r\n  Journal,\r\n  JournalColumn,\r\n  JournalColumnRole,\r\n  JournalColumnType,\r\n  isDateColumnFormat,\r\n  isExtraColumn,\r\n  isDecimalColumnDescription,\r\n  isJournalColumnType,\r\n} from '../../models/account';\r\nimport { journalColumnRoleDisplay } from '../../models/accountFunctions';\r\n\r\ninterface FormFields {\r\n  name: string;\r\n  type: string;\r\n  hide: boolean;\r\n  precision: Record<string, number>;\r\n  decimalColumnDescription: string;\r\n  dateFormat: string,\r\n}\r\n\r\nconst initialFormFields: Readonly<FormFields> = {\r\n  name: '',\r\n  type: 'text',\r\n  hide: false,\r\n  precision: {},\r\n  decimalColumnDescription: 'base',\r\n  dateFormat: 'date',\r\n};\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  onDialogClose?: () => void;\r\n  index: number;\r\n  role?: JournalColumnRole | null;\r\n}\r\n\r\n/**\r\n * React component. Add or change journal column dialog.\r\n * \r\n * Props:\r\n * - open: Dialog shows if true.\r\n * - onDialogClose: Function called when the dialog requests to be closed.\r\n * - index: The index of the journal selected.\r\n * - role: The column role of the selected journal to edit. Set to nullish value to add a new column.\r\n */\r\nfunction AddEditJournalColumnDialog(props: Readonly<Props>) {\r\n  const { open, onDialogClose, index, role } = props;\r\n  const [fields, setFields] = useState<Readonly<FormFields>>(initialFormFields);\r\n  const dispatch = useDispatch();\r\n  const journals = useSelector(selectActiveAccountJournals);\r\n  // journalIndex is set to -1 initially\r\n  const journal = journals[index] as Journal | undefined;\r\n  // column is the selected column if the props index and role are valid, else undefined\r\n  const column = typeof role === 'string' ? journal?.columns[role] : journal?.columns.extra[role ?? -1];\r\n\r\n  const handleReset = () => { \r\n    if (column) {\r\n      setFields({\r\n        name: column.name,\r\n        type: column.type,\r\n        hide: column.hide,\r\n        precision: column.type === 'decimal' ? column.precision : initialFormFields.precision,\r\n        decimalColumnDescription: column.type === 'decimal' ? column.description : initialFormFields.decimalColumnDescription,\r\n        dateFormat: column.type === 'date' ? column.format : initialFormFields.dateFormat,\r\n      });\r\n    } else {\r\n      setFields(initialFormFields);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    // Core columns cannot change type\r\n    // Use default column type 'text' if type field is invalid\r\n    const newType: JournalColumnType = (column && typeof role === 'string')\r\n      ? column.type :\r\n      (isJournalColumnType(fields.type) ? fields.type : 'text');\r\n      // Construct the new column piece by piece\r\n    const partialColumn = {name: fields.name, hide: fields.hide};\r\n    switch (newType) {\r\n      case 'text':\r\n      case 'integer':\r\n      case 'boolean':\r\n      case 'asset':\r\n        addOrEditJournalColumn({...partialColumn, type: newType});\r\n        break;\r\n      case 'date':\r\n        // Default format is 'date' if the date format field is invalid\r\n        addOrEditJournalColumn({\r\n          ...partialColumn,\r\n          type: newType,\r\n          format: isDateColumnFormat(fields.dateFormat) ? fields.dateFormat : 'date',\r\n        });\r\n        break;\r\n      case 'decimal':\r\n        // Default description is 'base' if the date format field is invalid\r\n        addOrEditJournalColumn({\r\n          ...partialColumn,\r\n          type: newType,\r\n          precision: fields.precision,\r\n          description: isDecimalColumnDescription(fields.decimalColumnDescription) ? fields.decimalColumnDescription : 'base',\r\n        });\r\n        break;\r\n      default:\r\n        console.warn(`handleSubmit: Unreachable code: newType (${newType}) should be exhausted.`);\r\n    }\r\n    onDialogClose?.();\r\n  };\r\n\r\n  const addOrEditJournalColumn = (newColumn: JournalColumn) => {\r\n    if (column && role !== null && role !== undefined) {\r\n      dispatch(editJournalColumn({index: index, role: role, column: newColumn}));\r\n    } else {\r\n      if (isExtraColumn(newColumn)) {\r\n        dispatch(addJournalColumn({index: index, column: newColumn}));\r\n      } else {\r\n        console.warn(`addOrEditJournalColumn: Tried to add a new column that is not an ExtraColumn:\\n${JSON.stringify(newColumn, undefined, 2)}.`);\r\n      }\r\n    }\r\n  };\r\n\r\n  // TODO: edit precision for decimal columns\r\n  return (\r\n    <AddEditDialog\r\n      objectName={'Journal Column'}\r\n      edit={Boolean(column)}\r\n      open={open}\r\n      onClose={onDialogClose}\r\n      onEnter={handleReset}\r\n      onReset={handleReset}\r\n      onSubmit={handleSubmit}\r\n      contentMaxWidth=\"30rem\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            type=\"text\"\r\n            label=\"Role\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={journalColumnRoleDisplay(role ?? journal?.columns.extra.length ?? 0)}\r\n            disabled\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            type=\"text\"\r\n            label=\"Column Name\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={fields.name}\r\n            onChange={(e) => setFields(s => ({...s, name: e.target.value}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={8}>\r\n          <TextField\r\n            select\r\n            label=\"Type\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            disabled={typeof role === 'string'}\r\n            value={fields.type}\r\n            onChange={(e) => setFields(s => ({...s, type: e.target.value}))}\r\n          >\r\n            <MenuItem value=\"text\">Text</MenuItem>\r\n            <MenuItem value=\"decimal\">Decimal</MenuItem>\r\n            <MenuItem value=\"integer\">Integer</MenuItem>\r\n            <MenuItem value=\"boolean\">Boolean</MenuItem>\r\n            {typeof role === 'string' && [\r\n              <MenuItem value=\"date\" key=\"date\">Date</MenuItem>,\r\n              <MenuItem value=\"asset\" key=\"asset\">Asset</MenuItem>,\r\n            ]}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <FormControlLabel\r\n            control={<Checkbox />}\r\n            checked={fields.hide}\r\n            onChange={(e, checked) => setFields(s => ({...s, hide: checked}))}\r\n            label=\"Hide\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            select\r\n            label=\"Description (Decimal)\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required={fields.type === 'decimal'}\r\n            disabled={fields.type !== 'decimal'}\r\n            value={fields.decimalColumnDescription}\r\n            onChange={(e) => setFields(s => ({...s, decimalColumnDescription: e.target.value}))}\r\n          >\r\n            <MenuItem value=\"base\">Base</MenuItem>\r\n            <MenuItem value=\"quote\">Quote</MenuItem>\r\n            <MenuItem value=\"price\">Price</MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            select\r\n            label=\"Date Format\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required={fields.type === 'date'}\r\n            disabled={fields.type !== 'date'}\r\n            value={fields.dateFormat}\r\n            onChange={(e) => setFields(s => ({...s, dateFormat: e.target.value}))}\r\n          >\r\n            <MenuItem value=\"date\">Date</MenuItem>\r\n            <MenuItem value=\"datetime\">Date & Time</MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n      </Grid>\r\n    </AddEditDialog>\r\n  );\r\n}\r\n\r\nexport default AddEditJournalColumnDialog;","\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Box from '@material-ui/core/Box';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport AddEditTransactionDialog from './AddEditTransactionDialog';\r\nimport { selectActiveAccountJournals } from '../accounts/accountsSlice';\r\nimport { Journal, JournalColumnRole, Transaction } from '../../models/account';\r\nimport AddEditJournalColumnDialog from '../accounts/AddEditJournalColumnDialog';\r\n\r\ninterface JournalHeadersProps {\r\n  journal: Journal,\r\n  onSettingsClick?: (role: JournalColumnRole) => void,\r\n}\r\n\r\nconst useJournalHeadersStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: '1px solid rgba(224, 224, 224, 1)',\r\n      borderRight: '1px solid rgba(224, 224, 224, 1)',\r\n      '&:last-child': {\r\n        borderRight: 'none',\r\n      },\r\n    },\r\n  },\r\n  columnSettings: {\r\n    marginLeft: 'auto',\r\n  },\r\n}));\r\n\r\nfunction JournalHeaders(props: Readonly<JournalHeadersProps>) {\r\n  const classes = useJournalHeadersStyles();\r\n\r\n  return (\r\n    <TableRow className={classes.root}>\r\n        {props.journal.columnOrder.map((role) => {\r\n          const column = typeof role === 'string' ? props.journal.columns[role] : props.journal.columns.extra[role];\r\n          return !column.hide && <TableCell key={role}>\r\n            <Box display=\"flex\">\r\n              {column.name}\r\n              <IconButton\r\n                size=\"small\"\r\n                edge=\"end\"\r\n                onClick={() => props.onSettingsClick?.(role)}\r\n                className={classes.columnSettings}\r\n              >\r\n                <SettingsIcon fontSize=\"small\" style={{fontSize:'1rem'}} />\r\n              </IconButton>\r\n            </Box>\r\n          </TableCell>;\r\n        })}\r\n    </TableRow>\r\n  );\r\n}\r\n\r\ninterface JournalRowProps {\r\n  journal: Journal,\r\n  transaction: Transaction,\r\n}\r\n\r\nconst useJournalRowStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: '1px solid rgba(224, 224, 224, 1)',\r\n      borderRight: '1px solid rgba(224, 224, 224, 1)',\r\n      '&:last-child': {\r\n        borderRight: 'none',\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nfunction JournalRow(props: Readonly<JournalRowProps>) {\r\n  const { journal, transaction } = props;\r\n  const classes = useJournalRowStyles();\r\n\r\n  return (\r\n    <TableRow hover className={classes.root}>\r\n      {journal.columnOrder.map((role) => {\r\n        const column = typeof role === 'string' ? journal.columns[role] : journal.columns.extra[role];\r\n        let data: string | number | boolean;\r\n        if (role === 'price') {\r\n          data = transaction.quoteAmount / transaction.baseAmount;\r\n        } else if (typeof role === 'string') {\r\n          data = props.transaction[role];\r\n        } else {\r\n          data = props.transaction.extra[column.name];\r\n          // Convert boolean data to readable values\r\n          if (typeof data === 'boolean') data = data ? 'Yes' : 'No';\r\n        }\r\n        return !column.hide && <TableCell key={role}>\r\n          { data }\r\n        </TableCell>;\r\n      })}\r\n    </TableRow>\r\n  );\r\n}\r\n\r\ninterface JournalSheetProps {\r\n  journal: number,\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    borderRadius: 0,\r\n    boxShadow: 'none',\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction JournalSheet(props: Readonly<JournalSheetProps>) {\r\n  const classes = useStyles();\r\n  const [transactionDialogOpen, setTransactionDialogOpen] = useState(false);\r\n  const [selectedTransaction, setSelectedTransaction] = useState<Transaction | null>(null);\r\n  const [journalColumnDialogOpen, setJournalColumnDialogOpen] = useState(false);\r\n  const [selectedJournalColumn, setSelectedJournalColumn] = useState<JournalColumnRole | null>(null);\r\n  const journals = useSelector(selectActiveAccountJournals);\r\n  const journal = journals[props.journal];\r\n\r\n  const openAddDialog = () => {\r\n    setSelectedTransaction(null);\r\n    setTransactionDialogOpen(true);\r\n  };\r\n\r\n  const openEditDialog = (tx: Transaction) => {\r\n    setSelectedTransaction(null);\r\n    setTransactionDialogOpen(true);\r\n  };\r\n\r\n  const openJournalColumnDialog = (role: JournalColumnRole) => {\r\n    setSelectedJournalColumn(role);\r\n    setJournalColumnDialogOpen(true);\r\n  };\r\n\r\n  return (\r\n    <div role=\"tabpanel\">\r\n      <TableContainer component={Paper} className={classes.root}>\r\n        <Table\r\n          size=\"small\"\r\n          stickyHeader\r\n        >\r\n          <TableHead>\r\n            <JournalHeaders journal={journal} onSettingsClick={openJournalColumnDialog} />\r\n          </TableHead>\r\n          <TableBody>\r\n            {journal.transactions.map((tx, index) => (\r\n              <JournalRow journal={journal} transaction={tx} key={index} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Fab color=\"secondary\" className={classes.fab} onClick={openAddDialog}>\r\n        <AddIcon />\r\n      </Fab>\r\n      <AddEditTransactionDialog\r\n        journal={journal}\r\n        edit={selectedTransaction}\r\n        open={transactionDialogOpen}\r\n        onDialogClose={() => setTransactionDialogOpen(false)}\r\n      />\r\n      <AddEditJournalColumnDialog\r\n        index={props.journal}\r\n        role={selectedJournalColumn}\r\n        open={journalColumnDialogOpen}\r\n        onDialogClose={() => setJournalColumnDialogOpen(false)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default JournalSheet;","import Typography from '@material-ui/core/Typography';\r\n\r\nfunction AddTransactionTypeForm(props) {\r\n\r\n  return props.active && (\r\n    <div role=\"tabpanel\">\r\n      <Typography variant=\"h3\">Add Transaction Type</Typography>\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default AddTransactionTypeForm;","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport JournalSheet from './JournalSheet';\r\nimport AddTransactionTypeForm from './AddTransactionTypeForm';\r\nimport { selectActiveAccountJournals } from '../accounts/accountsSlice';\r\n\r\nfunction Journals() {\r\n  const [activeTab, setActiveTab] = useState<number>(0);\r\n  const journals = useSelector(selectActiveAccountJournals);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={activeTab} onChange={(e, v) => setActiveTab(v)} aria-label=\"Journals tab\">\r\n          {journals.map((journal, index) =>\r\n            <Tab label={journal.name} key={index} aria-label={`${journal.name} tab`} />\r\n          )}\r\n          <Tab icon={<AddIcon />} />\r\n        </Tabs>\r\n      </AppBar>\r\n      {/* TODO update key */}\r\n      {journals.map((journal, index) =>\r\n        (activeTab === index) && <JournalSheet journal={index} key={index} />\r\n      )}\r\n      <AddTransactionTypeForm\r\n        index={journals.length}\r\n        active={activeTab === journals.length}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Journals;","\r\n\r\nfunction CapitalChanges(props) {\r\n  return (\r\n    <p>Capital Changes</p>\r\n  );\r\n}\r\n  \r\nexport default CapitalChanges;","\r\n\r\nfunction AssetStatements(props) {\r\n    return (\r\n      <p>Asset Statements</p>\r\n    );\r\n  }\r\n    \r\n  export default AssetStatements;","import { useState } from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport AddEditDialog from '../../components/AddEditDialog';\r\nimport { Asset } from \"../../models/account\";\r\n\r\nexport interface FormFields {\r\n  name: string,\r\n  ticker: string,\r\n  precision: number,\r\n  pricePrecision: number,\r\n  isCurrency: boolean;\r\n  symbol: string;\r\n}\r\n\r\nconst initialFormFields: FormFields = {\r\n  name: '',\r\n  ticker: '',\r\n  precision: 2,\r\n  pricePrecision: 2,\r\n  isCurrency: false,\r\n  symbol: '',\r\n};\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  onDialogClose?: () => void;\r\n  asset?: Asset | null;\r\n  onSubmit?: (fields: FormFields) => void;\r\n}\r\n\r\n/**\r\n * Add or change asset dialog React function component.\r\n * \r\n * Props:\r\n * - open: Dialog shows if true.\r\n * - onDialogClose: Function called when the dialog requests to be closed.\r\n * - asset: Asset object to edit, null if add new asset.\r\n * - onSubmit: Function called when the add/edit button is pressed.\r\n */\r\nfunction AddEditAssetDialog(props: Readonly<Props>) {\r\n  const { open, asset, onDialogClose, onSubmit } = props;\r\n  const [fields, setFields] = useState(initialFormFields);\r\n\r\n  const handleReset = () => {\r\n    if (asset) {\r\n      setFields({\r\n        name: asset.name,\r\n        ticker: asset.ticker,\r\n        precision: asset.precision,\r\n        pricePrecision: asset.pricePrecision,\r\n        isCurrency: asset.isCurrency,\r\n        symbol: asset.symbol ?? '',\r\n      });\r\n    } else {\r\n      setFields(initialFormFields);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AddEditDialog\r\n      objectName={'Asset'}\r\n      edit={Boolean(asset)}\r\n      open={open}\r\n      onClose={onDialogClose}\r\n      onEnter={handleReset}\r\n      onReset={handleReset}\r\n      onSubmit={() => onSubmit?.(fields)}\r\n      contentMaxWidth=\"30rem\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            type=\"text\"\r\n            label=\"Asset Name\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={fields.name}\r\n            onChange={(e) => setFields(s => ({...s, name: e.target.value}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <TextField\r\n            type=\"text\"\r\n            label=\"Ticker\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={fields.ticker}\r\n            onChange={(e) => setFields(s => ({...s, ticker: e.target.value}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <TextField\r\n            type=\"text\"\r\n            label=\"Symbol\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            value={fields.symbol}\r\n            onChange={(e) => setFields(s => ({...s, symbol: e.target.value}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <FormControlLabel\r\n            control={<Checkbox />}\r\n            checked={fields.isCurrency}\r\n            onChange={(e, checked) => setFields(s => ({...s, isCurrency: checked}))}\r\n            label=\"Currency\"\r\n            labelPlacement=\"end\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            type=\"number\"\r\n            label=\"Precision\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={fields.precision}\r\n            onChange={(e) => setFields(s => ({...s, precision: parseInt(e.target.value)}))}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <TextField\r\n            type=\"number\"\r\n            label=\"Price Precision\"\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            required\r\n            value={fields.pricePrecision}\r\n            onChange={(e) => setFields(s => ({...s, pricePrecision: parseInt(e.target.value)}))}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </AddEditDialog>\r\n  );\r\n}\r\n\r\nexport default AddEditAssetDialog;","import clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\ninterface Props {\r\n  className?: string;\r\n  children?: React.ReactNode;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingTop: theme.spacing(2),\r\n    paddingBottom: theme.spacing(2),\r\n    paddingLeft: theme.spacing(4),\r\n    paddingRight: theme.spacing(4),\r\n  },\r\n}));\r\n\r\n/**\r\n * React component. A visual wrapper for a settings section, put contents as children.\r\n */\r\nfunction SettingsSection(props: Props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper component=\"section\" elevation={0} variant=\"outlined\" className={clsx(classes.root, props.className)}>\r\n      { props.children }\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default SettingsSection;","import { PropTypes } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Variant } from '@material-ui/core/styles/createTypography';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\ninterface Props {\r\n  title: string;\r\n  icon: JSX.Element;\r\n  variant?: Variant;\r\n  gutterBottom?: boolean;\r\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\r\n  buttonColor?: PropTypes.Color;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    marginLeft: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(0.5),\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n/**\r\n * A React component. A heading with an icon button on the right.\r\n * \r\n * Props:\r\n * - title: The title.\r\n * - variant: The variant for the Typography component. Default \"h6\".\r\n * - gutterBottom: Add margin to the Typography component.\r\n * - icon: The icon component.\r\n * - buttonColor: The color of the IconButton component.\r\n * - onClick: Callback when the icon button is clicked.\r\n */\r\nfunction IconButtonHeading({variant = 'h6', ...props}: Props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Typography variant={variant} gutterBottom={props.gutterBottom}>\r\n      { props.title }\r\n      <IconButton size=\"small\" onClick={props.onClick} color={props.buttonColor} className={classes.button}>\r\n        { props.icon }\r\n      </IconButton>\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default IconButtonHeading;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddEditAssetDialog, { FormFields } from './AddEditAssetDialog';\r\nimport SettingsSection from '../../components/SettingsSection';\r\nimport IconButtonHeading from '../../components/IconButtonHeading';\r\nimport { changeAccountingCurrency, selectActiveAccountAccountingCurrency } from './accountsSlice';\r\n\r\nfunction AccountMainSettings() {\r\n  const [accountingCurrencyDialogOpen, setAccountingCurrencyDialogOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const accountingCurrency = useSelector(selectActiveAccountAccountingCurrency);\r\n\r\n  const handleChangeAccountingCurrency = (fields: FormFields) => {\r\n    dispatch(changeAccountingCurrency({currency: fields}));\r\n    setAccountingCurrencyDialogOpen(false);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SettingsSection>\r\n        <IconButtonHeading\r\n          variant=\"h6\"\r\n          gutterBottom\r\n          title={'Accounting Currency'}\r\n          icon={<EditIcon fontSize=\"small\" />}\r\n          onClick={() => setAccountingCurrencyDialogOpen(true)}\r\n        />\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell align=\"center\">Ticker</TableCell>\r\n                <TableCell align=\"center\">Precision</TableCell>\r\n                <TableCell align=\"center\">Price Precision</TableCell>\r\n                <TableCell align=\"center\">Currency</TableCell>\r\n                <TableCell align=\"center\">Symbol</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell>{ accountingCurrency?.name }</TableCell>\r\n                <TableCell align=\"center\">{ accountingCurrency?.ticker }</TableCell>\r\n                <TableCell align=\"center\">{ accountingCurrency?.precision }</TableCell>\r\n                <TableCell align=\"center\">{ accountingCurrency?.pricePrecision }</TableCell>\r\n                <TableCell align=\"center\">{ accountingCurrency?.isCurrency ? 'Yes' : 'No' }</TableCell>\r\n                <TableCell align=\"center\">{ accountingCurrency?.symbol }</TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </SettingsSection>\r\n      <AddEditAssetDialog\r\n        open={accountingCurrencyDialogOpen}\r\n        onDialogClose={() => setAccountingCurrencyDialogOpen(false)}\r\n        asset={accountingCurrency}\r\n        onSubmit={handleChangeAccountingCurrency}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AccountMainSettings;","import { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\ninterface Props {\r\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\r\n  disabled?: boolean;\r\n  buttonSize?: 'small' | 'medium';\r\n  iconSize?: 'small' | 'inherit' | 'default' | 'large';\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    color: theme.palette.error.main,\r\n  },\r\n}));\r\n\r\nfunction DeleteButton(props: Props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <IconButton\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n      size={props.buttonSize}\r\n      className={classes.root}\r\n      aria-label=\"Delete\"\r\n    >\r\n      <DeleteIcon fontSize={props.iconSize} />\r\n    </IconButton>\r\n  );\r\n}\r\n\r\nexport default DeleteButton;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SettingsSection from '../../components/SettingsSection';\r\nimport IconButtonHeading from '../../components/IconButtonHeading';\r\nimport DeleteButton from '../../components/DeleteButton';\r\nimport AddEditAssetDialog, { FormFields } from './AddEditAssetDialog';\r\nimport { addAsset, editAsset, deleteAsset, selectActiveAccountAssets } from './accountsSlice';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  tableRow: {\r\n    cursor: 'pointer',\r\n  },\r\n}));\r\n\r\nfunction AccountAssetsSettings() {\r\n  const classes = useStyles();\r\n  const [addEditAssetDialogOpen, setAddEditAssetDialogOpen] = useState(false);\r\n  // Index of the Asset to edit when the edit asset button is clicked, set to -1 to add new asset\r\n  const [selectedAsset, setSelectedAsset] = useState(-1);\r\n  const dispatch = useDispatch();\r\n  const assets = useSelector(selectActiveAccountAssets);\r\n\r\n  const openAddAssetDialog = () => {\r\n    setSelectedAsset(-1);\r\n    setAddEditAssetDialogOpen(true);\r\n  };\r\n\r\n  const openEditAssetDialog = (index: number) => {\r\n    setSelectedAsset(index);\r\n    setAddEditAssetDialogOpen(true);\r\n  }\r\n\r\n  const handleAddEditAsset = (fields: FormFields) => {\r\n    if (selectedAsset < 0) {\r\n      dispatch(addAsset({asset: fields}));\r\n    } else {\r\n      dispatch(editAsset({index: selectedAsset, asset: fields}));\r\n    }\r\n    setAddEditAssetDialogOpen(false);\r\n  };\r\n\r\n  const handleDeleteAsset = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>, index: number) => {\r\n    dispatch(deleteAsset({index: index}));\r\n    e.stopPropagation();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SettingsSection>\r\n        <IconButtonHeading\r\n          variant=\"h6\"\r\n          gutterBottom\r\n          title={'Assets'}\r\n          icon={<AddIcon fontSize=\"small\" />}\r\n          onClick={openAddAssetDialog}\r\n        />\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell align=\"center\">Ticker</TableCell>\r\n                <TableCell align=\"center\">Precision</TableCell>\r\n                <TableCell align=\"center\">Price Precision</TableCell>\r\n                <TableCell align=\"center\">Currency</TableCell>\r\n                <TableCell align=\"center\">Symbol</TableCell>\r\n                <TableCell align=\"center\"></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {assets.map((a, i) =>\r\n                <TableRow hover className={classes.tableRow} onClick={() => openEditAssetDialog(i)} key={i}>\r\n                  <TableCell>{ a.name }</TableCell>\r\n                  <TableCell align=\"center\">{ a.ticker }</TableCell>\r\n                  <TableCell align=\"center\">{ a.precision }</TableCell>\r\n                  <TableCell align=\"center\">{ a.pricePrecision }</TableCell>\r\n                  <TableCell align=\"center\">{ a.isCurrency ? 'Yes' : 'No' }</TableCell>\r\n                  <TableCell align=\"center\">{ a.symbol }</TableCell>\r\n                  <TableCell align=\"center\" size=\"small\">\r\n                    <DeleteButton onClick={e => handleDeleteAsset(e, i)} />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </SettingsSection>\r\n      <AddEditAssetDialog\r\n        open={addEditAssetDialogOpen}\r\n        onDialogClose={() => setAddEditAssetDialogOpen(false)}\r\n        asset={assets[selectedAsset]}\r\n        onSubmit={handleAddEditAsset}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AccountAssetsSettings;","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Box from '@material-ui/core/Box';\r\nimport AddEditDialog from '../../components/AddEditDialog';\r\nimport { addDefaultJournal, editJournalSettings, selectActiveAccountJournals } from './accountsSlice';\r\nimport { Journal, JournalType } from '../../models/account';\r\n\r\ninterface FormFields {\r\n  name: string,\r\n  type: JournalType,\r\n}\r\n\r\nconst initialFormFields: FormFields = {\r\n  name: '',\r\n  type: 'trading',\r\n};\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  onDialogClose?: () => void;\r\n  index: number;\r\n}\r\n\r\n/**\r\n * React component. Add or change journal column dialog.\r\n * \r\n * Props:\r\n * - open: Dialog shows if true.\r\n * - onDialogClose: Function called when the dialog requests to be closed.\r\n * - index: The index of the journal selected to edit. Set to index out of range (use a negative number) to add new journal.\r\n */\r\nfunction AddEditJournalDialog(props: Readonly<Props>) {\r\n  const { open, onDialogClose, index } = props;\r\n  const [fields, setFields] = useState<FormFields>(initialFormFields);\r\n  const dispatch = useDispatch();\r\n  const journals = useSelector(selectActiveAccountJournals);\r\n  // journalIndex is set to -1 initially\r\n  const journal = journals[index] as Journal | undefined;\r\n\r\n  const handleReset = () => {\r\n    if (journal) {\r\n      setFields({\r\n        name: journal.name,\r\n        type: journal.type,\r\n      });\r\n    } else {\r\n      setFields(initialFormFields);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (journal) {\r\n      dispatch(editJournalSettings({index: index, name: fields.name, type: fields.type}));\r\n    } else {\r\n      dispatch(addDefaultJournal({name: fields.name, type: fields.type}));\r\n    }\r\n    onDialogClose?.();\r\n  };\r\n\r\n  return (\r\n    <AddEditDialog\r\n      objectName={'Journal'}\r\n      edit={Boolean(journal)}\r\n      open={open}\r\n      onClose={onDialogClose}\r\n      onEnter={handleReset}\r\n      onReset={handleReset}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <Box>\r\n        <TextField\r\n          type=\"text\"\r\n          label=\"Journal Name\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          required\r\n          value={fields.name}\r\n          onChange={(e) => setFields(s => ({...s, name: e.target.value}))}\r\n        />\r\n      </Box>\r\n      <Box mt={2}>\r\n        <TextField\r\n          select\r\n          label=\"Type\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          required\r\n          value={fields.type}\r\n          onChange={(e) => setFields(s => ({...s, type: e.target.value as JournalType}))}\r\n        >\r\n          <MenuItem value=\"trading\">Trading</MenuItem>\r\n          <MenuItem value=\"income\">Income</MenuItem>\r\n          <MenuItem value=\"expense\">Expense</MenuItem>\r\n        </TextField>\r\n      </Box>\r\n    </AddEditDialog>\r\n  );\r\n}\r\n\r\nexport default AddEditJournalDialog;","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport AddEditDialog from '../../components/AddEditDialog';\r\nimport { editJournalColumnOrder, selectActiveAccountJournals } from './accountsSlice';\r\nimport { JournalColumnRole, journalColumnRoleDisplay } from '../../models/account';\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  onDialogClose?: () => void;\r\n  index: number;\r\n}\r\n\r\n/**\r\n * Edit journal column order dialog React function component.\r\n * \r\n * Props:\r\n * - open: Dialog shows if true.\r\n * - onDialogClose: Function called when the dialog requests to be closed.\r\n * - index: The index of the journal of the column order to edit.\r\n */\r\nfunction EditJournalColumnOrderDialog(props: Readonly<Props>) {\r\n  const { index, onDialogClose, open } = props;\r\n  const dispatch = useDispatch();\r\n  const journals = useSelector(selectActiveAccountJournals);\r\n  // The actual column order in the global state\r\n  const columnOrder = journals[index]?.columnOrder ?? [];\r\n  // The edit column order in the dialog. Confirmed when the \"edit\" button is clicked.\r\n  const [dialogColumnOrder, setDialogColumnOrder] = useState<JournalColumnRole[]>(columnOrder);\r\n\r\n  const handleReset = () => {\r\n    setDialogColumnOrder(columnOrder);\r\n  };\r\n\r\n  const handleReorderColumn = (index: number, newIndex: number) => {\r\n    const newColumnOrder = [...dialogColumnOrder];\r\n    newColumnOrder.splice(newIndex, 0, newColumnOrder.splice(index, 1)[0]);\r\n    setDialogColumnOrder(newColumnOrder);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    dispatch(editJournalColumnOrder({index: index, columnOrder: dialogColumnOrder}));\r\n    onDialogClose?.();\r\n  };\r\n\r\n  return (\r\n    <AddEditDialog\r\n      objectName={'Column Order'}\r\n      edit={true}\r\n      open={open}\r\n      onClose={onDialogClose}\r\n      onEnter={handleReset}\r\n      onReset={handleReset}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <List>\r\n        {dialogColumnOrder.map((role, i) =>\r\n          <ListItem dense disableGutters divider key={role}>\r\n            <ListItemIcon>\r\n              <IconButton disabled={i === 0} onClick={() => handleReorderColumn(i, i - 1)}>\r\n                <ArrowUpwardIcon />\r\n              </IconButton>\r\n            </ListItemIcon>\r\n            <ListItemText primary={journalColumnRoleDisplay(role)} />\r\n            <ListItemSecondaryAction>\r\n              <IconButton edge=\"end\" disabled={i === dialogColumnOrder.length - 1} onClick={() => handleReorderColumn(i, i + 1)}>\r\n                <ArrowDownwardIcon />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        )}\r\n      </List>\r\n    </AddEditDialog>\r\n  );\r\n}\r\n\r\nexport default EditJournalColumnOrderDialog;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Box from '@material-ui/core/Box';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport AddEditJournalDialog from './AddEditJournalDialog';\r\nimport AddEditJournalColumnDialog from './AddEditJournalColumnDialog';\r\nimport EditJournalColumnOrderDialog from './EditJournalColumnOrderDialog';\r\nimport SettingsSection from '../../components/SettingsSection';\r\nimport IconButtonHeading from '../../components/IconButtonHeading';\r\nimport DeleteButton from '../../components/DeleteButton';\r\nimport { deleteJournal, deleteJournalColumn, selectActiveAccountJournals } from './accountsSlice';\r\nimport { Journal, JournalColumn, JournalColumnRole, journalColumnRoleDisplay } from '../../models/account';\r\n\r\ninterface JournalColumnRowProps {\r\n  role: JournalColumnRole;\r\n  journalIndex: number;\r\n  journalColumn: JournalColumn;\r\n  onClick?: React.MouseEventHandler<HTMLTableRowElement>;\r\n}\r\n\r\nconst useJournalColumnRowStyles = makeStyles(theme => ({\r\n  root: {\r\n    cursor: 'pointer',\r\n  },\r\n}));\r\n\r\nfunction JournalColumnRow(props: JournalColumnRowProps) {\r\n  const classes = useJournalColumnRowStyles();\r\n  const { role, journalIndex, journalColumn, onClick } = props;\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDeleteColumn = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    if (typeof role === 'number') {\r\n      dispatch(deleteJournalColumn({journalIndex: journalIndex, columnIndex: role}));\r\n    }\r\n    e.stopPropagation();\r\n  };\r\n\r\n  return (\r\n    <TableRow hover onClick={onClick} className={classes.root}>\r\n      <TableCell>{ journalColumnRoleDisplay(role) }</TableCell>\r\n      <TableCell>{ journalColumn.name }</TableCell>\r\n      <TableCell>{ journalColumn.type }</TableCell>\r\n      <TableCell align=\"center\">\r\n        {journalColumn.type === 'decimal' && (\r\n          Object.keys(journalColumn.precision).length === 0 ?\r\n            'Default' :\r\n            `${Object.keys(journalColumn.precision).length} mappings`\r\n        )}\r\n      </TableCell>\r\n      <TableCell align=\"center\">{ journalColumn.type === 'date' && journalColumn.format }</TableCell>\r\n      <TableCell align=\"center\">{ journalColumn.hide ? 'Yes' : 'No' }</TableCell>\r\n      <TableCell align=\"center\">\r\n        <DeleteButton\r\n          buttonSize=\"small\"\r\n          iconSize=\"small\"\r\n          disabled={typeof role !== 'number'}\r\n          onClick={handleDeleteColumn}\r\n        />\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n\r\ninterface JournalRowProps {\r\n  index: number;\r\n  journal: Journal;\r\n  onClick?: React.MouseEventHandler<HTMLTableRowElement>;\r\n  onAddColumn?: React.MouseEventHandler<HTMLButtonElement>;\r\n  onEditColumn?: (role: JournalColumnRole) => void;\r\n  onEditColumnOrder?: React.MouseEventHandler<HTMLButtonElement>;\r\n}\r\n\r\nconst useJournalRowStyles = makeStyles(theme => ({\r\n  mainRow: {\r\n    cursor: 'pointer',\r\n    '& > *': {                // select all children\r\n      borderBottom: 'none',   // remove the bottom border of the TableCell children\r\n    },\r\n  },\r\n  collapsibleCell: {\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n  columnOrderChip: {\r\n    marginRight: theme.spacing(0.5),\r\n    marginBottom: theme.spacing(0.5),\r\n  },\r\n}));\r\n\r\n/**\r\n * React component.\r\n * \r\n * Props:\r\n * - journal: The journal object of the row.\r\n * - index: The index of the journal in the account.\r\n * - onAddColumn: Callback when requested to add a new column.\r\n * - onEditColumn: Callback when requested to edit a column. Signature is (role).\r\n * - onEditColumnOrder: Callback when requested to edit the column order.\r\n * - onClick: Callback when the row is clicked.\r\n */\r\nfunction JournalRow(props: JournalRowProps) {\r\n  const classes = useJournalRowStyles();\r\n  const { journal, index, onAddColumn, onEditColumn, onEditColumnOrder, onClick } = props;\r\n  const [open, setOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const expandRow = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    setOpen(s => !s);\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const handleDeleteJournal = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    dispatch(deleteJournal({index: index}));\r\n    e.stopPropagation();\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <TableRow hover onClick={onClick} className={classes.mainRow}>\r\n        <TableCell>{journal.name}</TableCell>\r\n        <TableCell align=\"center\">{journal.type}</TableCell>\r\n        <TableCell align=\"center\" size=\"small\">\r\n          <IconButton aria-label=\"Expand row\" onClick={expandRow}>\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell align=\"center\" size=\"small\">\r\n          <DeleteButton onClick={handleDeleteJournal} />\r\n        </TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell colSpan={4} className={classes.collapsibleCell}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <IconButtonHeading\r\n                variant=\"h6\"\r\n                title={'Columns'}\r\n                icon={<AddIcon fontSize=\"small\" />}\r\n                onClick={onAddColumn}\r\n              />\r\n              <Table size=\"small\" aria-label=\"Journal columns\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Role</TableCell>\r\n                    <TableCell>Name</TableCell>\r\n                    <TableCell>Type</TableCell>\r\n                    <TableCell align=\"center\">Precision</TableCell>\r\n                    <TableCell align=\"center\">Date Format</TableCell>\r\n                    <TableCell align=\"center\">Hide</TableCell>\r\n                    <TableCell align=\"center\"></TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {Object.entries(journal.columns).map(([role, column]: [string, JournalColumn]) =>\r\n                    role !== 'extra' && <JournalColumnRow\r\n                      role={role as JournalColumnRole}\r\n                      journalIndex={index}\r\n                      journalColumn={column}\r\n                      onClick={() => onEditColumn?.(role as JournalColumnRole)}\r\n                      key={role}\r\n                    />\r\n                  )}\r\n                  {journal.columns.extra.map((column, colIndex: number) =>\r\n                    <JournalColumnRow\r\n                      role={colIndex}\r\n                      journalIndex={index}\r\n                      journalColumn={column}\r\n                      onClick={() => onEditColumn?.(colIndex)}\r\n                      key={colIndex}\r\n                    />\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n              <Box mt={1}>\r\n                <IconButtonHeading\r\n                  variant=\"h6\"\r\n                  title={'Column Order'}\r\n                  icon={<EditIcon fontSize=\"small\" />}\r\n                  onClick={onEditColumnOrder}\r\n                />\r\n                <Box display=\"flex\" flexWrap=\"wrap\">\r\n                  {journal.columnOrder.map(c =>\r\n                    <Chip label={journalColumnRoleDisplay(c)} className={classes.columnOrderChip} key={c} />\r\n                  )}\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n/**\r\n * See https://material-ui.com/components/tables/#collapsible-table.\r\n */\r\nfunction AccountJournalsSettings() {\r\n  const [addEditJournalDialogOpen, setAddEditJournalDialogOpen] = useState(false);\r\n  const [addEditJournalColumnDialogOpen, setAddEditJournalColumnDialogOpen] = useState(false);\r\n  const [editJournalColumnOrderDialogOpen, setEditJournalColumnOrderDialogOpen] = useState(false);\r\n  // Index of the Journal to edit when editing a journal setting. Set to -1 to add new journal.\r\n  const [selectedJournal, setSelectedJournal] = useState(-1);\r\n  // The \"role\" of the Journal Column to edit. Set to null to add new journal column.\r\n  const [selectedJournalColumn, setSelectedJournalColumn] = useState<JournalColumnRole | null>(null);\r\n  const journals = useSelector(selectActiveAccountJournals);\r\n\r\n  const openAddJournalDialog = () => {\r\n    setSelectedJournal(-1);\r\n    setAddEditJournalDialogOpen(true);\r\n  };\r\n\r\n  const openEditJournalDialog = (index: number) => {\r\n    setSelectedJournal(index);\r\n    setAddEditJournalDialogOpen(true);\r\n  };\r\n\r\n  const openAddColumnDialog = (index: number) => {\r\n    setSelectedJournal(index);\r\n    setSelectedJournalColumn(null);\r\n    setAddEditJournalColumnDialogOpen(true);\r\n  };\r\n\r\n  const openEditColumnDialog = (index: number, role: JournalColumnRole) => {\r\n    setSelectedJournal(index);\r\n    setSelectedJournalColumn(role);\r\n    setAddEditJournalColumnDialogOpen(true);\r\n  };\r\n\r\n  const openEditColumnOrderDialog = (index: number) => {\r\n    setSelectedJournal(index);\r\n    setEditJournalColumnOrderDialogOpen(true);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <SettingsSection>\r\n        <IconButtonHeading\r\n          variant=\"h6\"\r\n          title={'Journals'}\r\n          icon={<AddIcon fontSize=\"small\" />}\r\n          onClick={openAddJournalDialog}\r\n        />\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell align=\"center\">Type</TableCell>\r\n                <TableCell align=\"center\">Columns</TableCell>\r\n                <TableCell align=\"center\"></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {journals.map((j, i) =>\r\n                <JournalRow\r\n                  journal={j}\r\n                  index={i}\r\n                  onClick={() => openEditJournalDialog(i)}\r\n                  onAddColumn={() => openAddColumnDialog(i)}\r\n                  onEditColumn={role => openEditColumnDialog(i, role)}\r\n                  onEditColumnOrder={() => openEditColumnOrderDialog(i)}\r\n                  key={i}\r\n                />\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </SettingsSection>\r\n      <AddEditJournalDialog\r\n        open={addEditJournalDialogOpen}\r\n        onDialogClose={() => setAddEditJournalDialogOpen(false)}\r\n        index={selectedJournal}\r\n      />\r\n      <AddEditJournalColumnDialog\r\n        open={addEditJournalColumnDialogOpen}\r\n        onDialogClose={() => setAddEditJournalColumnDialogOpen(false)}\r\n        index={selectedJournal}\r\n        role={selectedJournalColumn}\r\n      />\r\n      <EditJournalColumnOrderDialog\r\n        open={editJournalColumnOrderDialogOpen}\r\n        onDialogClose={() => setEditJournalColumnOrderDialogOpen(false)}\r\n        index={selectedJournal}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default AccountJournalsSettings;","import Box from '@material-ui/core/Box';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AccountMainSettings from './AccountMainSettings';\r\nimport AccountAssetsSettings from './AccountAssetsSettings';\r\nimport AccountJournalsSettings from './AccountJournalsSettings';\r\n\r\nfunction AccountSettings() {\r\n  return (\r\n    <Container>\r\n      <Box my={2}>\r\n        <Typography variant=\"h4\">Account Settings</Typography>\r\n      </Box>\r\n      <Box my={2}>\r\n        <AccountMainSettings />\r\n      </Box>\r\n      <Box my={2}>\r\n        <AccountAssetsSettings />\r\n      </Box>\r\n      <Box my={2}>\r\n        <AccountJournalsSettings />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AccountSettings;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TopAppBar from './features/navigation/TopAppBar';\r\nimport SideDrawer from './features/navigation/SideDrawer';\r\nimport Journals from './features/journals/Journals';\r\nimport { addDefaultAccount } from './features/accounts/accountsSlice';\r\nimport CapitalChanges from './features/capital-changes/CapitalChanges';\r\nimport AssetStatements from './features/asset-statements/AssetStatements';\r\nimport AccountSettings from './features/accounts/AccountSettings';\r\n\r\nconst styles = {\r\n  root: {\r\n    // Allow content to grow\r\n    display: 'flex',\r\n  },\r\n  content: {\r\n    // Let content grow horizontally\r\n    flexGrow: 1,\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      drawerOpen: false,\r\n    };\r\n\r\n    this.openDrawer = this.openDrawer.bind(this);\r\n    this.closeDrawer = this.closeDrawer.bind(this);\r\n  }\r\n\r\n  openDrawer() {\r\n    this.setState({drawerOpen: true});\r\n  }\r\n\r\n  closeDrawer() {\r\n    this.setState({drawerOpen: false});\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Init with test data\r\n    this.props.dispatch(addDefaultAccount('Coinbase'));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.props.classes.root}>\r\n          <TopAppBar\r\n            onMenuClick={this.openDrawer}\r\n            drawerOpen={this.state.drawerOpen}\r\n          />\r\n          <aside>\r\n            <SideDrawer open={this.state.drawerOpen} onClose={this.closeDrawer} />\r\n          </aside>\r\n          <main className={this.props.classes.content}>\r\n            {/* Spacing with (height = top app bar height) so content is not clipped by the fixed app bar */}\r\n            <Toolbar />\r\n            <Switch>\r\n              <Route path=\"/journals\">\r\n                <Journals />\r\n              </Route>\r\n              <Route path=\"/capital-changes\">\r\n                <CapitalChanges />\r\n              </Route>\r\n              <Route path=\"/asset-statements\">\r\n                <AssetStatements />\r\n              </Route>\r\n              <Route path=\"/account-settings\">\r\n                <AccountSettings />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <Journals />\r\n              </Route>\r\n            </Switch>\r\n          </main>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(connect()(App));","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport type { RootState } from '../../app/store';\r\n\r\ninterface State {\r\n  user: string;\r\n}\r\n\r\nconst initialState: State = {\r\n  user: 'New User',\r\n}\r\n\r\nexport const navigationSlice = createSlice({\r\n  name: 'navigation',\r\n  initialState: initialState,\r\n  reducers: {\r\n    changeUser: (state, action: PayloadAction<string>) => {\r\n      state.user = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// Actions\r\nexport const { changeUser } = navigationSlice.actions;\r\n\r\n// Selectors\r\nexport const selectUser = (state: RootState) => state.navigation.user;\r\n\r\nexport default navigationSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport navigationReducer from '../features/navigation/navigationSlice';\r\nimport accountsReducer from '../features/accounts/accountsSlice';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    navigation: navigationReducer,\r\n    accounts: accountsReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport default store;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n// TODO: change to Browser router, deploy on another site.\r\n// import { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { HashRouter as Router } from \"react-router-dom\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CssBaseline />\r\n    <Provider store={store}>\r\n      {/* Use HashRouter only for GitHub Pages */}\r\n      {/* <Router basename={process.env.PUBLIC_URL}> */}\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}