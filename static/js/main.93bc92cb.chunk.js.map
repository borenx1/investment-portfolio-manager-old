{"version":3,"sources":["features/transactions/transactionsSlice.js","constants.js","features/navigation/TopAppBar.js","features/navigation/navigationSlice.js","features/navigation/SideDrawer.js","models/Tx.js","features/transactions/AddEditTransactionDialog.js","features/transactions/TransactionSheet.js","features/transactions/AddTransactionTypeForm.js","features/transactions/Transactions.js","features/capital-changes/CapitalChanges.js","features/journals/Journals.js","AppContent.js","models/Account.js","App.js","app/store.js","reportWebVitals.js","index.js"],"names":["transactionsSlice","createSlice","name","initialState","accounts","reducers","addAccount","state","action","payload","push","console","warn","addTransaction","account","txType","transaction","txTypes","transactions","actions","selectActiveAccountObject","activeAccount","navigation","length","selectActiveAccountName","drawerWidth","useStyles","makeStyles","theme","root","menuButton","marginRight","spacing","display","props","drawerOpen","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarDrawerOpen","marginLeft","width","enteringScreen","TopAppBar","classes","activeAccountName","useSelector","AppBar","position","className","clsx","Toolbar","IconButton","onClick","onMenuClick","color","aria-label","Typography","variant","navigationSlice","user","page","changeAccount","String","changePage","selectActiveAccount","selectPage","toolbar","alignItems","justifyContent","padding","mixins","whiteSpace","drawerClose","overflowX","breakpoints","up","SideDrawer","activePage","dispatch","useDispatch","Drawer","anchor","paper","open","onClose","Divider","List","component","ListItem","button","selected","ListItemIcon","ListItemText","primary","ListSubheader","inset","disableSticky","Tx","date","base","quote","buy","baseAmount","quoteAmount","feeBase","feeQuote","notes","misc","this","TransactionColumn","type","order","hide","precision","dateTimeFormat","AddEditTransactionDialog","useState","setDate","setBase","setQuote","trade","setTrade","setBaseAmount","setQuoteAmount","price","setPrice","fee","setFee","feeCurrency","setFeeCurrency","setNotes","handleSubmit","e","preventDefault","index","onDialogClose","resetForm","currentDateTime","Date","getTimezoneOffset","toISOString","slice","getCurrentLocalDateTime","Dialog","onEnter","log","edit","DialogTitle","DialogContent","onSubmit","Grid","container","item","xs","TextField","fullWidth","size","label","required","value","onChange","target","InputLabelProps","shrink","select","MenuItem","multiline","DialogActions","Button","fab","bottom","right","TransactionSheet","dialogOpen","setDialogOpen","dialogEdit","setDialogEdit","active","role","TableContainer","Paper","Table","table","TableHead","TableRow","TableCell","columns","TableBody","map","tx","align","Fab","AddTransactionTypeForm","Transactions","transactionTypes","React","activeTab","setActiveTab","Tabs","v","Tab","icon","CapitalChanges","Journals","AppContent","defaultAccountSettings","baseCurrency","defaultAssets","symbol","pricePrecision","defaultTxTypes","extra","App","openDrawer","bind","closeDrawer","setState","settings","assets","Fragment","content","Component","withStyles","flexGrow","connect","configureStore","reducer","navigationReducer","transactionsReducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CssBaseline","store","document","getElementById"],"mappings":"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","file":"static/js/main.93bc92cb.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const transactionsSlice = createSlice({\r\n  name: 'transactions',\r\n  initialState: {\r\n    accounts: [],   // Array of accounts\r\n  },\r\n  reducers: {\r\n    addAccount: (state, action) => {\r\n      if (action.payload) {\r\n        state.accounts.push(action.payload);\r\n      } else {\r\n        console.warn(`Attempted to add invalid account: ${action.payload}`);\r\n      }\r\n    },\r\n    addTransaction: (state, action) => {\r\n      // Takes payload: {account: activeAccountIndex, transaction: Tx, txType: Integer}\r\n      const account = state.accounts[action.payload.account];\r\n      const txType = action.payload.txType;\r\n      const transaction = action.payload.transaction;\r\n      account.txTypes[txType].transactions.push(transaction);\r\n    },\r\n  }\r\n});\r\n\r\n// Actions\r\nexport const { addAccount, addTransaction } = transactionsSlice.actions;\r\n\r\n// Selectors\r\nexport const selectAccounts = state => state.transactions.accounts;\r\nexport const selectActiveAccountObject = state => {\r\n  const accounts = state.transactions.accounts;\r\n  const activeAccount = state.navigation.activeAccount;\r\n  return activeAccount < accounts.length ? accounts[activeAccount] : null;\r\n}\r\nexport const selectActiveAccountName = state => {\r\n  const activeAccount = selectActiveAccountObject(state);\r\n  return activeAccount ? activeAccount.name : 'No account selected';\r\n}\r\n\r\nexport default transactionsSlice.reducer;","export const drawerWidth = '15rem';","import { useSelector } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { selectActiveAccountName } from '../transactions/transactionsSlice';\r\nimport { drawerWidth } from '../../constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    display: props => props.drawerOpen ? 'none' : 'initial'\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarDrawerOpen: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth})`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  }\r\n}));\r\n\r\nfunction TopAppBar(props) {\r\n  const classes = useStyles(props);\r\n  const activeAccountName = useSelector(selectActiveAccountName);\r\n  return (\r\n    <AppBar\r\n      position=\"fixed\"\r\n      className={clsx(classes.appBar, {\r\n        [classes.appBarDrawerOpen]: props.drawerOpen\r\n      })}\r\n    >\r\n      <Toolbar>\r\n        <IconButton\r\n          onClick={props.onMenuClick}\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n          className={classes.menuButton}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\">{ activeAccountName }</Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default TopAppBar;","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const navigationSlice = createSlice({\r\n  name: 'navigation',\r\n  initialState: {\r\n    user: 'New User',       // String or null\r\n    activeAccount: 0,       // Integer\r\n    page: 'transactions',   // String or null\r\n  },\r\n  reducers: {\r\n    changeAccount: (state, action) => {\r\n      state.activeAccount = action.payload ? String(action.payload) : null;\r\n    },\r\n    changePage: (state, action) => {\r\n      state.page = action.payload ? String(action.payload) : null;\r\n    },\r\n  }\r\n});\r\n\r\n// Actions\r\nexport const { changeAccount, changePage } = navigationSlice.actions;\r\n\r\n// Selectors\r\nexport const selectActiveAccount = state => state.navigation.activeAccount;\r\nexport const selectPage = state => state.navigation.page;\r\n\r\nexport default navigationSlice.reducer;","import { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport BookIcon from '@material-ui/icons/Book';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport { changePage, selectPage } from './navigationSlice';\r\nimport { drawerWidth } from '../../constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    \r\n  },\r\n  toolbar: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: theme.spacing(0, 1),\r\n    // Have the same height as the top app bar\r\n    ...theme.mixins.toolbar\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    whiteSpace: 'nowrap',   // Prevent text wrapping when closing the drawer\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerClose: {\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7),\r\n    // Have extra space for the scrollbar if needed\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  }\r\n}));\r\n\r\n/**\r\n * See\r\n * - https://material-ui.com/components/drawers/#mini-variant-drawer\r\n * - https://material-ui.com/api/drawer/\r\n * - https://github.com/mui-org/material-ui/blob/master/docs/src/pages/getting-started/templates/dashboard/Dashboard.js\r\n * - https://material-ui.com/getting-started/templates/dashboard/\r\n */\r\nfunction SideDrawer(props) {\r\n  const classes = useStyles();\r\n  const activePage = useSelector(selectPage);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Drawer\r\n      variant=\"permanent\"\r\n      anchor=\"left\"\r\n      classes={{\r\n        paper: clsx({\r\n          [classes.drawerOpen]: props.open,\r\n          [classes.drawerClose]: !props.open\r\n        })\r\n      }}\r\n      className={clsx(classes.drawer, {\r\n        [classes.drawerOpen]: props.open,\r\n        [classes.drawerClose]: !props.open\r\n      })}\r\n    >\r\n      <div className={classes.toolbar}>\r\n        <IconButton onClick={props.onClose}>\r\n          <ChevronLeftIcon />\r\n        </IconButton>\r\n      </div>\r\n      <Divider />\r\n      <List component=\"nav\" aria-label=\"// TODO\">\r\n        <ListItem\r\n          button\r\n          selected={activePage === 'transactions'}\r\n          onClick={() => dispatch(changePage('transactions'))}\r\n        >\r\n          <ListItemIcon>\r\n            <CreateIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Transactions\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          selected={activePage === 'capital-changes'}\r\n          onClick={() => dispatch(changePage('capital-changes'))}\r\n        >\r\n          <ListItemIcon>\r\n            <CreateIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Capital changes\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          selected={activePage === 'journals'}\r\n          onClick={() => dispatch(changePage('journals'))}\r\n        >\r\n          <ListItemIcon>\r\n            <BookIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Journals\" />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List component=\"nav\" aria-label=\"// TODO\">\r\n        <ListSubheader inset disableSticky={true}>Financials</ListSubheader>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <AssignmentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Monthly\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <AssignmentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Quarterly\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <AssignmentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Biyearly\" />\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <AssignmentIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Yearly\" />\r\n        </ListItem>\r\n      </List>\r\n      <Divider />\r\n      <List component=\"nav\" aria-label=\"Account settings\">\r\n        <ListItem button>\r\n          <ListItemIcon>\r\n            <SettingsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Account settings\" />\r\n        </ListItem>\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n\r\nexport default SideDrawer;","export class Tx {\r\n  /**\r\n   * Constructor for the Tx (Transaction) class.\r\n   * @param {String} date Date/time of the transaction.\r\n   * @param {String} base Base currency/asset.\r\n   * @param {String} quote Quote currency/asset.\r\n   * @param {Boolean} buy true if buy, false if sell.\r\n   * @param {Number} baseAmount Amount bought/sold.\r\n   * @param {Number} quoteAmount Amount paid/received.\r\n   * @param {Number} feeBase Fees in the base currency.\r\n   * @param {Number} feeQuote Fees in the quote currency.\r\n   * @param {String} notes User written notes.\r\n   * @param {Array} misc Extra properties, e.g. [{name: 'Exchange', value: 'NYSE'}].\r\n   */\r\n  constructor(\r\n    date,\r\n    base,\r\n    quote = 'USD',\r\n    buy = true,\r\n    baseAmount = 0,\r\n    quoteAmount = 0,\r\n    feeBase = 0,\r\n    feeQuote = 0,\r\n    notes = '',\r\n    misc = []\r\n  ) {\r\n    this.date = date;\r\n    this.base = base;\r\n    this.quote = quote;\r\n    this.buy = buy;\r\n    this.baseAmount = baseAmount;\r\n    this.quoteAmount = quoteAmount;\r\n    this.feeBase = feeBase;\r\n    this.feeQuote = feeQuote;\r\n    this.notes = notes;\r\n    this.misc = misc;\r\n  }\r\n}\r\n\r\nexport class TransactionColumn {\r\n  constructor(name, type, order, hide = false, precision = 2, dateTimeFormat = 'date') {\r\n    this.name = name;\r\n    this.type = type;\r\n    this.order = order;\r\n    this.hide = hide;\r\n    this.precision = precision;\r\n    this.dateTimeFormat = dateTimeFormat;\r\n  }\r\n}\r\n\r\nexport default Tx;","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { addTransaction } from './transactionsSlice';\r\nimport { selectActiveAccount } from '../navigation/navigationSlice';\r\nimport { Tx } from '../../models/Tx';\r\n\r\n/**\r\n * @returns The current local date and time in \"yyyy-mm-ddThh:mm:ss:SSS\" format\r\n */\r\nfunction getCurrentLocalDateTime() {\r\n  const currentDateTime = new Date();\r\n  return new Date(currentDateTime - currentDateTime.getTimezoneOffset() * 60 * 1000).toISOString().slice(0, 19);\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n\r\n  },\r\n}));\r\n\r\nfunction AddEditTransactionDialog(props) {\r\n  const classes = useStyles();\r\n  const [date, setDate] = useState('');\r\n  const [base, setBase] = useState('');\r\n  const [quote, setQuote] = useState('');\r\n  const [trade, setTrade] = useState('buy');\r\n  const [baseAmount, setBaseAmount] = useState('');\r\n  const [quoteAmount, setQuoteAmount] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n  const [fee, setFee] = useState(0);\r\n  const [feeCurrency, setFeeCurrency] = useState('quote');\r\n  const [notes, setNotes] = useState('');\r\n  const dispatch = useDispatch();\r\n  const activeAccount = useSelector(selectActiveAccount);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // TODO input validation\r\n    dispatch(addTransaction({\r\n      account: activeAccount,\r\n      txType: props.index,\r\n      transaction: new Tx(date, base, quote, trade === 'buy', baseAmount, quoteAmount, 0, fee, notes),\r\n    }));\r\n    props.onDialogClose();\r\n  };\r\n  const handleOpenDialog = () => {\r\n    // Init form fields according to add or edit mode\r\n    console.log(`Open dialog: ${props.edit ? 'Edit' : 'Add'} mode`);\r\n    if (props.edit) {\r\n      \r\n    } else {\r\n      resetForm();\r\n    }\r\n  }\r\n\r\n  const resetForm = () => {\r\n    setDate(getCurrentLocalDateTime());\r\n    setBase('');\r\n    setQuote('USD');\r\n    setTrade('buy');\r\n    setBaseAmount('');\r\n    setQuoteAmount('');\r\n    setPrice('');\r\n    setFee(0);\r\n    setFeeCurrency('quote');\r\n    setNotes('');\r\n  };\r\n\r\n  return (\r\n    <Dialog open={props.open} onClose={props.onDialogClose} onEnter={handleOpenDialog}>\r\n      <DialogTitle>{ `${props.edit ? 'Edit' : 'Add'} Transaction` }</DialogTitle>\r\n      <DialogContent>\r\n        <form onSubmit={handleSubmit}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                type=\"datetime-local\"\r\n                fullWidth\r\n                size=\"small\"\r\n                label=\"Date\"\r\n                required\r\n                value={date}\r\n                onChange={(e) => setDate(e.target.value)}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <TextField\r\n                type=\"number\"\r\n                fullWidth\r\n                size=\"small\"\r\n                label=\"Amount\"\r\n                required\r\n                value={baseAmount}\r\n                onChange={(e) => setBaseAmount(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                select\r\n                fullWidth\r\n                size=\"small\"\r\n                label=\"Asset\"\r\n                required\r\n                value={base}\r\n                onChange={(e) => setBase(e.target.value)}\r\n              >\r\n                <MenuItem value={'USD'}>{ 'USD' }</MenuItem>\r\n                <MenuItem value={'BTC'}>{ 'BTC' }</MenuItem>\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <TextField\r\n                type=\"number\"\r\n                fullWidth\r\n                size=\"small\"\r\n                label=\"Total\"\r\n                required\r\n                value={quoteAmount}\r\n                onChange={(e) => setQuoteAmount(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                select\r\n                fullWidth\r\n                size=\"small\"\r\n                label=\"Quote Currency\"\r\n                required\r\n                value={quote}\r\n                onChange={(e) => setQuote(e.target.value)}\r\n              >\r\n                <MenuItem value={'USD'}>{ 'USD' }</MenuItem>\r\n                <MenuItem value={'BTC'}>{ 'BTC' }</MenuItem>\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <TextField\r\n                type=\"number\"\r\n                fullWidth\r\n                size=\"small\"\r\n                label=\"Price\"\r\n                required\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                select\r\n                fullWidth\r\n                size=\"small\"\r\n                label=\"Trade Type\"\r\n                required\r\n                value={trade}\r\n                onChange={(e) => setTrade(e.target.value)}\r\n              >\r\n                <MenuItem value={'buy'}>{ 'Buy' }</MenuItem>\r\n                <MenuItem value={'sell'}>{ 'Sell' }</MenuItem>\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={8}>\r\n              <TextField\r\n                type=\"number\"\r\n                fullWidth\r\n                size=\"small\"\r\n                label=\"Fee\"\r\n                value={fee}\r\n                onChange={(e) => setFee(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              <TextField\r\n                select\r\n                fullWidth\r\n                size=\"small\"\r\n                label=\"Fee Currency\"\r\n                value={feeCurrency}\r\n                onChange={(e) => setFeeCurrency(e.target.value)}\r\n              >\r\n                <MenuItem value={'base'}>{ 'Base' }</MenuItem>\r\n                <MenuItem value={'quote'}>{ 'Quote' }</MenuItem>\r\n              </TextField>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                multiline\r\n                fullWidth\r\n                size=\"small\"\r\n                variant=\"outlined\"\r\n                label=\"Notes\"\r\n                value={notes}\r\n                onChange={(e) => setNotes(e.target.value)}\r\n              >\r\n                <MenuItem value={'base'}>{ 'Base' }</MenuItem>\r\n                <MenuItem value={'quote'}>{ 'Quote' }</MenuItem>\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={props.onDialogClose} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={resetForm} color=\"primary\">\r\n          Reset form\r\n        </Button>\r\n        <Button onClick={handleSubmit} color=\"primary\">\r\n          { props.edit ? 'Edit' : 'Add' }\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default AddEditTransactionDialog;","\r\nimport { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AddEditTransactionDialog from './AddEditTransactionDialog';\r\nimport { selectActiveAccountObject } from './transactionsSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction TransactionSheet(props) {\r\n  const classes = useStyles();\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [dialogEdit, setDialogEdit] = useState(false);\r\n  // const account = useSelector(selectActiveAccountObject);\r\n\r\n  const openAddDialog = () => {\r\n    setDialogEdit(false);\r\n    setDialogOpen(true);\r\n  };\r\n  const openEditDialog = (tx) => {\r\n    setDialogEdit(true);\r\n    setDialogOpen(true);\r\n  };\r\n\r\n  return props.active && (\r\n    <div role=\"tabpanel\">\r\n      <TableContainer component={Paper}>\r\n        <Table\r\n          size={'small'}\r\n          className={classes.table}\r\n          aria-label=\"simple table\"\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>{ props.txType.columns.date.name }</TableCell>\r\n              <TableCell>{ props.txType.columns.base.name }</TableCell>\r\n              <TableCell>{ props.txType.columns.quote.name }</TableCell>\r\n              <TableCell>{ props.txType.columns.trade.name }</TableCell>\r\n              <TableCell>{ props.txType.columns.baseAmount.name }</TableCell>\r\n              <TableCell>{ props.txType.columns.quoteAmount.name }</TableCell>\r\n              <TableCell>{ props.txType.columns.price.name }</TableCell>\r\n              <TableCell>{ props.txType.columns.notes.name }</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {props.txType.transactions.map((tx, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell align=\"right\">{tx.date}</TableCell>\r\n                <TableCell align=\"right\">{tx.base}</TableCell>\r\n                <TableCell align=\"right\">{tx.quote}</TableCell>\r\n                <TableCell>{tx.buy ? \"Buy\" : \"Sell\"}</TableCell>\r\n                <TableCell align=\"right\">{tx.baseAmount}</TableCell>\r\n                <TableCell align=\"right\">{tx.quoteAmount}</TableCell>\r\n                <TableCell align=\"right\">{tx.quoteAmount / tx.baseAmount}</TableCell>\r\n                <TableCell>{tx.notes}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Fab color=\"secondary\" className={classes.fab} onClick={() => openAddDialog()}>\r\n        <AddIcon />\r\n      </Fab>\r\n      <AddEditTransactionDialog\r\n        txType={props.txType}\r\n        index={props.index}\r\n        open={dialogOpen}\r\n        edit={dialogEdit}\r\n        onDialogClose={() => setDialogOpen(false)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default TransactionSheet;","import Typography from '@material-ui/core/Typography';\r\n\r\nfunction AddTransactionTypeForm(props) {\r\n\r\n  return props.active && (\r\n    <div role=\"tabpanel\">\r\n      <Typography variant=\"h3\">Add Transaction Type</Typography>\r\n    </div>\r\n  );\r\n}\r\n  \r\nexport default AddTransactionTypeForm;","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TransactionSheet from './TransactionSheet';\r\nimport AddTransactionTypeForm from './AddTransactionTypeForm';\r\nimport { selectActiveAccountObject } from './transactionsSlice';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // flexGrow: 1,\r\n    // backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nfunction Transactions(props) {\r\n  const classes = useStyles();\r\n  const account = useSelector(selectActiveAccountObject);\r\n  const dispatch = useDispatch();\r\n  const transactionTypes = account ? account.txTypes : [];\r\n  const [activeTab, setActiveTab] = React.useState(0);\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\">\r\n        <Tabs value={activeTab} onChange={(e, v) => setActiveTab(v)} aria-label=\"Transactions tab\">\r\n          {/* TODO update key */}\r\n          {/* TODO aria labels */}\r\n          {transactionTypes.map((txType, index) =>\r\n            <Tab label={txType['name']} key={index} />\r\n          )}\r\n          <Tab icon={<AddIcon />} />\r\n        </Tabs>\r\n      </AppBar>\r\n      {/* TODO update key */}\r\n      {transactionTypes.map((txType, index) =>\r\n        <TransactionSheet txType={txType} index={index} active={activeTab === index} key={index} />\r\n      )}\r\n      <AddTransactionTypeForm\r\n        index={transactionTypes.length}\r\n        active={activeTab === transactionTypes.length}\r\n        key={transactionTypes.length}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Transactions;","\r\n\r\nfunction CapitalChanges(props) {\r\n  return (\r\n    <p>Capital Changes</p>\r\n  );\r\n}\r\n  \r\nexport default CapitalChanges;","\r\n\r\nfunction Journals(props) {\r\n    return (\r\n      <p>Journals</p>\r\n    );\r\n  }\r\n    \r\n  export default Journals;","import { useSelector } from 'react-redux';\r\nimport Transactions from './features/transactions/Transactions';\r\nimport CapitalChanges from './features/capital-changes/CapitalChanges';\r\nimport Journals from './features/journals/Journals';\r\nimport { selectPage } from './features/navigation/navigationSlice';\r\n\r\nfunction AppContent(props) {\r\n  const activePage = useSelector(selectPage);\r\n  switch (activePage) {\r\n    case 'transactions':\r\n      return <Transactions {...props} />;\r\n    case 'capital-changes':\r\n      return <CapitalChanges {...props} />;\r\n    case 'journals':\r\n      return <Journals {...props} />;\r\n    default:\r\n      console.warn(`Unable to navigate to page: ${activePage}`);\r\n      return <Transactions {...props} />;\r\n  }\r\n}\r\n\r\nexport default AppContent;","import { Tx, TransactionColumn } from './Tx';\r\n\r\nconst defaultAccountSettings = {\r\n  baseCurrency: 'USD',\r\n};\r\nconst defaultAssets = [\r\n  {\r\n    symbol: 'BTC',\r\n    name: 'Bitcoin',\r\n    precision: 8,\r\n    pricePrecision: 2,\r\n  },\r\n];\r\nconst defaultTxTypes = [\r\n  {\r\n    name: 'Trading',\r\n    transactions: [\r\n      new Tx('01/01/2021', 'BTC', 'USD', true, 1, 50000, 0, 20, 'First transaction'),\r\n      new Tx('02/01/2021', 'BTC', 'USD', true, 0.5, 25000, 0, 10, 'Second transaction'),\r\n    ],\r\n    columns: {\r\n      date: new TransactionColumn('Date', Date, 0),\r\n      base: new TransactionColumn('Asset', String, 1),\r\n      trade: new TransactionColumn('Trade', String, 2),\r\n      baseAmount: new TransactionColumn('Amount', String, 3),\r\n      quote: new TransactionColumn('Quote', String, 4, true),\r\n      quoteAmount: new TransactionColumn('Total', String, 5),\r\n      price: new TransactionColumn('Price', String, 6),\r\n      feeBase: new TransactionColumn('Fee (Base)', String, 7, true),\r\n      feeQuote: new TransactionColumn('Fee', String, 8),\r\n      notes: new TransactionColumn('Notes', String, 9),\r\n      extra: [],\r\n    },\r\n  },\r\n  {\r\n    name: 'Misc fees',\r\n    transactions: [],\r\n    columns: {\r\n      date: new TransactionColumn('Date', Date, 0),\r\n      base: new TransactionColumn('Asset', String, 1),\r\n      trade: new TransactionColumn('Trade', String, 2),\r\n      baseAmount: new TransactionColumn('Amount', String, 3),\r\n      quote: new TransactionColumn('Quote', String, 4, true),\r\n      quoteAmount: new TransactionColumn('Total', String, 5),\r\n      price: new TransactionColumn('Price', String, 6),\r\n      feeBase: new TransactionColumn('Fee (Base)', String, 7, true),\r\n      feeQuote: new TransactionColumn('Fee', String, 8, true),\r\n      notes: new TransactionColumn('Notes', String, 9),\r\n      extra: [],\r\n    },\r\n  },\r\n];\r\n\r\nexport function account(name, settings = defaultAccountSettings, assets = defaultAssets, txTypes = defaultTxTypes,) {\r\n  return {name, settings, assets, txTypes};\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TopAppBar from './features/navigation/TopAppBar';\r\nimport SideDrawer from './features/navigation/SideDrawer';\r\nimport AppContent from './AppContent';\r\nimport { addAccount } from './features/transactions/transactionsSlice';\r\nimport { account } from './models/Account';\r\n\r\nconst styles = {\r\n  root: {\r\n    // Allow content to grow\r\n    display: 'flex',\r\n  },\r\n  content: {\r\n    // Let content grow horizontally\r\n    flexGrow: 1,\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      drawerOpen: false,\r\n    };\r\n\r\n    this.openDrawer = this.openDrawer.bind(this);\r\n    this.closeDrawer = this.closeDrawer.bind(this);\r\n  }\r\n\r\n  openDrawer() {\r\n    this.setState({drawerOpen: true});\r\n  }\r\n\r\n  closeDrawer() {\r\n    this.setState({drawerOpen: false});\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Init with test data\r\n    this.props.dispatch(addAccount(account('Coinbase')));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className={this.props.classes.root}>\r\n          <TopAppBar\r\n            onMenuClick={this.openDrawer}\r\n            drawerOpen={this.state.drawerOpen}\r\n          />\r\n          <aside>\r\n            <SideDrawer open={this.state.drawerOpen} onClose={this.closeDrawer} />\r\n          </aside>\r\n          <main className={this.props.classes.content}>\r\n            {/* Spacing with (height = top app bar height) so content is not clipped by the fixed app bar */}\r\n            <Toolbar />\r\n            <AppContent />\r\n          </main>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(connect()(App));","import { configureStore } from '@reduxjs/toolkit';\r\nimport navigationReducer from '../features/navigation/navigationSlice';\r\nimport transactionsReducer from '../features/transactions/transactionsSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    navigation: navigationReducer,\r\n    transactions: transactionsReducer,\r\n  },\r\n});","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <CssBaseline />\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}